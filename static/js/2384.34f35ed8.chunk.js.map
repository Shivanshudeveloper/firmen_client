{"version":3,"file":"static/js/2384.34f35ed8.chunk.js","mappings":"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","sources":["pages/extra-pages/Ticket.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Chip,\r\n  Container,\r\n  Dialog,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Stack,\r\n  Tab,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { CancelOutlined } from '@mui/icons-material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport { useTheme } from '@mui/styles';\r\nimport { useState } from 'react';\r\nimport { apiBaseURL } from 'src/config-global';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport { toast } from 'react-toastify';\r\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport { collection, firestore, storage } from 'src/Firebase';\r\nimport firebase from 'firebase/app';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@mui/material/Menu';\r\nimport { useRef } from 'react';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { SettingsContext } from 'src/App';\r\n// multiple select style\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst tabs = ['All', 'Open', 'Pending', 'Closed'];\r\nconst access = ['itadmin', 'admin'];\r\n\r\nconst ChatLog = ({ msg }) => {\r\n  const date = new Date(msg.createdOn || Date.now());\r\n  const dateArr = date.toDateString().split(' ');\r\n  const timeArr = date.toLocaleTimeString().split(' ');\r\n  return (\r\n    <Grid container item xs={12} padding={1}>\r\n      <Grid item xs={0.8}>\r\n        <Avatar alt=\"me\" src={msg.dp} sx={{ height: '30px', width: '30px' }} />\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <Typography variant=\"subtitle1\">{msg.from}</Typography>\r\n        <Typography variant=\"body1\">{msg.message}</Typography>\r\n      </Grid>\r\n      <Grid item xs={1.2}>\r\n        <Stack justifyContent=\"center\" alignItems=\"center\">\r\n          <Typography variant=\"caption\">{dateArr[1] + ' ' + dateArr[2]}</Typography>\r\n          <Typography variant=\"caption\">\r\n            {timeArr[0].split(':').slice(0, 2).join(':') + ' ' + timeArr[1]}\r\n          </Typography>\r\n        </Stack>\r\n      </Grid>\r\n      {msg.attachments.length !== 0 && (\r\n        <Grid item xs={12} justifyContent=\"space-between\" sx={{ width: '100%' }}>\r\n          {msg.attachments.map((file, index) => {\r\n            return (\r\n              <>\r\n                {/*  <img\r\n                                 key={file.name}\r\n                                 src={typeof file === 'string' ? file : URL.createObjectURL(file)}\r\n                                 alt=\"file\"\r\n                                 style={{ marginRight: '10px', width: '80px', height: '80px', objectFit: 'contain' }}\r\n                             /> */}\r\n                <a\r\n                  href={typeof file === 'string' ? file : URL.createObjectURL(file)}\r\n                  target=\"_blank\"\r\n                  // style={{ marginRight: '10px', width: '80px', height: '80px', objectFit: 'contain' }}\r\n                >\r\n                  {`Attachment ${index + 1}`}\r\n                </a>{' '}\r\n              </>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Ticket = () => {\r\n  const { user, getDataByRole } = useAuthContext();\r\n  const { globalSettings, setGlobalSettings } = useContext(SettingsContext);\r\n  const theme = useTheme();\r\n\r\n  const [socket, setSocket] = useState(null);\r\n  const [profileView, setProfileView] = useState(false);\r\n  const [menu, setMenu] = useState(false);\r\n  const [tabTitle, setTabTitle] = useState('All');\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentTicket, setCurrentTicket] = useState(null);\r\n  const [ticketType, setTicketType] = useState('myTickets');\r\n  const [tickets, setTickets] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [teamTabValue, setTeamTabValue] = React.useState('1');\r\n\r\n  const getAllEmployees = () => {\r\n    const queryRef = firestore.collection(collection).where('company', '==', user.company);\r\n    const temp = [];\r\n    queryRef.get().then((snapshot) => {\r\n      snapshot.forEach((doc) => {\r\n        let data = doc.data();\r\n        if (doc.id !== user.uid) {\r\n          data.uid = doc.id;\r\n          temp.push(data);\r\n        }\r\n      });\r\n      setAllEmployees(temp);\r\n    });\r\n  };\r\n\r\n  const handleTeamTabChange = (event, newValue) => {\r\n    event.preventDefault();\r\n    setTeamTabValue(newValue);\r\n    if (newValue === '1') {\r\n      getAllEmployees();\r\n    }\r\n  };\r\n\r\n  const [allEmployees, setAllEmployees] = useState([]);\r\n  const handleClickOpen = (e, formTitle) => {\r\n    getAllEmployees();\r\n    setSelectedEmployee('None');\r\n    setSelectedTasks([]);\r\n    setOpen(true);\r\n    setTitle(formTitle);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setDisableSelectedTasks(false);\r\n  };\r\n\r\n  const addMessage = (message, attachments, from, dp, email, index) => {\r\n    setMessages((prev) => [...prev, { from, message, attachments, dp, email }]);\r\n    setInput('');\r\n    setAttachments([]);\r\n    const createdOn = new Date().toISOString();\r\n    const chatData = {\r\n      from,\r\n      message,\r\n      attachments,\r\n      email,\r\n      dp,\r\n    };\r\n    if (attachments.length !== 0) return chatData;\r\n\r\n    axios.patch(`${apiBaseURL}/tickets/chat/${currentTicket._id}`, { chatData }).then((res) => {\r\n      setTickets((prev) => {\r\n        const ticket = prev[index];\r\n        ticket?.chats?.push({ ...chatData, createdOn });\r\n        prev[index] = ticket;\r\n        return prev;\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleQuery = (index, attachments) => async (e) => {\r\n    if (!input) return;\r\n    // console.log(index);\r\n    const to = user.email === currentTicket.email ? currentTicket.assigned : currentTicket.email;\r\n    sendMessage({\r\n      message: input,\r\n      attachments,\r\n      to,\r\n      from: user.displayName,\r\n      email: user.email,\r\n      dp: user.photoURL,\r\n      ticketId: currentTicket._id,\r\n      createdOn: new Date().toISOString(),\r\n    });\r\n    addMessage(input, attachments, user.displayName, user.photoURL, user.email, index);\r\n  };\r\n\r\n  const sendMessage = (data) => {\r\n    socket.emit('sendMessage', data);\r\n  };\r\n\r\n  const handleTabChange = (e) => {\r\n    setTabTitle(e.target.innerText);\r\n  };\r\n\r\n  const [ticketEmployees, setTicketEmployees] = useState(null);\r\n  const getEmployeesToAssign = () => {\r\n    firestore\r\n      .collection(collection)\r\n      .where('teams', 'array-contains-any', ['tickets'])\r\n      .get()\r\n      .then((snapshot) => {\r\n        const temp = [];\r\n        snapshot.forEach((doc) => {\r\n          let data = doc.data();\r\n          if (doc.id !== user.uid) {\r\n            data.uid = doc.id;\r\n            temp.push(data);\r\n          }\r\n        });\r\n        setTicketEmployees(temp);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmployeesToAssign();\r\n  }, []);\r\n\r\n  const assignTickets = async () => {\r\n    const data = { selectedEmployee, selectedTasks };\r\n    // console.log(data)\r\n    const res = await axios.patch(`${apiBaseURL}/tickets`, { formData: data });\r\n    if (res.data === selectedTasks.length) {\r\n      toast.success('Tickets Assigned to ' + selectedEmployee);\r\n      setCurrentTicket((prev) => ({\r\n        ...prev,\r\n        assigned: selectedEmployee,\r\n      }));\r\n      setTickets((prev) => {\r\n        selectedTasks.forEach((ticketId) => {\r\n          tickets.find(({ _id }) => _id === ticketId)['assigned'] = selectedEmployee;\r\n        });\r\n        return prev;\r\n      });\r\n      setSelectedEmployee('None');\r\n      setSelectedTasks([]);\r\n    }\r\n  };\r\n\r\n  const [disableSelectedTasks, setDisableSelectedTasks] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState('None');\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  const handleSelectedTasks = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSelectedTasks(value);\r\n  };\r\n\r\n  const [statusSelect, setStatusSelect] = useState('open');\r\n  const handleStatusChange = async (status) => {\r\n    const payload = currentTicket;\r\n    const res = await axios.patch(`${apiBaseURL}/tickets?operation=status`, {\r\n      formData: { _id: payload._id, status },\r\n    });\r\n    if (res.data === 1) {\r\n      tickets[payload.index].status = status;\r\n      setStatusSelect(status);\r\n      axios\r\n        .post(`${apiBaseURL}/email/send?service=ticket&event=${status}`, {\r\n          formData: {\r\n            to: payload.email,\r\n            ref: payload,\r\n            companyName: globalSettings.name,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const [privateReply, setPrivateReply] = useState(false);\r\n  const [privateMsg, setPrivateMsg] = useState('');\r\n\r\n  const addPrivateReply = async () => {\r\n    const tempTicket = currentTicket;\r\n    // const tempChat = currentChat;\r\n    const formData = {\r\n      ticketId: currentTicket._id,\r\n      // chatId: currentChat._id,\r\n      reply: {\r\n        email: user.email,\r\n        from: user.displayName,\r\n        dp: '',\r\n        message: privateMsg,\r\n      },\r\n    };\r\n    // console.log(formData);\r\n    const res = await axios.patch(`${apiBaseURL}/tickets/pvtreply`, { formData });\r\n    if (res.status === 200) {\r\n      // console.log(tempTicket.index, tempChat.index);\r\n      const temp = tickets[tempTicket.index].replies;\r\n      if (!temp) {\r\n        temp = [];\r\n      }\r\n      temp.push(formData.reply);\r\n      tickets[tempTicket.index]['replies'] = temp;\r\n      if (currentTicket?._id === tempTicket._id)\r\n        setCurrentTicket((prev) => ({ ...tickets[tempTicket.index], index: prev.index }));\r\n    }\r\n    setPrivateMsg('');\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const menuFlag = Boolean(anchorEl);\r\n  const openMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const filesInput = useRef();\r\n  const [attachments, setAttachments] = useState([]);\r\n\r\n  const uploadAttachments = (files) => {\r\n    const promises = files.map(\r\n      (file) =>\r\n        new Promise((resolve, reject) => {\r\n          const fileName = new Date().getTime() + file.name;\r\n          const storageRef = storage.ref();\r\n          const uploadTask = storageRef.child(`/Attachments/${fileName}`).put(file);\r\n          uploadTask.on(\r\n            'state_changed',\r\n            (snapshot) => {\r\n              const uploaded = Math.floor((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n              // setProgress(uploaded);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              uploadTask.snapshot.ref\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  resolve(url);\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            }\r\n          );\r\n        })\r\n    );\r\n    return promises;\r\n  };\r\n\r\n  const restrictedRoles = new Set(['admin', 'itadmin']); //to avoid task assignment to these roles\r\n  const [settings, setSettings] = useState(() =>\r\n    user.firestore.settings ? user.firestore.settings : {}\r\n  );\r\n  const saveSettings = () => {\r\n    // console.log(settings);\r\n    firestore\r\n      .collection(collection)\r\n      .doc(user.uid)\r\n      .update({ settings })\r\n      .then(() => {\r\n        toast.success(`Applied settings`);\r\n        user.firestore.settings = settings;\r\n      });\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('ticketUIContainer');\r\n    const dec = 60 + 8 * 3 * 2; //header.offsetheight + paddingY\r\n    container.style.height = `${window.innerHeight - dec}px`;\r\n    window.addEventListener('resize', () => {\r\n      container.style.height = `${window.innerHeight - dec}px`;\r\n    });\r\n    return () =>\r\n      window.removeEventListener('resize', () => {\r\n        console.log('window resize listener removed');\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBar = document.getElementById('searchBar');\r\n    const chatBox = document.getElementById('chatBox');\r\n    if (chatBox.scrollHeight > chatBox.offsetHeight) {\r\n      searchBar.style.position = 'sticky';\r\n    }\r\n    chatBox.scrollTop = chatBox.scrollHeight;\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (!currentTicket) return;\r\n    setMessages(currentTicket.chats);\r\n  }, [currentTicket]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    setSocket(\r\n      io(apiBaseURL, {\r\n        query: { email: user.email },\r\n      })\r\n    );\r\n\r\n    if (ticketType === 'myTickets') {\r\n      axios.get(`${apiBaseURL}/tickets/${user.company}?email=${user.email}`).then((res) => {\r\n        setTickets(res.data);\r\n        const fabricatedParam = { target: { innerText: 'Open' } };\r\n        handleTabChange(fabricatedParam);\r\n      });\r\n    } else {\r\n      // if (user.firestore.role === 'itadmin') {\r\n      if (access.includes(user.firestore.role)) {\r\n        axios.get(`${apiBaseURL}/tickets/${user.company}`).then((res) => {\r\n          setTickets(res.data);\r\n        });\r\n      } else {\r\n        axios.get(`${apiBaseURL}/tickets/${user.company}?assigned=${user.email}`).then((res) => {\r\n          setTickets(res.data);\r\n          const fabricatedParam = { target: { innerText: 'Open' } };\r\n          handleTabChange(fabricatedParam);\r\n        });\r\n      }\r\n    }\r\n  }, [user, ticketType]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    // listen for incoming messages\r\n    // console.log(`subscribed-rec`);\r\n    socket.on('recieveMessage', (data) => {\r\n      const { ticketId } = data;\r\n      // console.log(ticketId);\r\n      const ticket = tickets.find((ticket) => ticket._id === ticketId);\r\n      if (!ticket) return;\r\n      ticket.chats.push(data);\r\n      if (currentTicket?._id === ticketId) {\r\n        setCurrentTicket({\r\n          ...ticket,\r\n        });\r\n      }\r\n    });\r\n    return () => {\r\n      socket.off('recieveMessage');\r\n      // console.log(`unsubscribed-rec`);\r\n    };\r\n  }, [socket, tickets, currentTicket]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        fullScreen={title === 'Settings'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: title === 'Settings' ? null : '75vh',\r\n            overflowY: 'auto',\r\n          },\r\n        }}\r\n      >\r\n        <Container sx={{ mt: 3, mb: 3 }}>\r\n          <Card variant=\"outlined\">\r\n            <CardContent>\r\n              {title !== 'Team' ? (\r\n                <>\r\n                  <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Typography variant=\"h2\">{title}</Typography>\r\n                  </div>\r\n                  <br />\r\n                </>\r\n              ) : null}\r\n              {title === 'Assign Tickets' ? (\r\n                <>\r\n                  <Typography variant=\"p\">Select Employee</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      fullWidth\r\n                      id=\"demo-simple-select\"\r\n                      value={selectedEmployee}\r\n                      onChange={(e) => {\r\n                        setSelectedEmployee(e.target.value);\r\n                      }}\r\n                    >\r\n                      {ticketEmployees ? (\r\n                        <MenuItem value=\"None\">None</MenuItem>\r\n                      ) : (\r\n                        <MenuItem value=\"None\">No employee found</MenuItem>\r\n                      )}\r\n                      {ticketEmployees &&\r\n                        ticketEmployees.map((emp, index) => {\r\n                          return (\r\n                            <MenuItem key={emp.email} value={emp.email}>\r\n                              {emp.email}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br />\r\n                  <br />\r\n                  <Typography variant=\"p\">Select Tickets to assign.</Typography>\r\n                  <br />\r\n                  <FormControl disabled={disableSelectedTasks} fullWidth>\r\n                    <Select\r\n                      id=\"demo-multiple-chip\"\r\n                      multiple\r\n                      value={selectedTasks}\r\n                      onChange={handleSelectedTasks}\r\n                      input={<OutlinedInput id=\"select-multiple-chip\" label=\"Managers\" />}\r\n                      renderValue={(selected) => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          {selected.map((value) => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={tickets.find((ticket) => ticket._id === value).title}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {tickets.map(({ _id, title, assigned }) => {\r\n                        if (assigned) return;\r\n                        return (\r\n                          <MenuItem key={_id} value={_id} style={getStyles(title, tickets, theme)}>\r\n                            {title}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </>\r\n              ) : title === 'Team' ? (\r\n                <>\r\n                  <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                    <TabContext value={teamTabValue}>\r\n                      <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                        <TabList\r\n                          onChange={handleTeamTabChange}\r\n                          textColor=\"secondary\"\r\n                          indicatorColor=\"secondary\"\r\n                          aria-label=\"lab API tabs example\"\r\n                          centered\r\n                        >\r\n                          <Tab label=\"Team Members\" value=\"1\" />\r\n                          <Tab label=\"Add Members\" value=\"2\" />\r\n                        </TabList>\r\n                      </Box>\r\n                      <TabPanel value=\"1\">\r\n                        <List sx={{ p: 0 }}>\r\n                          {allEmployees.map((item, index) => {\r\n                            if (item.teams?.includes('tickets')) {\r\n                              return (\r\n                                <>\r\n                                  <ListItem\r\n                                    id={item.uid}\r\n                                    key={index}\r\n                                    sx={{ p: 0 }}\r\n                                    secondaryAction={\r\n                                      <IconButton\r\n                                        edge=\"end\"\r\n                                        aria-label=\"delete\"\r\n                                        sx={{ borderRadius: '50%' }}\r\n                                        onClick={() => {\r\n                                          firestore\r\n                                            .collection(collection)\r\n                                            .doc(item.uid)\r\n                                            .update({\r\n                                              teams:\r\n                                                firebase.firestore.FieldValue.arrayRemove(\r\n                                                  'tickets'\r\n                                                ),\r\n                                            })\r\n                                            .then((res) => {\r\n                                              const teamMem = document.getElementById(item.uid);\r\n                                              teamMem.style.display = 'none';\r\n                                            });\r\n                                        }}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    }\r\n                                  >\r\n                                    <ListItemAvatar>\r\n                                      <Avatar alt=\"DP\" src={item.photoURL} />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                      primary={item.displayName}\r\n                                      secondary={item.email}\r\n                                    />\r\n                                  </ListItem>\r\n                                  <Divider />\r\n                                </>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </List>\r\n                      </TabPanel>\r\n                      <TabPanel value=\"2\">\r\n                        <Typography variant=\"p\">Select Employees</Typography>\r\n                        <br />\r\n                        <FormControl fullWidth>\r\n                          <Select\r\n                            id=\"demo-multiple-chip\"\r\n                            multiple\r\n                            value={selectedTasks}\r\n                            onChange={handleSelectedTasks}\r\n                            input={<OutlinedInput id=\"select-multiple-chip\" label=\"Managers\" />}\r\n                            renderValue={(selected) => (\r\n                              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                                {selected.map((value) => (\r\n                                  <Chip key={value} label={value} />\r\n                                ))}\r\n                              </Box>\r\n                            )}\r\n                            MenuProps={MenuProps}\r\n                          >\r\n                            {allEmployees.map((item) => {\r\n                              if (!item.teams || item.teams.includes('tickets')) return;\r\n                              return (\r\n                                <MenuItem\r\n                                  key={item.email}\r\n                                  value={item.email}\r\n                                  style={getStyles(item.email, allEmployees, theme)}\r\n                                >\r\n                                  {item.email}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                          </Select>\r\n                        </FormControl>\r\n                      </TabPanel>\r\n                    </TabContext>\r\n                  </Box>\r\n                </>\r\n              ) : title === 'Settings' ? (\r\n                <>\r\n                  <br />\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"subtitle1\">Appoint a substitute:</Typography>\r\n                      <FormControl fullWidth>\r\n                        <Select\r\n                          fullWidth\r\n                          id=\"demo-simple-select\"\r\n                          value={settings.appointed ? settings.appointed : 'None'}\r\n                          onChange={(e) => {\r\n                            setSettings((prev) => ({\r\n                              ...prev,\r\n                              appointed: e.target.value,\r\n                            }));\r\n                          }}\r\n                        >\r\n                          {allEmployees ? (\r\n                            <MenuItem value=\"None\">None</MenuItem>\r\n                          ) : (\r\n                            <MenuItem value=\"None\">No employee found</MenuItem>\r\n                          )}\r\n                          {allEmployees &&\r\n                            allEmployees.map((emp, index) => {\r\n                              if (restrictedRoles.has(emp.role)) return;\r\n                              return (\r\n                                <MenuItem key={emp.email} value={emp.email}>\r\n                                  {`${emp.email} (${emp.role})`}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              ) : null}\r\n            </CardContent>\r\n            <CardActions sx={{ float: 'right' }} style={{ padding: '0px 20px 20px' }}>\r\n              <Button\r\n                onClick={() => {\r\n                  if (title === 'Settings')\r\n                    setSettings(user.firestore.settings ? user.firestore.settings : {});\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n              {teamTabValue !== '1' || title === 'Assign Tickets' ? (\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    if (title === 'Team') {\r\n                      const temp = allEmployees.filter((item) =>\r\n                        selectedTasks.includes(item.email)\r\n                      );\r\n                      const promises = [];\r\n                      temp.forEach((item) => {\r\n                        promises.push(\r\n                          firestore\r\n                            .collection(collection)\r\n                            .doc(item.uid)\r\n                            .update({ teams: firebase.firestore.FieldValue.arrayUnion('tickets') })\r\n                        );\r\n                      });\r\n                      Promise.all(promises).then((res) => {\r\n                        console.log('Teams Updated');\r\n                      });\r\n                      setTeamTabValue('1');\r\n                    } else if (title === 'Assign Tickets') {\r\n                      assignTickets();\r\n                    }\r\n                    handleClose();\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              ) : title === 'Settings' ? (\r\n                <Button size=\"small\" variant=\"contained\" onClick={saveSettings}>\r\n                  Save\r\n                </Button>\r\n              ) : null}\r\n            </CardActions>\r\n          </Card>\r\n        </Container>\r\n      </Dialog>\r\n\r\n      <FormControl>\r\n        {/* <FormLabel id=\"demo-controlled-radio-buttons-group\">Gender</FormLabel> */}\r\n        <RadioGroup\r\n          row\r\n          aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n          name=\"controlled-radio-buttons-group\"\r\n          value={ticketType}\r\n          onChange={(e) => {\r\n            setTicketType(e.target.value);\r\n          }}\r\n        >\r\n          <FormControlLabel value=\"myTickets\" control={<Radio />} label=\"My Tickets\" />\r\n          <FormControlLabel\r\n            value=\"assigned\"\r\n            control={<Radio />}\r\n            label={access.includes(user.firestore.role) ? 'All Tickets' : 'Assigned Tickets'}\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <br />\r\n      <br />\r\n\r\n      <div\r\n        id=\"ticketUIContainer\"\r\n        style={{ border: '2px solid #f0f0f0', borderRadius: '25px', overflowY: 'hidden' }}\r\n      >\r\n        <Grid container sx={{ height: '100%' }}>\r\n          {false && (\r\n            <>\r\n              <Grid item xs={3} sx={{ height: '100%' }}>\r\n                <Typography variant=\"subtitle1\" sx={{ mt: 2, ml: 2, alignItems: 'center' }}>\r\n                  Menu\r\n                </Typography>\r\n                <Divider />\r\n                <List sx={{ p: 0 }}>\r\n                  <ListItemButton\r\n                    onClick={(e) => {\r\n                      handleClickOpen(e, 'Team');\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{ width: '100%' }}\r\n                      onMouseOver={(e) => {\r\n                        e.target.style.color = 'blue';\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.target.style.color = '';\r\n                      }}\r\n                    >\r\n                      Team\r\n                    </Typography>\r\n                  </ListItemButton>\r\n                  <ListItemButton\r\n                    onClick={(e) => {\r\n                      getEmployeesToAssign();\r\n                      handleClickOpen(e, 'Assign Tickets');\r\n                      setSelectedTasks([]);\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{ width: '100%' }}\r\n                      onMouseOver={(e) => {\r\n                        e.target.style.color = 'blue';\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.target.style.color = '';\r\n                      }}\r\n                    >\r\n                      Assign Tickets\r\n                    </Typography>\r\n                  </ListItemButton>\r\n                </List>\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n            </>\r\n          )}\r\n          <Grid\r\n            container\r\n            item\r\n            xs={profileView || privateReply || menu ? 3 : 3.5}\r\n            spacing={2}\r\n            sx={{ height: '100%' }}\r\n          >\r\n            <Grid item xs={12} sx={{ height: '100%' }}>\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                sx={{ paddingX: '7px', paddingY: '5px' }}\r\n              >\r\n                {/* <Typography variant=\"body1\">Body1</Typography>\r\n                                <Typography variant=\"body2\">Body2</Typography>\r\n                                <Typography variant=\"subtitle1\">Subtitle1</Typography>\r\n                                <Typography variant=\"subtitle2\">Subtitle2</Typography>\r\n                                <Typography variant=\"caption\">Caption</Typography>\r\n                                <Typography variant=\"overline\">Overline</Typography>\r\n                                <Typography variant=\"button\">Button</Typography> */}\r\n                {access.includes(user?.firestore.role) && (\r\n                  <>\r\n                    <IconButton\r\n                      onClick={(e) => {\r\n                        // setMenu((prev) => !prev);\r\n                        openMenu(e);\r\n                      }}\r\n                      // sx={{ height: '16px', width: '10px', borderRadius: '20px', ml: '2px', mr: '4px' }}\r\n                    >\r\n                      <SettingsIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"basic-menu\"\r\n                      anchorEl={anchorEl}\r\n                      open={menuFlag}\r\n                      onClose={closeMenu}\r\n                      MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                      }}\r\n                    >\r\n                      <MenuItem\r\n                        onClick={(e) => {\r\n                          closeMenu();\r\n                          handleClickOpen(e, 'Team');\r\n                        }}\r\n                      >\r\n                        Team\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        onClick={(e) => {\r\n                          closeMenu();\r\n                          getEmployeesToAssign();\r\n                          handleClickOpen(e, 'Assign Tickets');\r\n                          setSelectedTasks([]);\r\n                        }}\r\n                      >\r\n                        Assign Tickets\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        onClick={(e) => {\r\n                          closeMenu();\r\n                          handleClickOpen(e, 'Settings');\r\n                        }}\r\n                      >\r\n                        Settings\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </>\r\n                )}\r\n                {tabs.map((tab) => (\r\n                  <Typography\r\n                    width=\"85%\"\r\n                    textAlign=\"center\"\r\n                    display={user?.firestore.role !== 'itadmin' && tab === 'All' ? 'none' : ''}\r\n                    variant=\"subtitle1\"\r\n                    name={tab}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      color: tabTitle === tab ? 'blue' : '',\r\n                      backgroundColor: tabTitle === tab ? '#ebecf0' : '',\r\n                      borderRadius: '50px',\r\n                    }}\r\n                    onClick={handleTabChange}\r\n                  >\r\n                    {tab}\r\n                  </Typography>\r\n                ))}\r\n              </Stack>\r\n              <Divider />\r\n              <List sx={{ backgroundColor: '#f5f6fa', py: 0, height: '98%', overflowY: 'auto' }}>\r\n                {tickets.map((ticket, index) => {\r\n                  if (tabTitle !== 'All' && ticket.status !== tabTitle.toLowerCase()) return;\r\n                  const dateArr = new Date(ticket.createdOn).toDateString().split(' ');\r\n                  // const dateArr = ticket.createdOn.toDateString().split(' ');\r\n                  return (\r\n                    <>\r\n                      <ListItemButton\r\n                        key={ticket._id}\r\n                        // selected={ticket._id === currentTicket?._id}\r\n                        sx={{\r\n                          px: 1,\r\n                          py: 1,\r\n                          backgroundColor:\r\n                            ticket._id === currentTicket?._id ? '#b2ccfe' : 'transparent',\r\n                        }}\r\n                        onClick={() => {\r\n                          if (ticket._id === currentTicket?._id) return;\r\n                          const searchBar = document.getElementById('searchBar');\r\n                          searchBar.style.position = 'absolute';\r\n                          searchBar.style.bottom = '0px';\r\n                          setPrivateReply(false);\r\n                          setCurrentTicket({ ...ticket, index });\r\n                          setStatusSelect(ticket.status);\r\n                        }}\r\n                      >\r\n                        <Grid container>\r\n                          <Grid\r\n                            container\r\n                            item\r\n                            xs={2}\r\n                            justifyContent=\"center\"\r\n                            sx={{ overflowX: 'clip' }}\r\n                          >\r\n                            <Avatar\r\n                              alt=\"user pic\"\r\n                              src={\r\n                                ticket.photoURL === user?.photoURL\r\n                                  ? ticket.assigned\r\n                                  : ticket.photoURL\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={10}>\r\n                            <Stack direction=\"row\" justifyContent=\"space-between\" width=\"100%\">\r\n                              <>\r\n                                {user?.firestore.role === 'itadmin' ? (\r\n                                  <div style={{ width: '75%' }}>\r\n                                    <Typography\r\n                                      variant=\"caption\"\r\n                                      noWrap\r\n                                      onClick={() => {\r\n                                        setMenu(false);\r\n                                        setProfileView(true);\r\n                                      }}\r\n                                      onMouseOver={(e) => {\r\n                                        e.target.style.color = 'blue';\r\n                                      }}\r\n                                      onMouseLeave={(e) => {\r\n                                        e.target.style.color = '';\r\n                                      }}\r\n                                    >\r\n                                      {ticket.name}\r\n                                    </Typography>\r\n                                  </div>\r\n                                ) : (\r\n                                  <Typography variant=\"caption\" style={{ width: '75%' }} noWrap>\r\n                                    #{ticket._id}\r\n                                  </Typography>\r\n                                )}\r\n                              </>\r\n                              <Typography\r\n                                variant=\"overline\"\r\n                                style={{ width: '25%', textAlign: 'right' }}\r\n                              >\r\n                                {dateArr[1] + ' ' + dateArr[2]}\r\n                              </Typography>\r\n                            </Stack>\r\n                            <Typography width=\"100%\" noWrap variant=\"subtitle1\">\r\n                              {ticket.title}\r\n                            </Typography>\r\n                            <Typography width=\"100%\" noWrap variant=\"subtitle2\">\r\n                              {ticket.desc}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItemButton>\r\n                      {index !== tickets.length - 1 && <Divider />}\r\n                    </>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider orientation=\"vertical\" flexItem />\r\n          <Grid\r\n            id=\"chatContainer\"\r\n            container\r\n            item\r\n            xs={profileView || privateReply || menu ? 5.96 : 8.46}\r\n            sx={{ height: '100%' }}\r\n          >\r\n            <Grid id=\"chatHeader\" item xs={12}>\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                sx={{ padding: '5px' }}\r\n              >\r\n                <div style={{ marginLeft: '16px' }}>\r\n                  {currentTicket ? (\r\n                    <Stack direction=\"row\">\r\n                      <Link\r\n                        onClick={() => {\r\n                          if (!currentTicket || !access.includes(user?.firestore.role)) return;\r\n                          setPrivateReply(true);\r\n                          // setCurrentChat((prev) => {\r\n                          //     let temp = [];\r\n                          //     currentTicket?.replies?.map((chat) => {\r\n                          //         if (chat.pvtReplies) {\r\n                          //             chat.pvtReplies.map((reply) => {\r\n                          //                 temp.push({ ...reply, chatId: chat._id });\r\n                          //             });\r\n                          //         }\r\n                          //     });\r\n                          //     temp.sort((a, b) => new Date(b.createdOn) - new Date(a.createdOn));\r\n                          //     return { pvtReplies: temp };\r\n                          // });\r\n                        }}\r\n                      >\r\n                        <Tooltip\r\n                          title={\r\n                            access.includes(user?.firestore.role)\r\n                              ? 'View all private replies'\r\n                              : 'Ticket Title'\r\n                          }\r\n                        >\r\n                          <Typography variant=\"h4\">\r\n                            {currentTicket?.title || 'Select a ticket'}\r\n                          </Typography>\r\n                        </Tooltip>\r\n                      </Link>\r\n                      {currentTicket?.assigned && (\r\n                        <Tooltip title={`Assigned to ${currentTicket?.assigned}`}>\r\n                          <img\r\n                            style={{\r\n                              marginLeft: '8px',\r\n                              height: '25px',\r\n                              width: '25px',\r\n                              float: 'right',\r\n                            }}\r\n                            src=\"https://img.icons8.com/color/25/null/checked--v1.png\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                    </Stack>\r\n                  ) : (\r\n                    <Typography variant=\"h4\">\r\n                      {currentTicket?.title || 'Select a ticket'}\r\n                    </Typography>\r\n                  )}\r\n                  <Typography variant=\"body1\">{currentTicket?.desc}</Typography>\r\n                </div>\r\n                {access.includes(user?.firestore.role) && (\r\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    {currentTicket && (\r\n                      <Button\r\n                        size=\"small\"\r\n                        onClick={(e) => {\r\n                          handleClickOpen(e, 'Assign Tickets');\r\n                          setDisableSelectedTasks(true);\r\n                          setSelectedTasks([currentTicket._id]);\r\n                        }}\r\n                      >\r\n                        {currentTicket?.assigned === null ? 'Assign' : 'Re-Assign'}\r\n                      </Button>\r\n                    )}\r\n                    {currentTicket && (\r\n                      <FormControl size=\"small\">\r\n                        <Select\r\n                          id=\"demo-simple-select\"\r\n                          value={statusSelect}\r\n                          onChange={(e) => {\r\n                            handleStatusChange(e.target.value);\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"open\">Open</MenuItem>\r\n                          <MenuItem value=\"pending\">Pending</MenuItem>\r\n                          <MenuItem value=\"closed\">Closed</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    )}\r\n                  </Stack>\r\n                )}\r\n              </Stack>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12} sx={{ height: '91%', paddingY: '4px' }}>\r\n              <div id=\"chatBox\" style={{ position: 'relative', overflowY: 'auto', height: '100%' }}>\r\n                {/* <Grid container rowSpacing={2}>\r\n                                    {messages?.map((message, index) => {\r\n                                        if (message.email === user.email) message.from = 'You';\r\n                                        return <ChatLog id={`chatLog-${index}`} key={index} msg={message} />;\r\n                                    })}\r\n                                </Grid> */}\r\n                <List sx={{ p: 0 }}>\r\n                  {messages?.map((message, index) => {\r\n                    if (message.email === user.email) message.from = 'You';\r\n                    return (\r\n                      <>\r\n                        <ListItemButton\r\n                          id={`chatLog-${message._id}`}\r\n                          sx={{\r\n                            p: 0,\r\n                            cursor: 'default',\r\n                            // backgroundColor: message.from === 'You' ? '#f0f0f0' : null\r\n                          }}\r\n                          // selected={message._id === currentChat?._id}\r\n                        >\r\n                          <ChatLog key={index} msg={message} />\r\n                          {/* <ListItemSecondaryAction sx={{ mr: '10%' }}>\r\n                                                        <IconButton\r\n                                                            sx={{ borderRadius: '50%' }}\r\n                                                            onClick={() => {\r\n                                                                setCurrentChat({ ...message, index });\r\n                                                                setPrivateReply(true);\r\n                                                            }}\r\n                                                        >\r\n                                                            <CommentIcon />\r\n                                                        </IconButton>\r\n                                                    </ListItemSecondaryAction> */}\r\n                        </ListItemButton>\r\n                        <Divider />\r\n                      </>\r\n                    );\r\n                  })}\r\n                </List>\r\n                <div\r\n                  id=\"searchBar\"\r\n                  style={{\r\n                    position: 'absolute',\r\n                    bottom: '0px',\r\n                    width: '100%',\r\n                    backgroundColor: '#ffffff',\r\n                  }}\r\n                >\r\n                  {attachments.length !== 0 && (\r\n                    <Grid item xs={12} justifyContent=\"space-evenly\">\r\n                      {Object.values(attachments).map((file) => {\r\n                        return (\r\n                          // <img\r\n                          //     key={file.name}\r\n                          //     src={typeof file === 'string' ? file : URL.createObjectURL(file)}\r\n                          //     alt=\"file\"\r\n                          //     style={{ marginRight: '10px', width: '80px', height: '80px', objectFit: 'contain' }}\r\n                          // />\r\n                          <Typography variant=\"caption\">{file.name}</Typography>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  )}\r\n                  <Stack\r\n                    direction=\"row\"\r\n                    spacing={2}\r\n                    justifyContent=\"center\"\r\n                    sx={{ width: '100%', paddingY: 1 }}\r\n                  >\r\n                    <TextField\r\n                      placeholder=\"Type your query here ...\"\r\n                      sx={{ width: '80%' }}\r\n                      value={input}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              sx={{ borderRadius: '50%' }}\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={(e) => filesInput.current.click()}\r\n                              // onMouseDown={handleMouseDownPassword}\r\n                              edge=\"end\"\r\n                            >\r\n                              <input\r\n                                ref={filesInput}\r\n                                type=\"file\"\r\n                                multiple\r\n                                hidden\r\n                                onChange={(e) => setAttachments(e.target.files)}\r\n                              />\r\n                              <AttachFileIcon />\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                      onChange={(e) => setInput(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      disabled={\r\n                        !currentTicket ||\r\n                        (user.firestore.role !== 'itadmin' && !currentTicket?.assigned)\r\n                      }\r\n                      variant=\"contained\"\r\n                      onClick={(e) => {\r\n                        if (attachments.length) {\r\n                          // console.log(Object.values(attachments))\r\n                          const tempTicket = currentTicket;\r\n                          const chatData = addMessage(\r\n                            input,\r\n                            Object.values(attachments),\r\n                            user.displayName,\r\n                            user.photoURL,\r\n                            user.email,\r\n                            currentTicket?.index\r\n                          );\r\n\r\n                          const promises = uploadAttachments(Object.values(attachments));\r\n                          Promise.all(promises).then((urls) => {\r\n                            // handleQuery(currentTicket?.index, urls)()\r\n                            const to =\r\n                              user.email === tempTicket.email\r\n                                ? tempTicket.assigned\r\n                                : tempTicket.email;\r\n                            sendMessage({\r\n                              message: input,\r\n                              attachments: urls,\r\n                              to,\r\n                              from: user.displayName,\r\n                              email: user.email,\r\n                              dp: user.photoURL,\r\n                              ticketId: tempTicket._id,\r\n                              createdOn: new Date().toISOString(),\r\n                            });\r\n                            chatData.attachments = urls;\r\n                            axios\r\n                              .patch(`${apiBaseURL}/tickets/chat/${tempTicket._id}`, { chatData })\r\n                              .then((res) => {\r\n                                setTickets((prev) => {\r\n                                  const ticket = prev[tempTicket?.index];\r\n                                  ticket?.chats?.push({\r\n                                    ...chatData,\r\n                                    createdOn: new Date().toISOString(),\r\n                                  });\r\n                                  prev[tempTicket?.index] = ticket;\r\n                                  return prev;\r\n                                });\r\n                              });\r\n                          });\r\n                        } else {\r\n                          handleQuery(currentTicket?.index, [])();\r\n                        }\r\n                      }}\r\n                    >\r\n                      Send\r\n                    </Button>\r\n                  </Stack>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          {profileView && (\r\n            <>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid container item xs={3} sx={{ height: '100%' }}>\r\n                <Grid item xs={12}>\r\n                  <IconButton\r\n                    sx={{ float: 'right', borderRadius: '50%' }}\r\n                    onClick={() => setProfileView(false)}\r\n                  >\r\n                    <CancelOutlined />\r\n                  </IconButton>\r\n                  {currentTicket && (\r\n                    <center style={{ padding: '40px 0px' }}>\r\n                      <Avatar\r\n                        alt=\"profile user\"\r\n                        src={currentTicket.photoURL}\r\n                        sx={{ width: 75, height: 75 }}\r\n                      />\r\n                      <br />\r\n                      <Typography variant=\"h3\">{currentTicket.name}</Typography>\r\n                      {/* <Typography variant=\"caption\">Customer</Typography> */}\r\n                    </center>\r\n                  )}\r\n                  <Divider />\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )}\r\n          {privateReply && (\r\n            <>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid container item xs={3} sx={{ px: 1, height: '100%' }}>\r\n                <Grid item xs={12} sx={{ height: '28%' }}>\r\n                  <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography variant=\"caption\">All private replies</Typography>\r\n                    <IconButton\r\n                      sx={{ borderRadius: '50%' }}\r\n                      onClick={() => {\r\n                        // setCurrentChat(null);\r\n                        setPrivateReply(false);\r\n                      }}\r\n                    >\r\n                      <CancelOutlined />\r\n                    </IconButton>\r\n                  </Stack>\r\n                  {currentTicket && (\r\n                    <>\r\n                      <TextField\r\n                        // disabled={!currentChat?._id}\r\n                        fullWidth\r\n                        multiline\r\n                        rows={3}\r\n                        value={privateMsg}\r\n                        onChange={(e) => setPrivateMsg(e.target.value)}\r\n                      />\r\n                      <Button\r\n                        disabled={!privateMsg}\r\n                        size=\"small\"\r\n                        sx={{ float: 'right', mt: 1 }}\r\n                        variant=\"contained\"\r\n                        onClick={addPrivateReply}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ height: '72%' }}>\r\n                  <List dense={true} sx={{ p: 0, height: '100%', overflowY: 'auto' }}>\r\n                    {currentTicket?.replies?.map((msg) => {\r\n                      if (msg.email !== user.email) return;\r\n                      const date = new Date(msg.createdOn || Date.now());\r\n                      const dateArr = date.toDateString().split(' ');\r\n                      const timeArr = date.toLocaleTimeString().split(' ');\r\n                      return (\r\n                        <>\r\n                          {/* <ListItemAvatar>\r\n                                                            <Avatar src=\"img\" alt=\"sender dp\" />\r\n                                                        </ListItemAvatar> */}\r\n                          {/* <ListItemText primary={msg.from} secondary={msg.message} /> */}\r\n                          <ListItem sx={{ p: 0 }}>\r\n                            <div style={{ width: '100%' }}>\r\n                              <Typography variant=\"body1\">{msg.message}</Typography>\r\n                              <Stack\r\n                                sx={{ width: '100%' }}\r\n                                direction=\"row\"\r\n                                justifyContent=\"flex-end\"\r\n                                alignItems=\"center\"\r\n                              >\r\n                                <Typography variant=\"caption\" sx={{ mr: 1 }}>\r\n                                  {dateArr[1] + ' ' + dateArr[2]}\r\n                                </Typography>\r\n                                <Typography variant=\"caption\">\r\n                                  {timeArr[0].split(':').slice(0, 2).join(':') + ' ' + timeArr[1]}\r\n                                </Typography>\r\n                              </Stack>\r\n                            </div>\r\n                          </ListItem>\r\n                          {/* <ListItemSecondaryAction>\r\n                                                            \r\n                                                        </ListItemSecondaryAction> */}\r\n                          <Divider />\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n"],"names":["getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","tabs","access","ChatLog","_ref","msg","date","Date","createdOn","now","dateArr","toDateString","split","timeArr","toLocaleTimeString","_jsxs","Grid","container","item","xs","padding","children","_jsx","Avatar","alt","src","dp","sx","height","Typography","variant","from","message","Stack","justifyContent","alignItems","slice","join","attachments","length","map","file","index","_Fragment","href","URL","createObjectURL","target","concat","_currentTicket$replie","_useAuthContext","useAuthContext","user","_useContext","getDataByRole","useContext","SettingsContext","globalSettings","setGlobalSettings","useTheme","_useState","useState","_useState2","_slicedToArray","socket","setSocket","_useState3","_useState4","profileView","setProfileView","_useState5","_useState6","menu","setMenu","_useState7","_useState8","tabTitle","setTabTitle","_useState9","_useState10","input","setInput","_useState11","_useState12","messages","setMessages","_useState13","_useState14","currentTicket","setCurrentTicket","_useState15","_useState16","ticketType","setTicketType","_useState17","_useState18","tickets","setTickets","_React$useState","React","_React$useState2","open","setOpen","_React$useState3","_React$useState4","title","setTitle","_React$useState5","_React$useState6","teamTabValue","setTeamTabValue","getAllEmployees","queryRef","firestore","collection","where","company","temp","get","then","snapshot","forEach","doc","data","id","uid","push","setAllEmployees","_useState19","_useState20","allEmployees","handleClickOpen","e","formTitle","setSelectedEmployee","setSelectedTasks","handleClose","setDisableSelectedTasks","addMessage","email","prev","_toConsumableArray","setAttachments","toISOString","chatData","axios","apiBaseURL","_id","res","_ticket$chats","ticket","chats","_objectSpread","sendMessage","emit","handleTabChange","innerText","_useState21","_useState22","ticketEmployees","setTicketEmployees","getEmployeesToAssign","useEffect","assignTickets","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","next","selectedEmployee","selectedTasks","formData","sent","toast","assigned","ticketId","find","_ref4","stop","apply","arguments","_useState23","_useState24","disableSelectedTasks","_useState25","_useState26","_useState27","_useState28","handleSelectedTasks","event","value","_useState29","_useState30","statusSelect","setStatusSelect","handleStatusChange","_ref5","_callee3","status","payload","_context3","to","ref","companyName","console","log","_x2","_useState31","_useState32","privateReply","setPrivateReply","_useState33","_useState34","privateMsg","setPrivateMsg","addPrivateReply","_ref6","_callee4","tempTicket","_context4","reply","displayName","replies","_readOnlyError","_useState35","_useState36","anchorEl","setAnchorEl","menuFlag","Boolean","closeMenu","filesInput","useRef","_useState37","_useState38","restrictedRoles","Set","_useState39","settings","_useState40","setSettings","document","getElementById","window","innerHeight","addEventListener","removeEventListener","searchBar","chatBox","scrollHeight","offsetHeight","position","scrollTop","io","query","includes","role","on","off","Dialog","maxWidth","fullWidth","fullScreen","onClose","overflowY","Container","mt","mb","Card","CardContent","display","FormControl","Select","onChange","MenuItem","emp","disabled","multiple","OutlinedInput","label","renderValue","selected","Box","flexWrap","gap","Chip","_ref7","TabContext","borderBottom","borderColor","TabList","newValue","preventDefault","textColor","indicatorColor","centered","Tab","TabPanel","List","p","_item$teams","teams","ListItem","secondaryAction","IconButton","edge","borderRadius","onClick","update","firebase","DeleteIcon","ListItemAvatar","photoURL","ListItemText","primary","secondary","Divider","appointed","has","CardActions","float","Button","size","filter","promises","Promise","all","RadioGroup","row","FormControlLabel","control","Radio","border","spacing","direction","paddingX","paddingY","currentTarget","SettingsIcon","Menu","MenuListProps","tab","textAlign","cursor","color","backgroundColor","py","toLowerCase","ListItemButton","px","bottom","overflowX","noWrap","onMouseOver","onMouseLeave","desc","orientation","flexItem","marginLeft","Link","Tooltip","Object","values","TextField","placeholder","InputProps","endAdornment","InputAdornment","current","click","type","hidden","files","AttachFileIcon","resolve","reject","fileName","getTime","uploadTask","storage","child","put","Math","floor","bytesTransferred","totalBytes","error","getDownloadURL","url","catch","err","urls","_ticket$chats2","_ref2","_callee","_context","abrupt","_x","handleQuery","CancelOutlined","multiline","rows","dense","mr"],"sourceRoot":""}