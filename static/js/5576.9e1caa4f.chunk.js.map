{"version":3,"file":"static/js/5576.9e1caa4f.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.js","components/custom-breadcrumbs/CustomBreadcrumbs.js","sections/_examples/mui/dialog/FormDialogs.js","sections/_examples/mui/dialog/AlertDialog.js","sections/_examples/mui/dialog/ScrollDialog.js","sections/_examples/mui/dialog/SimpleDialogs.js","sections/_examples/mui/dialog/MaxWidthDialog.js","sections/_examples/mui/dialog/FullScreenDialogs.js","sections/_examples/mui/dialog/TransitionsDialogs.js","pages/components/mui/MUIDialogPage.js","sections/_examples/Block.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} to={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\r\n//\r\nimport LinkItem from './LinkItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\r\n    />\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// @mui\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FormDialogs() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"warning\" onClick={handleClickOpen}>\r\n        Form Dialogs\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            fullWidth\r\n            type=\"email\"\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            label=\"Email Address\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} variant=\"contained\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// @mui\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"info\" variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>{`Use Google's location service?`}</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleClose} autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useRef, useEffect } from 'react';\r\n// @mui\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ScrollDialog() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [scroll, setScroll] = useState('paper');\r\n\r\n  const handleClickOpen = (scrollType) => () => {\r\n    setOpen(true);\r\n    setScroll(scrollType);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen('paper')} sx={{ mr: 2 }}>\r\n        scroll=paper\r\n      </Button>\r\n\r\n      <Button variant=\"outlined\" onClick={handleClickOpen('body')}>\r\n        scroll=body\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={handleClose} scroll={scroll}>\r\n        <DialogTitle sx={{ pb: 2 }}>Subscribe</DialogTitle>\r\n\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            {[...new Array(50)]\r\n              .map(\r\n                () => `Cras mattis consectetur purus sit amet fermentum.\r\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\r\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`\r\n              )\r\n              .join('\\n')}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  List,\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Typography,\r\n  DialogTitle,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\n\r\nexport default function SimpleDialog() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [selectedValue, setSelectedValue] = useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ textAlign: 'center' }}>\r\n      <Typography variant=\"subtitle1\" component=\"div\">\r\n        Selected: {selectedValue}\r\n      </Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n\r\n      <Dialog open={open} onClose={() => handleClose(selectedValue)}>\r\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n        <List>\r\n          {emails.map((email) => (\r\n            <ListItemButton onClick={() => handleClose(email)} key={email}>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  sx={{\r\n                    color: 'info.main',\r\n                    backgroundColor: 'info.lighter',\r\n                  }}\r\n                >\r\n                  <Iconify icon=\"eva:person-fill\" />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={email} />\r\n            </ListItemButton>\r\n          ))}\r\n\r\n          <ListItemButton autoFocus onClick={() => handleClose('addAccount')}>\r\n            <ListItemAvatar>\r\n              <Avatar>\r\n                <Iconify icon=\"eva:plus-fill\" />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Add account\" />\r\n          </ListItemButton>\r\n        </List>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  Select,\r\n  Switch,\r\n  MenuItem,\r\n  InputLabel,\r\n  DialogTitle,\r\n  FormControl,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControlLabel,\r\n  DialogContentText,\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MaxWidthDialog() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [fullWidth, setFullWidth] = useState(true);\r\n\r\n  const [maxWidth, setMaxWidth] = useState('sm');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMaxWidthChange = (event) => {\r\n    setMaxWidth(\r\n      // @ts-expect-error autofill of arbitrary value is not handled.\r\n      event.target.value\r\n    );\r\n  };\r\n\r\n  const handleFullWidthChange = (event) => {\r\n    setFullWidth(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Max Width Dialog\r\n      </Button>\r\n\r\n      <Dialog open={open} maxWidth={maxWidth} onClose={handleClose} fullWidth={fullWidth}>\r\n        <DialogTitle>Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            sx={{\r\n              margin: 'auto',\r\n              display: 'flex',\r\n              width: 'fit-content',\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            <FormControl sx={{ mt: 2, minWidth: 120 }}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                label=\"maxWidth\"\r\n                inputProps={{\r\n                  name: 'max-width',\r\n                  id: 'max-width',\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\r\n              label=\"Full width\"\r\n              sx={{ mt: 1 }}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"contained\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { forwardRef, useState } from 'react';\r\n// @mui\r\nimport {\r\n  List,\r\n  Slide,\r\n  Button,\r\n  Dialog,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  ListItemText,\r\n  ListItemButton,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function FullScreenDialogs() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"outlined\" color=\"error\" onClick={handleClickOpen}>\r\n        Full Screen Dialogs\r\n      </Button>\r\n\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar position=\"relative\">\r\n          <Toolbar>\r\n            <IconButton color=\"inherit\" edge=\"start\" onClick={handleClose}>\r\n              <Iconify icon=\"eva:close-fill\" />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" sx={{ flex: 1, ml: 2 }}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              Save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItemButton>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItemButton>\r\n\r\n          <Divider />\r\n\r\n          <ListItemButton>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItemButton>\r\n        </List>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import { forwardRef, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Slide,\r\n  Dialog,\r\n  Button,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function TransitionsDialogs() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"success\" onClick={handleClickOpen}>\r\n        Transitions Dialogs\r\n      </Button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{`Use Google's location service?`}</DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button color=\"inherit\" onClick={handleClose}>\r\n            Disagree\r\n          </Button>\r\n\r\n          <Button variant=\"contained\" onClick={handleClose}>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Box, Container } from '@mui/material';\r\nimport { Masonry } from '@mui/lab';\r\n// routes\r\nimport { PATH_PAGE } from '../../../routes/paths';\r\n// components\r\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\r\n// sections\r\nimport FormDialogs from '../../../sections/_examples/mui/dialog/FormDialogs';\r\nimport AlertDialog from '../../../sections/_examples/mui/dialog/AlertDialog';\r\nimport ScrollDialog from '../../../sections/_examples/mui/dialog/ScrollDialog';\r\nimport SimpleDialogs from '../../../sections/_examples/mui/dialog/SimpleDialogs';\r\nimport MaxWidthDialog from '../../../sections/_examples/mui/dialog/MaxWidthDialog';\r\nimport FullScreenDialogs from '../../../sections/_examples/mui/dialog/FullScreenDialogs';\r\nimport TransitionsDialogs from '../../../sections/_examples/mui/dialog/TransitionsDialogs';\r\nimport { Block } from '../../../sections/_examples/Block';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst style = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MUIDialogPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> MUI Components: Dialog | Minimal UI</title>\r\n      </Helmet>\r\n\r\n      <Box\r\n        sx={{\r\n          pt: 6,\r\n          pb: 1,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\r\n        }}\r\n      >\r\n        <Container>\r\n          <CustomBreadcrumbs\r\n            heading=\"Dialog\"\r\n            links={[\r\n              {\r\n                name: 'Components',\r\n                href: PATH_PAGE.components,\r\n              },\r\n              { name: 'Dialog' },\r\n            ]}\r\n            moreLink={['https://mui.com/components/dialogs']}\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container sx={{ my: 10 }}>\r\n        <Masonry columns={{ xs: 1, md: 3 }} spacing={3}>\r\n          <Block title=\"Simple\" sx={style}>\r\n            <SimpleDialogs />\r\n          </Block>\r\n\r\n          <Block title=\"Alerts\" sx={style}>\r\n            <AlertDialog />\r\n          </Block>\r\n\r\n          <Block title=\"Transitions\" sx={style}>\r\n            <TransitionsDialogs />\r\n          </Block>\r\n\r\n          <Block title=\"Form\" sx={style}>\r\n            <FormDialogs />\r\n          </Block>\r\n\r\n          <Block title=\"Full Screen\" sx={style}>\r\n            <FullScreenDialogs />\r\n          </Block>\r\n\r\n          <Block title=\"Max Width Dialog\" sx={style}>\r\n            <MaxWidthDialog />\r\n          </Block>\r\n\r\n          <Block title=\"Scrolling Content Dialogs\" sx={style}>\r\n            <ScrollDialog />\r\n          </Block>\r\n        </Masonry>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport { Paper, CardHeader, Box, Typography } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBlock.propTypes = {\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport function Block({ title, sx, children }) {\r\n  return (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        borderRadius: 1.5,\r\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\r\n      }}\r\n    >\r\n      {title && <CardHeader title={title} />}\r\n\r\n      <Box\r\n        sx={{\r\n          p: 5,\r\n          minHeight: 180,\r\n          ...sx,\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLabel.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport function Label({ title }) {\r\n  return (\r\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n}\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","FormDialogs","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClose","Button","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","type","margin","label","DialogActions","AlertDialog","id","ScrollDialog","_useState3","_useState4","scroll","setScroll","handleClickOpen","scrollType","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","pb","dividers","ref","tabIndex","_toConsumableArray","Array","join","emails","SimpleDialog","selectedValue","setSelectedValue","value","textAlign","List","email","ListItemButton","ListItemAvatar","Avatar","backgroundColor","Iconify","ListItemText","primary","MaxWidthDialog","setFullWidth","_useState5","_useState6","maxWidth","setMaxWidth","noValidate","flexDirection","FormControl","minWidth","InputLabel","htmlFor","Select","onChange","event","inputProps","MenuItem","FormControlLabel","control","Switch","checked","Transition","forwardRef","props","Slide","FullScreenDialogs","fullScreen","TransitionComponent","AppBar","position","Toolbar","IconButton","edge","flex","ml","secondary","Divider","TransitionsDialogs","keepMounted","style","justifyContent","MUIDialogPage","Helmet","pt","theme","palette","mode","Container","PATH_PAGE","my","Masonry","columns","xs","md","spacing","Block","title","SimpleDialogs","Paper","alpha","grey","CardHeader","p","minHeight","Label","_ref2"],"sourceRoot":""}