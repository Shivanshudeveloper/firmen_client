{"version":3,"file":"static/js/8153.54ad1d18.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.js","components/custom-breadcrumbs/CustomBreadcrumbs.js","sections/_examples/mui/button/IconButtons.js","sections/_examples/mui/button/ButtonGroups.js","sections/_examples/mui/button/ToggleButtons.js","sections/_examples/mui/button/ButtonVariants.js","sections/_examples/mui/button/FloatingActionButton.js","pages/components/mui/MUIButtonsPage.js","sections/_examples/Block.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} to={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\r\n//\r\nimport LinkItem from './LinkItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\r\n    />\r\n  );\r\n}\r\n","// @mui\r\nimport { IconButton } from '@mui/material';\r\nimport { Masonry } from '@mui/lab';\r\n// components\r\nimport Iconify from '../../../../components/iconify';\r\nimport { IconButtonAnimate } from '../../../../components/animate';\r\n//\r\nimport { Block } from '../../Block';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst COLORS = [\r\n  'inherit',\r\n  'default',\r\n  'primary',\r\n  'secondary',\r\n  'info',\r\n  'success',\r\n  'warning',\r\n  'error',\r\n];\r\n\r\nconst SIZES = ['small', 'medium', 'large'];\r\n\r\nconst style = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  flexWrap: 'wrap',\r\n  '& > *': { mx: '8px !important' },\r\n};\r\n\r\nexport default function IconButtons() {\r\n  return (\r\n    <Masonry columns={2} spacing={3}>\r\n      <Block title=\"Base\" sx={style}>\r\n        <IconButton color=\"inherit\">\r\n          <Iconify icon=\"ic:round-access-alarm\" />\r\n        </IconButton>\r\n        <IconButton>\r\n          <Iconify icon=\"ic:round-access-alarm\" />\r\n        </IconButton>\r\n        <IconButton color=\"primary\">\r\n          <Iconify icon=\"ic:round-access-alarm\" />\r\n        </IconButton>\r\n        <IconButton color=\"secondary\">\r\n          <Iconify icon=\"ic:round-access-alarm\" />\r\n        </IconButton>\r\n        <IconButton disabled>\r\n          <Iconify icon=\"ic:round-access-alarm\" />\r\n        </IconButton>\r\n      </Block>\r\n\r\n      <Block title=\"Colors\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <IconButton key={color} color={color}>\r\n            <Iconify icon=\"ic:round-access-alarm\" />\r\n          </IconButton>\r\n        ))}\r\n      </Block>\r\n\r\n      <Block title=\"Size\" sx={style}>\r\n        {SIZES.map((size) => (\r\n          <IconButton key={size} size={size} color=\"info\">\r\n            <Iconify fontSize=\"inherit\" icon=\"ic:round-access-alarm\" />\r\n          </IconButton>\r\n        ))}\r\n      </Block>\r\n\r\n      <Block title=\"With Animate\" sx={style}>\r\n        {SIZES.map((size) => (\r\n          <IconButtonAnimate key={size} size={size} color=\"error\">\r\n            <Iconify fontSize=\"inherit\" icon=\"ic:round-access-alarm\" />\r\n          </IconButtonAnimate>\r\n        ))}\r\n      </Block>\r\n    </Masonry>\r\n  );\r\n}\r\n","// @mui\r\nimport { ButtonGroup, Button } from '@mui/material';\r\nimport { Masonry } from '@mui/lab';\r\n//\r\nimport { Block } from '../../Block';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst style = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  flexWrap: 'wrap',\r\n  '& > *': { m: '8px !important' },\r\n};\r\n\r\nconst COLORS = ['inherit', 'primary', 'secondary', 'success', 'error', 'info', 'warning'];\r\n\r\nconst SIZES = ['small', 'medium', 'large'];\r\n\r\nconst VARIANTS = ['contained', 'outlined', 'text', 'soft'];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ButtonGroups() {\r\n  return (\r\n    <Masonry columns={2} spacing={3}>\r\n      <Block title=\"Contained\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <ButtonGroup key={color} variant=\"contained\" color={color}>\r\n            <Button>One</Button>\r\n            <Button>Two</Button>\r\n            <Button>Three</Button>\r\n          </ButtonGroup>\r\n        ))}\r\n\r\n        <ButtonGroup disabled variant=\"contained\" color=\"info\">\r\n          <Button>One</Button>\r\n          <Button>Two</Button>\r\n          <Button>Three</Button>\r\n        </ButtonGroup>\r\n      </Block>\r\n\r\n      <Block title=\"Outlined\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <ButtonGroup key={color} variant=\"outlined\" color={color}>\r\n            <Button>One</Button>\r\n            <Button>Two</Button>\r\n            <Button>Three</Button>\r\n          </ButtonGroup>\r\n        ))}\r\n\r\n        <ButtonGroup disabled variant=\"outlined\" color=\"info\">\r\n          <Button>One</Button>\r\n          <Button>Two</Button>\r\n          <Button>Three</Button>\r\n        </ButtonGroup>\r\n      </Block>\r\n\r\n      <Block title=\"Text\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <ButtonGroup key={color} variant=\"text\" color={color}>\r\n            <Button>One</Button>\r\n            <Button>Two</Button>\r\n            <Button>Three</Button>\r\n          </ButtonGroup>\r\n        ))}\r\n\r\n        <ButtonGroup disabled variant=\"text\" color=\"info\">\r\n          <Button>One</Button>\r\n          <Button>Two</Button>\r\n          <Button>Three</Button>\r\n        </ButtonGroup>\r\n      </Block>\r\n\r\n      <Block title=\"Soft\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <ButtonGroup key={color} variant=\"soft\" color={color}>\r\n            <Button>One</Button>\r\n            <Button>Two</Button>\r\n            <Button>Three</Button>\r\n          </ButtonGroup>\r\n        ))}\r\n\r\n        <ButtonGroup disabled variant=\"soft\" color=\"info\">\r\n          <Button>One</Button>\r\n          <Button>Two</Button>\r\n          <Button>Three</Button>\r\n        </ButtonGroup>\r\n      </Block>\r\n\r\n      <Block title=\"Size\" sx={style}>\r\n        {SIZES.map((size) => (\r\n          <ButtonGroup key={size} size={size} variant=\"contained\">\r\n            <Button>One</Button>\r\n            <Button>Two</Button>\r\n            <Button>Three</Button>\r\n          </ButtonGroup>\r\n        ))}\r\n      </Block>\r\n\r\n      <Block title=\"Orientation\" sx={style}>\r\n        {VARIANTS.map((variant) => (\r\n          <ButtonGroup key={variant} variant={variant} orientation=\"vertical\">\r\n            <Button>One</Button>\r\n            <Button>Two</Button>\r\n            <Button>Three</Button>\r\n          </ButtonGroup>\r\n        ))}\r\n\r\n        <ButtonGroup disabled variant=\"soft\" color=\"info\" orientation=\"vertical\">\r\n          <Button>One</Button>\r\n          <Button>Two</Button>\r\n          <Button>Three</Button>\r\n        </ButtonGroup>\r\n      </Block>\r\n    </Masonry>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n// @mui\r\nimport { ToggleButton, ToggleButtonGroup } from '@mui/material';\r\nimport Masonry from '@mui/lab/Masonry';\r\n// components\r\nimport Iconify from '../../../../components/iconify';\r\n//\r\nimport { Block } from '../../Block';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst COLORS = ['standard', 'primary', 'secondary', 'info', 'success', 'warning', 'error'];\r\n\r\nconst SIZES = ['small', 'medium', 'large'];\r\n\r\nconst style = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  flexWrap: 'wrap',\r\n  '& > *': { m: '8px !important' },\r\n  '& svg': { width: 24, height: 24 },\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ToggleButtons() {\r\n  const [alignment, setAlignment] = useState('left');\r\n\r\n  const [formats, setFormats] = useState(() => ['bold', 'italic']);\r\n\r\n  const [view, setView] = useState('list');\r\n\r\n  const [selected, setSelected] = useState(true);\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  const handleChange = (event, nextView) => {\r\n    setView(nextView);\r\n  };\r\n\r\n  const viewContent = [\r\n    <ToggleButton key=\"list\" value=\"list\">\r\n      <Iconify icon=\"ic:round-view-list\" />\r\n    </ToggleButton>,\r\n    <ToggleButton key=\"module\" value=\"module\">\r\n      <Iconify icon=\"ic:round-view-module\" />\r\n    </ToggleButton>,\r\n    <ToggleButton key=\"quilt\" value=\"quilt\">\r\n      <Iconify icon=\"ic:round-view-quilt\" />\r\n    </ToggleButton>,\r\n  ];\r\n\r\n  const alignContent = [\r\n    <ToggleButton key=\"left\" value=\"left\">\r\n      <Iconify icon=\"ic:round-format-align-left\" />\r\n    </ToggleButton>,\r\n    <ToggleButton key=\"center\" value=\"center\">\r\n      <Iconify icon=\"ic:round-format-align-center\" />\r\n    </ToggleButton>,\r\n    <ToggleButton key=\"right\" value=\"right\">\r\n      <Iconify icon=\"ic:round-format-align-right\" />\r\n    </ToggleButton>,\r\n    <ToggleButton key=\"justify\" value=\"justify\" disabled>\r\n      <Iconify icon=\"ic:round-format-align-justify\" />\r\n    </ToggleButton>,\r\n  ];\r\n\r\n  const formatContent = [\r\n    <ToggleButton key=\"bold\" value=\"bold\">\r\n      <Iconify icon=\"ic:round-format-bold\" />\r\n    </ToggleButton>,\r\n    <ToggleButton key=\"italic\" value=\"italic\">\r\n      <Iconify icon=\"ic:round-format-italic\" />\r\n    </ToggleButton>,\r\n    <ToggleButton key=\"underlined\" value=\"underlined\">\r\n      <Iconify icon=\"ic:round-format-underlined\" />\r\n    </ToggleButton>,\r\n    <ToggleButton key=\"color\" value=\"color\" disabled>\r\n      <Iconify icon=\"ic:baseline-format-color-fill\" />\r\n      <Iconify icon=\"ic:baseline-arrow-drop-down\" />\r\n    </ToggleButton>,\r\n  ];\r\n\r\n  return (\r\n    <Masonry columns={3} spacing={3}>\r\n      <Block title=\"Exclusive selection\" sx={style}>\r\n        <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment}>\r\n          {alignContent}\r\n        </ToggleButtonGroup>\r\n      </Block>\r\n\r\n      <Block title=\"Multiple selection\" sx={style}>\r\n        <ToggleButtonGroup value={formats} onChange={handleFormat}>\r\n          {formatContent}\r\n        </ToggleButtonGroup>\r\n      </Block>\r\n\r\n      <Block title=\"Colors\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <ToggleButtonGroup\r\n            exclusive\r\n            key={color}\r\n            color={color}\r\n            value={view}\r\n            onChange={handleChange}\r\n          >\r\n            {viewContent}\r\n          </ToggleButtonGroup>\r\n        ))}\r\n\r\n        {COLORS.map((color) => (\r\n          <ToggleButton\r\n            key={color}\r\n            color={color}\r\n            value=\"check\"\r\n            selected={selected}\r\n            onChange={() => {\r\n              setSelected(!selected);\r\n            }}\r\n          >\r\n            <Iconify icon=\"eva:checkmark-fill\" />\r\n          </ToggleButton>\r\n        ))}\r\n      </Block>\r\n\r\n      <Block title=\"Vertical & Standalone buttons\" sx={style}>\r\n        <ToggleButtonGroup orientation=\"vertical\" value={view} exclusive onChange={handleChange}>\r\n          {viewContent}\r\n        </ToggleButtonGroup>\r\n\r\n        <ToggleButton\r\n          value=\"check\"\r\n          selected={selected}\r\n          onChange={() => {\r\n            setSelected(!selected);\r\n          }}\r\n        >\r\n          <Iconify icon=\"eva:checkmark-fill\" />\r\n        </ToggleButton>\r\n      </Block>\r\n\r\n      <Block title=\"Size\" sx={style}>\r\n        {SIZES.map((size) => (\r\n          <ToggleButton key={size} size={size} value=\"check\">\r\n            <Iconify icon=\"eva:checkmark-fill\" />\r\n          </ToggleButton>\r\n        ))}\r\n\r\n        {SIZES.map((size) => (\r\n          <ToggleButtonGroup\r\n            exclusive\r\n            key={size}\r\n            size={size}\r\n            value={alignment}\r\n            onChange={handleAlignment}\r\n          >\r\n            {alignContent}\r\n          </ToggleButtonGroup>\r\n        ))}\r\n      </Block>\r\n\r\n      <Block title=\"Disabled\" sx={style}>\r\n        <ToggleButton value=\"check\" disabled>\r\n          <Iconify icon=\"eva:checkmark-fill\" />\r\n        </ToggleButton>\r\n\r\n        <ToggleButton value=\"check\" disabled selected>\r\n          <Iconify icon=\"eva:checkmark-fill\" />\r\n        </ToggleButton>\r\n\r\n        <ToggleButtonGroup value=\"left\" exclusive>\r\n          {alignContent}\r\n        </ToggleButtonGroup>\r\n\r\n        <ToggleButtonGroup disabled value=\"left\" exclusive>\r\n          {alignContent}\r\n        </ToggleButtonGroup>\r\n      </Block>\r\n    </Masonry>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Button } from '@mui/material';\r\nimport { LoadingButton, Masonry } from '@mui/lab';\r\n// components\r\nimport Iconify from '../../../../components/iconify';\r\n//\r\nimport { Block } from '../../Block';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst style = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  flexWrap: 'wrap',\r\n  '& > *': { mx: '8px !important' },\r\n};\r\n\r\nconst COLORS = ['inherit', 'primary', 'secondary', 'info', 'success', 'warning', 'error'];\r\n\r\nconst SIZES = ['small', 'medium', 'large'];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nButtonVariant.propTypes = {\r\n  variant: PropTypes.string,\r\n};\r\n\r\nexport default function ButtonVariant({ variant = 'text' }) {\r\n  return (\r\n    <Masonry columns={2} spacing={3}>\r\n      <Block title=\"Base\" sx={style}>\r\n        <Button variant={variant} color=\"inherit\">\r\n          Default\r\n        </Button>\r\n\r\n        <Button variant={variant}>Primary</Button>\r\n\r\n        <Button variant={variant} color=\"secondary\">\r\n          Secondary\r\n        </Button>\r\n\r\n        <Button variant={variant} disabled>\r\n          Disabled\r\n        </Button>\r\n\r\n        <Button variant={variant}>Link</Button>\r\n      </Block>\r\n\r\n      <Block title=\"Colors\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <Button key={color} variant={variant} color={color}>\r\n            {color === 'inherit' ? 'default' : color}\r\n          </Button>\r\n        ))}\r\n      </Block>\r\n\r\n      <Block title=\"With Icon & Loading\" sx={style}>\r\n        <Button\r\n          variant={variant}\r\n          color=\"error\"\r\n          startIcon={<Iconify icon=\"ic:round-access-alarm\" />}\r\n        >\r\n          Icon Left\r\n        </Button>\r\n\r\n        <Button variant={variant} color=\"error\" endIcon={<Iconify icon=\"ic:round-access-alarm\" />}>\r\n          Icon Right\r\n        </Button>\r\n\r\n        <LoadingButton loading variant={variant}>\r\n          Submit\r\n        </LoadingButton>\r\n\r\n        <LoadingButton loading loadingIndicator=\"Loading...\" variant={variant}>\r\n          Fetch data\r\n        </LoadingButton>\r\n\r\n        <LoadingButton\r\n          loading\r\n          size=\"large\"\r\n          loadingPosition=\"start\"\r\n          startIcon={<Iconify icon=\"ic:round-access-alarm\" />}\r\n          variant={variant}\r\n        >\r\n          Start\r\n        </LoadingButton>\r\n\r\n        <LoadingButton\r\n          loading\r\n          size=\"large\"\r\n          loadingPosition=\"end\"\r\n          endIcon={<Iconify icon=\"ic:round-access-alarm\" />}\r\n          variant={variant}\r\n        >\r\n          End\r\n        </LoadingButton>\r\n      </Block>\r\n\r\n      <Block title=\"Size\" sx={style}>\r\n        {SIZES.map((size) => (\r\n          <Button key={size} variant={variant} color=\"info\" size={size}>\r\n            {size}\r\n          </Button>\r\n        ))}\r\n      </Block>\r\n    </Masonry>\r\n  );\r\n}\r\n","// @mui\r\nimport { Fab } from '@mui/material';\r\nimport { Masonry } from '@mui/lab';\r\n// components\r\nimport Iconify from '../../../../components/iconify';\r\nimport { FabButtonAnimate } from '../../../../components/animate';\r\n//\r\nimport { Block } from '../../Block';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst style = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  flexWrap: 'wrap',\r\n  '& > *': { m: '8px !important' },\r\n};\r\n\r\nconst COLORS = [\r\n  'default',\r\n  'inherit',\r\n  'primary',\r\n  'secondary',\r\n  'info',\r\n  'success',\r\n  'warning',\r\n  'error',\r\n];\r\n\r\nconst SIZES = ['small', 'medium', 'large'];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FloatingActionButton() {\r\n  return (\r\n    <Masonry columns={2} spacing={3}>\r\n      <Block title=\"Default\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <Fab key={color} color={color}>\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n          </Fab>\r\n        ))}\r\n\r\n        {COLORS.map((color) => (\r\n          <Fab key={color} color={color} variant=\"extended\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n            {color}\r\n          </Fab>\r\n        ))}\r\n\r\n        <Fab color=\"info\" disabled>\r\n          <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n        </Fab>\r\n\r\n        <Fab color=\"info\" disabled variant=\"extended\">\r\n          <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n          disabled\r\n        </Fab>\r\n      </Block>\r\n\r\n      <Block title=\"Outlined\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <Fab key={color} color={color} variant=\"outlined\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n          </Fab>\r\n        ))}\r\n\r\n        {COLORS.map((color) => (\r\n          <Fab key={color} color={color} variant=\"outlinedExtended\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n            {color}\r\n          </Fab>\r\n        ))}\r\n\r\n        <Fab color=\"info\" disabled variant=\"outlined\">\r\n          <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n        </Fab>\r\n\r\n        <Fab color=\"info\" disabled variant=\"outlinedExtended\">\r\n          <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n          disabled\r\n        </Fab>\r\n      </Block>\r\n\r\n      <Block title=\"Soft\" sx={style}>\r\n        {COLORS.map((color) => (\r\n          <Fab key={color} color={color} variant=\"soft\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n          </Fab>\r\n        ))}\r\n\r\n        {COLORS.map((color) => (\r\n          <Fab key={color} color={color} variant=\"softExtended\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n            {color}\r\n          </Fab>\r\n        ))}\r\n\r\n        <Fab color=\"info\" disabled variant=\"soft\">\r\n          <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n        </Fab>\r\n\r\n        <Fab color=\"info\" disabled variant=\"softExtended\">\r\n          <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n          disabled\r\n        </Fab>\r\n      </Block>\r\n\r\n      <Block title=\"Size\" sx={style}>\r\n        {SIZES.map((size) => (\r\n          <Fab key={size} size={size} color=\"info\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n          </Fab>\r\n        ))}\r\n\r\n        {SIZES.map((size) => (\r\n          <Fab key={size} size={size} color=\"info\" variant=\"extended\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n            {size}\r\n          </Fab>\r\n        ))}\r\n\r\n        {SIZES.map((size) => (\r\n          <Fab key={size} size={size} color=\"info\" variant=\"soft\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n          </Fab>\r\n        ))}\r\n\r\n        {SIZES.map((size) => (\r\n          <Fab key={size} size={size} color=\"info\" variant=\"softExtended\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n            {size}\r\n          </Fab>\r\n        ))}\r\n\r\n        {SIZES.map((size) => (\r\n          <Fab key={size} size={size} color=\"info\" variant=\"outlined\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n          </Fab>\r\n        ))}\r\n\r\n        {SIZES.map((size) => (\r\n          <Fab key={size} size={size} color=\"info\" variant=\"outlinedExtended\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n            {size}\r\n          </Fab>\r\n        ))}\r\n      </Block>\r\n\r\n      <Block title=\"With Animate\" sx={style}>\r\n        {SIZES.map((size) => (\r\n          <FabButtonAnimate key={size} variant=\"extended\" size={size} color=\"info\">\r\n            <Iconify icon=\"ic:round-access-alarm\" width={24} />\r\n            {size}\r\n          </FabButtonAnimate>\r\n        ))}\r\n      </Block>\r\n    </Masonry>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Box, Container, Tab, Tabs } from '@mui/material';\r\n// routes\r\nimport { PATH_PAGE } from '../../../routes/paths';\r\n// components\r\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\r\n// sections\r\nimport IconButtons from '../../../sections/_examples/mui/button/IconButtons';\r\nimport ButtonGroups from '../../../sections/_examples/mui/button/ButtonGroups';\r\nimport ToggleButtons from '../../../sections/_examples/mui/button/ToggleButtons';\r\nimport ButtonVariants from '../../../sections/_examples/mui/button/ButtonVariants';\r\nimport FloatingActionButton from '../../../sections/_examples/mui/button/FloatingActionButton';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABS = [\r\n  {\r\n    value: 'contained',\r\n    label: 'Contained Buttons',\r\n    component: <ButtonVariants variant=\"contained\" />,\r\n  },\r\n  {\r\n    value: 'outlined',\r\n    label: 'Outlined Buttons',\r\n    component: <ButtonVariants variant=\"outlined\" />,\r\n  },\r\n  { value: 'text', label: 'Text Buttons', component: <ButtonVariants /> },\r\n  { value: 'soft', label: 'Soft Buttons', component: <ButtonVariants variant=\"soft\" /> },\r\n  { value: 'icon', label: 'Icon Buttons', component: <IconButtons /> },\r\n  { value: 'fab', label: 'Floating Action Button', component: <FloatingActionButton /> },\r\n  { value: 'groups', label: 'Button Groups', component: <ButtonGroups /> },\r\n  { value: 'toggle', label: 'Toggle Buttons', component: <ToggleButtons /> },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MUIButtonsPage() {\r\n  const [currentTab, setCurrentTab] = useState('contained');\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> MUI Components: Buttons | Minimal UI</title>\r\n      </Helmet>\r\n\r\n      <Box\r\n        sx={{\r\n          pt: 6,\r\n          pb: 1,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\r\n        }}\r\n      >\r\n        <Container>\r\n          <CustomBreadcrumbs\r\n            heading=\"Buttons\"\r\n            links={[\r\n              {\r\n                name: 'Components',\r\n                href: PATH_PAGE.components,\r\n              },\r\n              { name: 'Buttons' },\r\n            ]}\r\n            moreLink={[\r\n              'https://mui.com/components/buttons',\r\n              'https://mui.com/components/button-group',\r\n              'https://mui.com/components/floating-action-button',\r\n              'https://mui.com/components/toggle-button',\r\n            ]}\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container sx={{ my: 10 }}>\r\n        <Tabs value={currentTab} onChange={(event, newValue) => setCurrentTab(newValue)}>\r\n          {TABS.map((tab) => (\r\n            <Tab key={tab.value} value={tab.value} label={tab.label} />\r\n          ))}\r\n        </Tabs>\r\n\r\n        {TABS.map(\r\n          (tab) =>\r\n            tab.value === currentTab && (\r\n              <Box key={tab.value} sx={{ mt: 5 }}>\r\n                {tab.component}\r\n              </Box>\r\n            )\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport { Paper, CardHeader, Box, Typography } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBlock.propTypes = {\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport function Block({ title, sx, children }) {\r\n  return (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        borderRadius: 1.5,\r\n        bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\r\n      }}\r\n    >\r\n      {title && <CardHeader title={title} />}\r\n\r\n      <Box\r\n        sx={{\r\n          p: 5,\r\n          minHeight: 180,\r\n          ...sx,\r\n        }}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLabel.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport function Label({ title }) {\r\n  return (\r\n    <Typography variant=\"overline\" component=\"p\" gutterBottom sx={{ color: 'text.secondary' }}>\r\n      {title}\r\n    </Typography>\r\n  );\r\n}\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","COLORS","SIZES","style","justifyContent","flexWrap","mx","IconButtons","Masonry","columns","spacing","Block","title","IconButton","Iconify","size","fontSize","IconButtonAnimate","m","VARIANTS","ButtonGroups","ButtonGroup","Button","orientation","ToggleButtons","_useState","useState","_useState2","_slicedToArray","alignment","setAlignment","_useState3","_useState4","formats","setFormats","_useState5","_useState6","view","setView","_useState7","_useState8","selected","setSelected","handleAlignment","event","newAlignment","handleChange","nextView","viewContent","ToggleButton","value","alignContent","formatContent","ToggleButtonGroup","exclusive","onChange","newFormats","ButtonVariant","_ref$variant","startIcon","endIcon","LoadingButton","loading","loadingIndicator","loadingPosition","FloatingActionButton","Fab","FabButtonAnimate","TABS","label","ButtonVariants","MUIButtonsPage","currentTab","setCurrentTab","Helmet","pt","pb","theme","palette","mode","Container","PATH_PAGE","my","Tabs","newValue","tab","Tab","Paper","alpha","grey","CardHeader","p","minHeight","Label","_ref2"],"sourceRoot":""}