{"version":3,"file":"static/js/9962.55fa4744.chunk.js","mappings":"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","sources":["pages/extra-pages/AdminPortal.js","pages/extra-pages/EmployeeTaskForm.js","pages/extra-pages/TextEditor.js","../node_modules/suneditor/src/lang|D:/work/company_management-saas/client3/node_modules/suneditor/src/lang|sync|/^/.*/.js$"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\n// material-ui\r\nimport {\r\n  Avatar,\r\n  CardContent,\r\n  CardActions,\r\n  Card,\r\n  Stack,\r\n  Typography,\r\n  Container,\r\n  Chip,\r\n  Grid,\r\n  Button,\r\n  Paper,\r\n  TextField,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n} from '@mui/material';\r\n\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport {\r\n  StockOutlined,\r\n  FireOutlined,\r\n  HighlightOutlined,\r\n  LaptopOutlined,\r\n  QuestionCircleOutlined,\r\n  ContactsOutlined,\r\n  ContainerOutlined,\r\n  LockOutlined,\r\n} from '@ant-design/icons';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nimport {\r\n  AppWidget,\r\n  AppWelcome,\r\n  AppFeatured,\r\n  AppNewInvoice,\r\n  AppTopAuthors,\r\n  AppTopRelated,\r\n  AppAreaInstalled,\r\n  AppWidgetSummary,\r\n  AppCurrentDownload,\r\n  AppTopInstalledCountries,\r\n} from '../../sections/@dashboard/general/app';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  InputBase,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  OutlinedInput,\r\n  Link,\r\n  DialogContentText,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from '@mui/material';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LoadingButton, TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport { apiBaseURL } from 'src/config-global';\r\nimport { useContext } from 'react';\r\nimport { AuthContext, SettingsContext } from 'src/App';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport TextEditor from './TextEditor';\r\nimport EmployeeTaskForm from './EmployeeTaskForm';\r\nimport { useTheme } from '@mui/styles';\r\nimport { useNavigate } from 'react-router-dom/dist';\r\nimport { ColorButton, ColorPicker } from 'mui-color';\r\nimport { collection, firestore, storage } from 'src/Firebase';\r\nimport { FileUploadRounded } from '@mui/icons-material';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\n\r\n//multiple select style\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n// avatar style\r\nconst avatarSX = {\r\n  width: 36,\r\n  height: 36,\r\n  fontSize: '1rem',\r\n};\r\n\r\n// action style\r\nconst actionSX = {\r\n  mt: 0.75,\r\n  ml: 1,\r\n  top: 'auto',\r\n  right: 'auto',\r\n  alignSelf: 'flex-start',\r\n  transform: 'none',\r\n};\r\n\r\nconst Progileavatar = {\r\n  verticalAlign: 'middle',\r\n  width: '100px',\r\n  height: '100px',\r\n  borderRadius: '50%',\r\n};\r\n\r\nconst STATS = [\r\n  {\r\n    title: 'Created',\r\n    key: 'created',\r\n  },\r\n  {\r\n    title: 'Opened',\r\n    key: 'open',\r\n  },\r\n  {\r\n    title: 'Pending',\r\n    key: 'pending',\r\n  },\r\n  {\r\n    title: 'Closed',\r\n    key: 'closed',\r\n  },\r\n  // {\r\n  //   title: 'Reopened',\r\n  //   key: 'reopened',\r\n  // },\r\n];\r\n\r\nconst OPTION_OPERATION = [\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n];\r\n\r\nfunction randomDate(start, end) {\r\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n}\r\n\r\nconst STAFF_LIST = [\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ACCEPTED = 'Accepted';\r\nconst REJECTED = 'Rejected';\r\nconst NORES = 'No Response';\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\nconst AdminPortal = () => {\r\n  const { user, getDataByRole } = useAuthContext();\r\n  const { globalSettings, setGlobalSettings } = useContext(SettingsContext);\r\n  const [newGlobalSettings, setNewGlobalSettings] = useState({\r\n    name: '',\r\n    tagline: '',\r\n    location: '',\r\n    logo: '',\r\n    nav_bg: '',\r\n    nav_icon: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setNewGlobalSettings(globalSettings);\r\n  }, [globalSettings]);\r\n\r\n  const handleGlobalSettings = (key, value) => {\r\n    setNewGlobalSettings((prev) => ({\r\n      ...prev,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const saveGlobalSettings = () => {\r\n    firestore\r\n      .collection('organisations')\r\n      .doc(user.company)\r\n      .update(newGlobalSettings)\r\n      .then((res) => {\r\n        setGlobalSettings(newGlobalSettings);\r\n        setLoading(false);\r\n        toast.success('Settings Saved');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.success(error.message);\r\n      });\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const theme = useTheme();\r\n\r\n  const [searchTag, setSearchTag] = useState('');\r\n\r\n  const [tabTitle, setTabTitle] = useState('Dashboard');\r\n  const [title, settitle] = useState('');\r\n  const [value, setValue] = React.useState('1');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (e, formTitle) => {\r\n    setOpen(true);\r\n    settitle(formTitle);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const fetchOrgMembers = () => {\r\n    const queryRef = firestore.collection(collection).where('company', '==', user.company);\r\n      const temp = [];\r\n      queryRef.get().then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          let data = doc.data();\r\n          if (doc.id !== user.uid) {\r\n            data.uid = doc.id;\r\n            temp.push(data);\r\n          }\r\n        });\r\n        setMembers(temp);\r\n      });\r\n  }\r\n\r\n  const [members, setMembers] = useState(null);\r\n  const handleChange = (event, newValue) => {\r\n    if (newValue === '3') {\r\n      fetchOrgMembers()\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [status, setstatus] = React.useState('All');\r\n  const handleStatus = (event) => {\r\n    setstatus(event.target.value);\r\n  };\r\n\r\n  const [employee, setemployee] = React.useState('');\r\n  const handleEmployee = (event) => {\r\n    setemployee(event.target.value);\r\n  };\r\n\r\n  const [category, setcategory] = React.useState('');\r\n  const handleCategory = (event) => {\r\n    setcategory(event.target.value);\r\n  };\r\n\r\n  const [lang, setlang] = React.useState('English');\r\n  const handleLang = (event) => {\r\n    setlang(event.target.value);\r\n  };\r\n\r\n  const [department, setDepartment] = React.useState('All Departments');\r\n  const handleDepartment = (event) => {\r\n    setDepartment(event.target.value);\r\n  };\r\n\r\n  const [from, setFrom] = React.useState('');\r\n  const [to, setTo] = React.useState('');\r\n\r\n  const [question, setQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n  const addFAQ = async () => {\r\n    const payload = {\r\n      adminId: user.uid,\r\n      type: category,\r\n      question,\r\n      answer,\r\n    };\r\n    try {\r\n      const res = await axios.post(`${apiBaseURL}/services/faq/${user.company}`, payload);\r\n      setcategory('');\r\n      setQuestion('');\r\n      setAnswer('');\r\n      toast.success(res.data);\r\n    } catch (error) {\r\n      toast.error('Error, try again !');\r\n    }\r\n  };\r\n\r\n  const [inputState, setInputState] = useState({\r\n    policySub: '',\r\n    policyAns: '',\r\n    blogSub: '',\r\n    blogAns: '',\r\n    newsSub: '',\r\n    newsAns: '',\r\n  });\r\n  const handleServicesInput = async (service) => {\r\n    const payload = {\r\n      adminId: user.uid,\r\n      subject: inputState[`${service}Sub`],\r\n      [service]: inputState[`${service}Ans`],\r\n    };\r\n    try {\r\n      const res = await axios.post(`${apiBaseURL}/services/${service}/${user.company}`, payload);\r\n      setInputState((prev) => {\r\n        return { ...prev, [`${service}Sub`]: '', [`${service}Ans`]: '' };\r\n      });\r\n      localStorage.removeItem(service);\r\n      toast.success(res.data);\r\n    } catch (error) {\r\n      toast.error('Error, try again !');\r\n    }\r\n  };\r\n\r\n  const handleRTEInput = (field) => (value) => {\r\n    setInputState((prev) => ({\r\n      ...prev,\r\n      [`${field}Ans`]: value,\r\n    }));\r\n  };\r\n\r\n  const [requestDetail, setRequestDetail] = useState(null);\r\n\r\n  const [onboardingReq, setOnboardingReq] = useState(null);\r\n  const [offboardingReq, setOffboardingReq] = useState(null);\r\n  useEffect(() => {\r\n    axios.get(`${apiBaseURL}/manager/onboarding/${user.company}?status=false`).then((res) => {\r\n      setOnboardingReq(res.data);\r\n    });\r\n\r\n    axios.get(`${apiBaseURL}/manager/offboarding/${user.company}?status=false`).then((res) => {\r\n      setOffboardingReq(res.data);\r\n    });\r\n\r\n    setTicketEmployees(getDataByRole('itemployee'));\r\n  }, []);\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    axios.get(`${apiBaseURL}/manager/emptask/${user.company}`).then((res) => {\r\n      // console.log(res.data);\r\n      setTasks(res.data);\r\n    });\r\n  }, [user]);\r\n\r\n  const [employeeList, setEmployeeList] = useState(null);\r\n\r\n  const [empTask, setEmpTask] = useState({\r\n    employee: 'None',\r\n    task: 'Create your organisation account',\r\n    source: 'DocsUp',\r\n    url: 'https://www.docsup.com',\r\n    tag: 'newaccount',\r\n    due: new Date().toLocaleDateString(),\r\n  });\r\n  const handleEmpTask = (field) => (e) => {\r\n    let value;\r\n    if (field === 'due') value = e;\r\n    else value = e.target.value;\r\n    setEmpTask((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    const data = getDataByRole('employee');\r\n    setEmployeeList(data);\r\n  }, [user]);\r\n\r\n  const [itcomments, setITComments] = useState('');\r\n\r\n  const handleDialogSubmit = (_id) => async () => {\r\n    if (title === 'New Task') {\r\n      empTask.tag = empTask.tag.split(',').join(',');\r\n      const formData = {\r\n        ...empTask,\r\n        managerId: user.uid,\r\n        manager: user.displayName,\r\n        company: user.company,\r\n      };\r\n      const res = await axios.post(`${apiBaseURL}/manager/emptask`, { formData });\r\n      if (res.data === 'Created') {\r\n        toast.success(`Task Assigned to ${formData.employee}`);\r\n        setTasks((prev) => {\r\n          prev.push(formData);\r\n          return prev;\r\n        });\r\n        axios.get(`${apiBaseURL}/manager/emptask/${user.company}`).then((res) => {\r\n          setTasks(res.data);\r\n        });\r\n      }\r\n    } else if (title === 'Onboarding Request details') {\r\n      const res = await axios.patch(`${apiBaseURL}/manager/onboarding/${_id}`, { itcomments });\r\n      if (res.data === 'Updated') {\r\n        toast.success(`Status updated`);\r\n        const index = onboardingReq.findIndex((req) => req._id === _id);\r\n        onboardingReq.splice(index, 1);\r\n        setITComments('');\r\n      }\r\n    } else if (title === 'Offboarding Request details') {\r\n      const res = await axios.patch(`${apiBaseURL}/manager/offboarding/${_id}`, { itcomments });\r\n      if (res.data === 'Updated') {\r\n        toast.success(`Status updated`);\r\n        const index = offboardingReq.findIndex((req) => req._id === _id);\r\n        offboardingReq.splice(index, 1);\r\n        setITComments('');\r\n      }\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const [closedOnboardings, setClosedOnboardings] = useState(null);\r\n  const getClosedOnboardingRequests = async () => {\r\n    const res = await axios.get(`${apiBaseURL}/manager/onboarding/${user.company}?status=true`);\r\n    setClosedOnboardings(res.data);\r\n  };\r\n\r\n  const [closedOffboardings, setClosedOffboardings] = useState(null);\r\n  const getClosedOffboardingRequests = async () => {\r\n    const res = await axios.get(`${apiBaseURL}/manager/offboarding/${user.company}?status=true`);\r\n    setClosedOffboardings(res.data);\r\n  };\r\n\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState('None');\r\n  const handleSelectedTasks = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSelectedTasks(value);\r\n  };\r\n\r\n  const assignTask = async () => {\r\n    const data = { selectedEmployee, selectedTasks };\r\n    // console.log(data)\r\n    const res = await axios.patch(`${apiBaseURL}/manager/empTask`, { data });\r\n    if (res.data === selectedTasks.length) {\r\n      axios.get(`${apiBaseURL}/manager/emptask/${user.company}`).then((res) => {\r\n        setTasks(res.data);\r\n      });\r\n      toast.success('Tasks Assigned to ' + selectedEmployee);\r\n      setSelectedEmployee('None');\r\n      setSelectedTasks([]);\r\n    }\r\n  };\r\n\r\n  const ticketDepartmentsList = ['IT'];\r\n  const [ticketDepartment, setTicketDepartment] = useState('IT');\r\n  const [ticketEmployees, setTicketEmployees] = useState(null);\r\n  const handleTicketDepartmentChange = (e) => {\r\n    const dep = e.target.value;\r\n    setTicketEmployees(getDataByRole(`${dep}employee`));\r\n    setTicketDepartment(dep);\r\n  };\r\n\r\n  const [tickets, setTickets] = useState([]);\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    if (user.firestore.role === 'itadmin') {\r\n      axios.get(`${apiBaseURL}/tickets/${user.company}`).then((res) => {\r\n        setTickets(res.data);\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  const assignTickets = async () => {\r\n    const data = { selectedEmployee, selectedTasks };\r\n    // console.log(data)\r\n    const res = await axios.patch(`${apiBaseURL}/tickets`, { formData: data });\r\n    if (res.data === selectedTasks.length) {\r\n      toast.success('Tickets Assigned to ' + selectedEmployee);\r\n      setTickets((prev) => {\r\n        selectedTasks.forEach(\r\n          (ticketId) => (tickets.find(({ _id }) => _id === ticketId)['assigned'] = selectedEmployee)\r\n        );\r\n        return prev;\r\n      });\r\n      setSelectedEmployee('None');\r\n      setSelectedTasks([]);\r\n    }\r\n  };\r\n\r\n  const [ticketStats, setTicketStats] = useState();\r\n  useEffect(() => {\r\n    axios.get(`${apiBaseURL}/tickets/stats/${user.company}`).then((res) => {\r\n      res.data.reopened = '#';\r\n      setTicketStats(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleAccordian = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // organisation's global settings\r\n  const logoRef = useRef();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const updateCompanyLogo = (file) => {\r\n    setLoading(true);\r\n    const fileName = new Date().getTime() + file.name;\r\n    const storageRef = storage.ref();\r\n    const uploadTask = storageRef.child(`/CompanyLogo/${fileName}`).put(file);\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {\r\n        const uploaded = Math.floor((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n        setProgress(uploaded);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        uploadTask.snapshot.ref\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            firestore\r\n              .collection('organisations')\r\n              .doc(user.company)\r\n              .update({ logo: url })\r\n              .then((res) => {\r\n                setGlobalSettings((prev) => {\r\n                  let remaining;\r\n                  if (prev) {\r\n                    remaining = { ...prev };\r\n                  } else {\r\n                    remaining = {};\r\n                  }\r\n                  return {\r\n                    ...remaining,\r\n                    logo: url,\r\n                  };\r\n                });\r\n                setNewGlobalSettings((prev) => ({\r\n                  ...prev,\r\n                  logo: url,\r\n                }));\r\n                setLoading(false);\r\n              })\r\n              .catch((err) => console.log(err));\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  const [newInvites, setNewInvites] = useState('');\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const sendInvites = () => {\r\n    axios\r\n      .post(`${apiBaseURL}/email/send?service=invite`, {\r\n        formData: {\r\n          toList: newInvites.split(',').map((email) => email.trim()),\r\n          role: selectedRole,\r\n          company: user.firestore.company,\r\n          companyName: globalSettings.name,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        toast.success('Invites sent');\r\n        setNewInvites('');\r\n        setSelectedRole('');\r\n      });\r\n  };\r\n\r\n  const activateAccount = async (uid, index) => {\r\n    const docRef = firestore.collection(collection).doc(uid);\r\n    docRef\r\n      .update({ blocked: false })\r\n      .then(() => {\r\n        members[index].blocked = false;\r\n        setMembers([...members]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error(console.log('Error, try later !'));\r\n      });\r\n  };\r\n\r\n  const deactivateAccount = async (uid, index) => {\r\n    const docRef = firestore.collection(collection).doc(uid);\r\n    docRef\r\n      .update({ blocked: true })\r\n      .then(() => {\r\n        members[index].blocked = true;\r\n        setMembers([...members]);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.error('Error, try later !');\r\n      });\r\n  };\r\n\r\n  const deleteUser = (user, index) => {\r\n    // console.log(user);\r\n    firestore.collection(collection)\r\n      .doc(user.uid)\r\n      .delete()\r\n      .then(() => {\r\n        toast.info(`Account deleted! ${user.displayName} (${user.email})`);\r\n        fetchOrgMembers()\r\n      })\r\n      .catch((error) => {\r\n        toast.error('Error deleting account: ', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <Container sx={{ mt: 6, mb: 6 }} maxWidth={title == 'Email Templates' ? 'md' : 'sm'}>\r\n          <Card variant=\"outlined\">\r\n            <CardContent>\r\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Typography variant=\"h2\">{title}</Typography>\r\n              </div>\r\n              <br />\r\n              {title === 'View Ticket' ? (\r\n                <>\r\n                  <Paper variant=\"elevation\" elevation={2} sx={{ p: 2 }}>\r\n                    <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n                      <Typography variant=\"h4\">Ticket ID</Typography>\r\n                      <Typography variant=\"h4\">Ticket Title</Typography>\r\n                      <Typography variant=\"h4\">🏁</Typography>\r\n                    </Stack>\r\n                    <hr />\r\n                    <br />\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} container>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Department</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              Department Name\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Tags</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              None\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Owner</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              ABC DEFG\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12} container>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Author</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              Someone\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Status</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              Accepted\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                  </Paper>\r\n                  <br />\r\n                  <Paper variant=\"elevation\" elevation={4} sx={{ p: 2 }}>\r\n                    <Typography variant=\"h5\">Respond</Typography>\r\n                    <br />\r\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                      <Button variant=\"contained\" size=\"small\">\r\n                        Select a Custom Response\r\n                      </Button>\r\n                      <FormControlLabel\r\n                        control={<Checkbox sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }} />}\r\n                        label=\"Private\"\r\n                      />\r\n                    </Stack>\r\n                    <br />\r\n                    <Typography variant=\"p\">Response Message</Typography>\r\n                    <TextField variant=\"outlined\" fullWidth type=\"text\" multiline rows={6} />\r\n                    <br />\r\n                    <br />\r\n                    <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n                      <Button variant=\"contained\" color=\"error\">\r\n                        Close Ticket\r\n                      </Button>\r\n                      <Button variant=\"contained\">Send Response</Button>\r\n                    </Stack>\r\n                  </Paper>\r\n                </>\r\n              ) : title === 'Email Templates' ? (\r\n                <>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={4}>\r\n                      <Card variant=\"outlined\">\r\n                        <CardContent>\r\n                          <Typography variant=\"h5\">Saved Templates</Typography>\r\n                          <br />\r\n                          <List\r\n                            component=\"nav\"\r\n                            sx={{\r\n                              px: 0,\r\n                              py: 0,\r\n                              '& .MuiListItemButton-root': {\r\n                                py: 1.5,\r\n                                '& .MuiAvatar-root': avatarSX,\r\n                                '& .MuiListItemSecondaryAction-root': {\r\n                                  ...actionSX,\r\n                                  position: 'relative',\r\n                                },\r\n                              },\r\n                            }}\r\n                          >\r\n                            {OPTION_OPERATION.map((item, index) => {\r\n                              return (\r\n                                <ListItemButton divider>\r\n                                  <ListItemText\r\n                                    primary={\r\n                                      <Typography variant=\"subtitle1\">Template {index}</Typography>\r\n                                    }\r\n                                  />\r\n                                </ListItemButton>\r\n                              );\r\n                            })}\r\n                          </List>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <div style={{ marginLeft: '10%', marginTop: '10%' }}>\r\n                        <div>\r\n                          <Typography variant=\"p\">Language</Typography>\r\n                          <br />\r\n                          <FormControl fullWidth>\r\n                            <Select\r\n                              fullWidth\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              value={lang}\r\n                              // label=\"Status\"\r\n                              onChange={handleLang}\r\n                            >\r\n                              <MenuItem value=\"English\">English</MenuItem>\r\n                              <MenuItem value=\"Hindi\">Hindi</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n                        <br />\r\n                        <Typography variant=\"p\">Subject</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                        <br />\r\n                        <br />\r\n                        <Typography variant=\"p\">Body</Typography>\r\n                        <TextField variant=\"outlined\" fullWidth type=\"text\" multiline rows={6} />\r\n                        <br />\r\n                        <br />\r\n                        <Button variant=\"contained\" sx={{ float: 'right' }}>\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              ) : title === 'New Task' ? (\r\n                <>\r\n                  <EmployeeTaskForm\r\n                    empTask={empTask}\r\n                    employeeList={employeeList}\r\n                    handleEmpTask={handleEmpTask}\r\n                  />\r\n                </>\r\n              ) : title === 'Onboarding Request details' ? (\r\n                <>\r\n                  <Typography variant=\"h4\" sx={{ mt: 2, mb: 4 }}>\r\n                    Employee Details\r\n                  </Typography>\r\n                  <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"First Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.firstName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Middle Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.middleName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Last Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.lastName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Country\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.country}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Office Location\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.offLoc}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Department\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.department}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2 }}>\r\n                        Position Details\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Manager\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.manager}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Job Title of New Starter\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.title}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Employment Type\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.empType}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Employment Type\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.start}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Employment Type\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.end}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Devices Selected\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.hardware.devices.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Peripherals Selected\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.hardware.peripherals.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Requested Managers\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                        {requestDetail.managers.map((manager) => (\r\n                          <>\r\n                            <Chip\r\n                              key={manager.managerEmail}\r\n                              label={manager.managerEmail}\r\n                              color={\r\n                                manager.response === NORES\r\n                                  ? 'warning'\r\n                                  : manager.response === ACCEPTED\r\n                                  ? 'success'\r\n                                  : 'error'\r\n                              }\r\n                            />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Comments\r\n                      </Typography>\r\n                      <TextField\r\n                        readOnly\r\n                        multiline\r\n                        value={requestDetail.comments}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    {/* {user?.firestore.role === 'itadmin' && ( */}\r\n                    {requestDetail.status && (\r\n                      <>\r\n                        <Grid item xs={12}>\r\n                          <Divider />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                            IT Admin\r\n                          </Typography>\r\n                          <TextField\r\n                            multiline\r\n                            readOnly\r\n                            rows={5}\r\n                            value={requestDetail.itcomments}\r\n                            // onChange={(e) => setITComments(e.target.value)}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                </>\r\n              ) : title === 'Closed Onboarding Requests' ? (\r\n                <Grid item xs={12}>\r\n                  <TableContainer component={Paper}>\r\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">First Name</TableCell>\r\n                          <TableCell align=\"center\">Last Name</TableCell>\r\n                          <TableCell align=\"center\">Employment Type</TableCell>\r\n                          <TableCell align=\"center\">Manager</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {closedOnboardings &&\r\n                          closedOnboardings.map((item, index) => {\r\n                            return (\r\n                              <TableRow key={index}>\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Link\r\n                                    href=\"#\"\r\n                                    underline=\"hover\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      setRequestDetail(item);\r\n                                      handleClickOpen(e, 'Onboarding Request details');\r\n                                    }}\r\n                                  >\r\n                                    <Typography variant=\"h6\">{item.personal.firstName}</Typography>\r\n                                  </Link>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  {item.personal.lastName}\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    {item.position.empType}\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    {item.position.manager}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n              ) : title === 'Offboarding Request details' ? (\r\n                <>\r\n                  <Typography variant=\"h4\" sx={{ mt: 2, mb: 4 }}>\r\n                    Employee Details\r\n                  </Typography>\r\n                  <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"First Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.firstName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Middle Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.middleName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Last Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.lastName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"End Date\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.endDate}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Delegations\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.delegation.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Devices Selected\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.hardware.devices.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Peripherals Selected\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.hardware.peripherals.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Comments\r\n                      </Typography>\r\n                      <TextField\r\n                        readOnly\r\n                        multiline\r\n                        value={requestDetail.comments}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    {requestDetail.status && (\r\n                      <>\r\n                        <Grid item xs={12}>\r\n                          <Divider />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                            IT Admin\r\n                          </Typography>\r\n                          <TextField\r\n                            multiline\r\n                            readOnly\r\n                            rows={5}\r\n                            value={requestDetail.itcomments}\r\n                            // onChange={(e) => setITComments(e.target.value)}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                </>\r\n              ) : title === 'Closed Offboarding Requests' ? (\r\n                <Grid item xs={12}>\r\n                  <TableContainer component={Paper}>\r\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">First Name</TableCell>\r\n                          <TableCell align=\"center\">Last Name</TableCell>\r\n                          <TableCell align=\"center\">Employment Type</TableCell>\r\n                          <TableCell align=\"center\">Manager</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {closedOffboardings &&\r\n                          closedOffboardings.map((item) => {\r\n                            return (\r\n                              <TableRow key={item}>\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Link\r\n                                    href=\"#\"\r\n                                    underline=\"hover\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      setRequestDetail(item);\r\n                                      handleClickOpen(e, 'Offboarding Request details');\r\n                                    }}\r\n                                  >\r\n                                    <Typography variant=\"h6\">{item.firstName}</Typography>\r\n                                  </Link>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  {item.lastName}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    {item.empType}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    {item.manager}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n              ) : title === 'Assign Task' ? (\r\n                <>\r\n                  <Typography variant=\"p\">Select Employee</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      fullWidth\r\n                      id=\"demo-simple-select\"\r\n                      value={selectedEmployee}\r\n                      onChange={(e) => {\r\n                        setSelectedEmployee(e.target.value);\r\n                      }}\r\n                    >\r\n                      {employeeList ? (\r\n                        <MenuItem value=\"None\">None</MenuItem>\r\n                      ) : (\r\n                        <MenuItem value=\"None\">No employee found</MenuItem>\r\n                      )}\r\n                      {employeeList &&\r\n                        employeeList.map((emp, index) => (\r\n                          <MenuItem key={emp.email} value={emp.email}>\r\n                            {emp.email}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br />\r\n                  <br />\r\n                  <Typography variant=\"p\">Select tasks to assign.</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      id=\"demo-multiple-chip\"\r\n                      multiple\r\n                      value={selectedTasks}\r\n                      onChange={handleSelectedTasks}\r\n                      input={<OutlinedInput id=\"select-multiple-chip\" label=\"Managers\" />}\r\n                      renderValue={(selected) => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          {selected.map((value) => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={tasks.find((task) => task._id === value).task}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {tasks.map(({ _id, task, employee }) => {\r\n                        if (employee !== 'None') return;\r\n                        return (\r\n                          <MenuItem key={_id} value={_id} style={getStyles(task, tasks, theme)}>\r\n                            {task}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </>\r\n              ) : title === 'Assign Tickets' ? (\r\n                <>\r\n                  <Typography variant=\"p\">Select Employee</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      fullWidth\r\n                      id=\"demo-simple-select\"\r\n                      value={selectedEmployee}\r\n                      onChange={(e) => {\r\n                        setSelectedEmployee(e.target.value);\r\n                      }}\r\n                    >\r\n                      {ticketEmployees ? (\r\n                        <MenuItem value=\"None\">None</MenuItem>\r\n                      ) : (\r\n                        <MenuItem value=\"None\">No employee found</MenuItem>\r\n                      )}\r\n                      {ticketEmployees &&\r\n                        ticketEmployees.map((emp, index) => (\r\n                          <MenuItem key={emp.email} value={emp.email}>\r\n                            {emp.email}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br />\r\n                  <br />\r\n                  <Typography variant=\"p\">Select tasks to assign.</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      id=\"demo-multiple-chip\"\r\n                      multiple\r\n                      value={selectedTasks}\r\n                      onChange={handleSelectedTasks}\r\n                      input={<OutlinedInput id=\"select-multiple-chip\" label=\"Managers\" />}\r\n                      renderValue={(selected) => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          {selected.map((value) => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={tickets.find((ticket) => ticket._id === value).title}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {tickets.map(({ _id, title, assigned }) => {\r\n                        if (assigned) return;\r\n                        return (\r\n                          <MenuItem key={_id} value={_id} style={getStyles(title, tickets, theme)}>\r\n                            {title}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </>\r\n              ) : title === 'Invite new users' ? (\r\n                <>\r\n                  <DialogContentText variant=\"h5\">Email</DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    type=\"email\"\r\n                    id=\"project-name\"\r\n                    placeholder=\"user@email.com\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={newInvites}\r\n                    onChange={(e) => setNewInvites(e.target.value)}\r\n                  />\r\n                  <DialogContentText>\r\n                    You can invite multiple users by placing a “,” between email addresses.\r\n                  </DialogContentText>\r\n                  <DialogContentText variant=\"h5\">Role</DialogContentText>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      fullWidth\r\n                      id=\"demo-simple-select\"\r\n                      value={selectedRole}\r\n                      placeholder=\"Select a role\"\r\n                      onChange={(e) => {\r\n                        setSelectedRole(e.target.value);\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"itadmin\">IT Admin</MenuItem>\r\n                      <MenuItem value=\"admin\">Admin</MenuItem>\r\n                      {/* <MenuItem value=\"itemployee\">IT Employee</MenuItem> */}\r\n                      <MenuItem value=\"manager\">Manager</MenuItem>\r\n                      <MenuItem value=\"employee\">Employee</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </>\r\n              ) : null}\r\n            </CardContent>\r\n\r\n            <CardActions sx={{ float: 'right' }} style={{ padding: '0px 20px 20px' }}>\r\n              <Button onClick={handleClose}>Close</Button>\r\n              {(title === 'New Task' ||\r\n                title === 'Assign Task' ||\r\n                title === 'Assign Tickets' ||\r\n                title === 'Invite new users' ||\r\n                (user?.firestore.role === 'itadmin' &&\r\n                  !requestDetail?.status &&\r\n                  (title === 'Onboarding Request details' ||\r\n                    title === 'Offboarding Request details'))) && (\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    if (title === 'Assign Task') {\r\n                      assignTask();\r\n                      handleClose();\r\n                      return;\r\n                    } else if (title === 'Assign Tickets') {\r\n                      assignTickets();\r\n                      handleClose();\r\n                      return;\r\n                    } else if (title === 'Invite new users') {\r\n                      if (!newInvites || !selectedRole) {\r\n                        toast.error('All fields are required');\r\n                        return;\r\n                      }\r\n                      sendInvites();\r\n                      handleClose();\r\n                      return;\r\n                    }\r\n                    handleDialogSubmit(requestDetail?._id)();\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  {title === 'New Task' || title === 'Assign Task' || title === 'Assign Tickets'\r\n                    ? 'Submit'\r\n                    : title === 'Invite new users'\r\n                    ? 'Invite'\r\n                    : 'Accept'}\r\n                </Button>\r\n              )}\r\n            </CardActions>\r\n          </Card>\r\n        </Container>\r\n      </Dialog>\r\n\r\n      <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n        <Grid item xs={12}>\r\n          <Typography sx={{ float: 'left' }} variant=\"h3\">\r\n            Admin Portal\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid sx={{ mt: -6 }} item xs={12}>\r\n          <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            <Grid item xs={12}>\r\n              <CardContent>\r\n                <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n                  <Grid item xs={3}>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        backgroundColor: tabTitle === 'Dashboard' ? '#dce9f2' : 'white',\r\n                      }}\r\n                      onClick={() => {\r\n                        setValue('1');\r\n                        setTabTitle('Dashboard');\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <center>\r\n                          <img\r\n                            alt=\"Windows\"\r\n                            src=\"https://img.icons8.com/material/74/null/dashboard-layout.png\"\r\n                          />\r\n                          <Typography variant=\"h5\">Dashboard</Typography>\r\n                        </center>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        backgroundColor: tabTitle === 'Manager' ? '#dce9f2' : 'white',\r\n                      }}\r\n                      onClick={() => {\r\n                        setValue('1');\r\n                        setTabTitle('Manager');\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <center>\r\n                          <img\r\n                            alt=\"Windows\"\r\n                            src=\"https://img.icons8.com/material-rounded/74/null/conference-call.png\"\r\n                          />\r\n                          <Typography variant=\"h5\">Manager</Typography>\r\n                        </center>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        backgroundColor: tabTitle === 'Services' ? '#dce9f2' : 'white',\r\n                      }}\r\n                      onClick={() => {\r\n                        setValue('1');\r\n                        setTabTitle('Services');\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <center>\r\n                          <img\r\n                            alt=\"Windows\"\r\n                            src=\"https://img.icons8.com/ios-filled/74/null/conference-background-selected.png\"\r\n                          />\r\n                          <Typography variant=\"h5\">Services</Typography>\r\n                        </center>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        backgroundColor: tabTitle === 'Settings' ? '#dce9f2' : 'white',\r\n                      }}\r\n                      onClick={() => {\r\n                        setValue('1');\r\n                        setTabTitle('Settings');\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <center>\r\n                          <img\r\n                            alt=\"Windows\"\r\n                            src=\"https://img.icons8.com/ios-filled/74/null/gear.png\"\r\n                          />\r\n                          <Typography variant=\"h5\">Settings</Typography>\r\n                        </center>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {tabTitle == 'Dashboard' ? (\r\n            <>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                  <Typography variant=\"h5\">Statistics</Typography>\r\n                  <br />\r\n                  <Stack direction=\"row\" spacing={1} justifyContent=\"space-between\" fullWidth>\r\n                    {STATS.map((item) => (\r\n                      <Card\r\n                        key={item.key}\r\n                        variant=\"outlined\"\r\n                        style={{ width: '100%', textAlign: 'center', borderRadius: '25px' }}\r\n                      >\r\n                        <CardContent>\r\n                          <Typography variant=\"h4\">{item.title}</Typography>\r\n                          {ticketStats && (\r\n                            <Typography variant=\"h5\">{ticketStats[item.key]}</Typography>\r\n                          )}\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                  </Stack>\r\n                  <br />\r\n                  {ticketStats && (\r\n                    <AppCurrentDownload\r\n                      title=\"Tickets\"\r\n                      chart={{\r\n                        colors: [\r\n                          theme.palette.primary.main,\r\n                          theme.palette.info.main,\r\n                          theme.palette.error.main,\r\n                          theme.palette.warning.main,\r\n                        ],\r\n                        series: [\r\n                          { label: 'Opened', value: ticketStats['open'] },\r\n                          { label: 'Pending', value: ticketStats['pending'] },\r\n                          { label: 'Closed', value: ticketStats['closed'] },\r\n                        ],\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Typography variant=\"h5\">Latest Activity</Typography>\r\n                  <br />\r\n                  <List\r\n                    component=\"nav\"\r\n                    sx={{\r\n                      px: 0,\r\n                      py: 0,\r\n                      '& .MuiListItemButton-root': {\r\n                        py: 1.5,\r\n                        '& .MuiAvatar-root': avatarSX,\r\n                        '& .MuiListItemSecondaryAction-root': { ...actionSX, position: 'relative' },\r\n                      },\r\n                    }}\r\n                  >\r\n                    {OPTION_OPERATION.map((item) => {\r\n                      return (\r\n                        <ListItemButton\r\n                          key={item.title}\r\n                          onClick={() => handleClickOpen(item?.title)}\r\n                          divider\r\n                        >\r\n                          <ListItemAvatar>\r\n                            <Avatar\r\n                              sx={{\r\n                                color: 'secondary.main',\r\n                                bgcolor: 'secondary.lighter',\r\n                              }}\r\n                            >\r\n                              {item?.icon}\r\n                            </Avatar>\r\n                          </ListItemAvatar>\r\n                          <ListItemText\r\n                            primary={<Typography variant=\"subtitle1\">{item?.title}</Typography>}\r\n                          />\r\n                        </ListItemButton>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : tabTitle == 'Tickets' ? (\r\n            <>\r\n              <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                  <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                    <TabList\r\n                      onChange={handleChange}\r\n                      textColor=\"secondary\"\r\n                      indicatorColor=\"secondary\"\r\n                      aria-label=\"lab API tabs example\"\r\n                      centered\r\n                    >\r\n                      <Tab label=\"My Tickets\" value=\"1\" />\r\n                      <Tab label=\"New Tickets\" value=\"2\" />\r\n                      <Tab label=\"Search Tickets\" value=\"3\" />\r\n                      <Tab label=\"Custom Response\" value=\"4\" />\r\n                      <Tab label=\"Staff Members\" value=\"6\" />\r\n                      <Tab label=\"Departments\" value=\"7\" />\r\n                      <Tab label=\"Email Settings\" value=\"8\" />\r\n                    </TabList>\r\n                  </Box>\r\n                  <TabPanel value=\"1\">\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h5\" sx={{ float: 'left' }}>\r\n                        My Tickets\r\n                      </Typography>\r\n                      <Link\r\n                        href=\"#\"\r\n                        sx={{ float: 'right' }}\r\n                        underline=\"hover\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        Closed Tickets\r\n                      </Link>\r\n                    </Grid>\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Number\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '35%' }} align=\"center\">\r\n                                Title\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Department\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Author\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '15%' }} align=\"center\">\r\n                                Date\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {[1, 2, 3, 4, 5].map((item) => {\r\n                              return (\r\n                                <TableRow\r\n                                  key={item}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell align=\"center\" scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      100101\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    This is the title for ticket\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Selected Department\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      My Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Feb 23, 2023\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                    <br />\r\n                    <Button variant=\"contained\" startIcon={<AddIcon />} sx={{ float: 'right' }}>\r\n                      Create new ticket\r\n                    </Button>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"2\">\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h5\" sx={{ float: 'left' }}>\r\n                        New Tickets\r\n                      </Typography>\r\n                      <Link\r\n                        href=\"#\"\r\n                        sx={{ float: 'right' }}\r\n                        underline=\"hover\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        Closed Tickets\r\n                      </Link>\r\n                    </Grid>\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Number\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '35%' }} align=\"center\">\r\n                                Title\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Department\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Author\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '15%' }} align=\"center\">\r\n                                Date\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {[1, 2, 3, 4, 5].map((item) => {\r\n                              return (\r\n                                <TableRow\r\n                                  key={item}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell align=\"center\" scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      <Link\r\n                                        href=\"#\"\r\n                                        underline=\"hover\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          handleClickOpen(e, 'View Ticket');\r\n                                        }}\r\n                                      >\r\n                                        100101\r\n                                      </Link>\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    This is the title for ticket\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Selected Department\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      My Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Feb 23, 2023\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"3\">\r\n                    <center>\r\n                      <Paper\r\n                        component=\"form\"\r\n                        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: '60%' }}\r\n                      >\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          placeholder=\"Search what you want?\"\r\n                          inputProps={{ 'aria-label': 'search google maps' }}\r\n                        />\r\n                        <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </Paper>\r\n                    </center>\r\n                    <Stack direction=\"row\" spacing={2} justifyContent=\"center\" mt={1}>\r\n                      <div>\r\n                        <Typography variant=\"p\">Date</Typography>\r\n                        <br />\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                            <DatePicker\r\n                              disableFuture\r\n                              openTo=\"year\"\r\n                              views={['year', 'month', 'day']}\r\n                              value={value}\r\n                              onChange={(newValue) => {\r\n                                setFrom(newValue);\r\n                              }}\r\n                              renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                            &nbsp;\r\n                            <Typography variant=\"p\">To</Typography>\r\n                            &nbsp;\r\n                            <DatePicker\r\n                              disableFuture\r\n                              openTo=\"year\"\r\n                              views={['year', 'month', 'day']}\r\n                              value={value}\r\n                              onChange={(newValue) => {\r\n                                setTo(newValue);\r\n                              }}\r\n                              renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                          </div>\r\n                        </LocalizationProvider>\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Tags</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Owner</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <div style={{ width: '100px' }}>\r\n                        <Typography variant=\"p\">Status</Typography>\r\n                        <br />\r\n                        <FormControl fullWidth>\r\n                          {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\r\n                          <Select\r\n                            fullWidth\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={status}\r\n                            // label=\"Status\"\r\n                            onChange={handleStatus}\r\n                          >\r\n                            <MenuItem value=\"All\">All</MenuItem>\r\n                            <MenuItem value=\"Open\">Open</MenuItem>\r\n                            <MenuItem value=\"Closed\">Closed</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Number\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '35%' }} align=\"center\">\r\n                                Title\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Department\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Author\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '15%' }} align=\"center\">\r\n                                Date\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {[1, 2, 3, 4, 5].map((item) => {\r\n                              return (\r\n                                <TableRow\r\n                                  key={item}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell align=\"center\" scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      100010\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    This is the title for ticket\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Selected Department\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      My Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Feb 23, 2023\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"4\">\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={4}>\r\n                        <Card variant=\"outlined\">\r\n                          <CardContent>\r\n                            <Typography variant=\"h5\">Custom Responses</Typography>\r\n                            <br />\r\n                            <List\r\n                              component=\"nav\"\r\n                              sx={{\r\n                                px: 0,\r\n                                py: 0,\r\n                                '& .MuiListItemButton-root': {\r\n                                  py: 1.5,\r\n                                  '& .MuiAvatar-root': avatarSX,\r\n                                  '& .MuiListItemSecondaryAction-root': {\r\n                                    ...actionSX,\r\n                                    position: 'relative',\r\n                                  },\r\n                                },\r\n                              }}\r\n                            >\r\n                              {OPTION_OPERATION.map((item) => {\r\n                                return (\r\n                                  <ListItemButton divider>\r\n                                    <ListItemText\r\n                                      primary={\r\n                                        <Typography variant=\"subtitle1\">Responses</Typography>\r\n                                      }\r\n                                    />\r\n                                    <ListItemAvatar>\r\n                                      <Avatar\r\n                                        float=\"right\"\r\n                                        sx={{\r\n                                          color: 'secondary.main',\r\n                                          bgcolor: 'secondary.lighter',\r\n                                        }}\r\n                                      >\r\n                                        ICON\r\n                                      </Avatar>\r\n                                    </ListItemAvatar>\r\n                                  </ListItemButton>\r\n                                );\r\n                              })}\r\n                              <br />\r\n                              <center>\r\n                                <Button variant=\"contained\" startIcon={<AddIcon />}>\r\n                                  Add new response\r\n                                </Button>\r\n                              </center>\r\n                            </List>\r\n                          </CardContent>\r\n                        </Card>\r\n                      </Grid>\r\n                      <Grid item xs={8}>\r\n                        <div style={{ marginLeft: '10%', marginTop: '10%' }}>\r\n                          <Stack direction=\"row\" spacing={2} fullWidth>\r\n                            <div style={{ width: '40%' }}>\r\n                              <Typography variant=\"p\">Title</Typography>\r\n                              <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                            </div>\r\n                            <div style={{ width: '40%' }}>\r\n                              <Typography variant=\"p\">Language</Typography>\r\n                              <br />\r\n                              <FormControl fullWidth>\r\n                                {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\r\n                                <Select\r\n                                  fullWidth\r\n                                  labelId=\"demo-simple-select-label\"\r\n                                  id=\"demo-simple-select\"\r\n                                  value={lang}\r\n                                  // label=\"Status\"\r\n                                  onChange={handleLang}\r\n                                >\r\n                                  <MenuItem value=\"English\">English</MenuItem>\r\n                                  <MenuItem value=\"Hindi\">Hindi</MenuItem>\r\n                                </Select>\r\n                              </FormControl>\r\n                            </div>\r\n                          </Stack>\r\n                          <br />\r\n                          <Typography variant=\"p\">Content</Typography>\r\n                          <TextField variant=\"outlined\" fullWidth type=\"text\" multiline rows={6} />\r\n                          <br />\r\n                          <br />\r\n                          <Button variant=\"contained\" sx={{ float: 'right' }}>\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"6\">\r\n                    <Typography variant=\"h5\">Staff Members</Typography>\r\n                    <br />\r\n                    <FormControl sx={{ float: 'left' }} style={{ width: '175px' }}>\r\n                      <Select\r\n                        fullWidth\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={ticketDepartment}\r\n                        onChange={handleTicketDepartmentChange}\r\n                      >\r\n                        {/* <MenuItem value=\"All\">All Departments</MenuItem> */}\r\n                        {ticketDepartmentsList.map((dep) => (\r\n                          <MenuItem key={dep} value={dep}>\r\n                            {dep}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    <Stack direction=\"row\" spacing={2} sx={{ float: 'right' }}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<AddIcon />}\r\n                        onClick={(e) => handleClickOpen(e, 'Add Staff')}\r\n                      >\r\n                        Add Staff\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<AddIcon />}\r\n                        onClick={(e) => handleClickOpen(e, 'Assign Tickets')}\r\n                      >\r\n                        Assign Tickets\r\n                      </Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      {ticketEmployees.map((emp) => {\r\n                        return (\r\n                          <>\r\n                            <Card key={emp._id} sx={{ mb: 2, p: 2 }} variant=\"outlined\">\r\n                              <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                                <div style={{ width: '10%' }}>\r\n                                  <img\r\n                                    src={emp.photoURL}\r\n                                    alt=\"Profile Picture\"\r\n                                    style={{\r\n                                      verticalAlign: 'middle',\r\n                                      width: '50px',\r\n                                      height: '50px',\r\n                                      borderRadius: '50%',\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                                <Typography variant=\"h5\" style={{ width: '20%' }}>\r\n                                  {emp.displayName}\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" style={{ width: '25%' }}>\r\n                                  Tickets assigned: {'#'}\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" style={{ width: '25%' }}>\r\n                                  Tickets closed: {'#'}\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" style={{ width: '20%' }}>\r\n                                  {'#'}\r\n                                </Typography>\r\n                              </Stack>\r\n                            </Card>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"7\">\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={4}>\r\n                        <Card variant=\"outlined\">\r\n                          <CardContent>\r\n                            <Typography variant=\"h5\">Departments</Typography>\r\n                            <br />\r\n                            <List\r\n                              component=\"nav\"\r\n                              sx={{\r\n                                px: 0,\r\n                                py: 0,\r\n                                '& .MuiListItemButton-root': {\r\n                                  py: 1.5,\r\n                                  '& .MuiAvatar-root': avatarSX,\r\n                                  '& .MuiListItemSecondaryAction-root': {\r\n                                    ...actionSX,\r\n                                    position: 'relative',\r\n                                  },\r\n                                },\r\n                              }}\r\n                            >\r\n                              {OPTION_OPERATION.map((item, index) => {\r\n                                return (\r\n                                  <ListItemButton divider>\r\n                                    <ListItemAvatar>\r\n                                      <Avatar\r\n                                        sx={{\r\n                                          color: 'secondary.main',\r\n                                          bgcolor: 'secondary.lighter',\r\n                                        }}\r\n                                      >\r\n                                        ICON\r\n                                      </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                      primary={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                          Department {index + 1}\r\n                                        </Typography>\r\n                                      }\r\n                                    />\r\n                                  </ListItemButton>\r\n                                );\r\n                              })}\r\n                            </List>\r\n                          </CardContent>\r\n                        </Card>\r\n                      </Grid>\r\n                      <Grid item xs={8} container>\r\n                        <div style={{ marginLeft: '10%', marginTop: '10%', width: '100%' }}>\r\n                          <Grid item xs={12}>\r\n                            <Stack direction=\"row\" spacing={3}>\r\n                              <div style={{ width: '70%' }}>\r\n                                <Typography variant=\"p\">Name</Typography>\r\n                                <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                              </div>\r\n                              <FormControlLabel\r\n                                control={\r\n                                  <Checkbox sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }} />\r\n                                }\r\n                                label=\"Private\"\r\n                              />\r\n                            </Stack>\r\n                            <br />\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              sx={{ float: 'right', mr: '13%' }}\r\n                              startIcon={<AddIcon />}\r\n                            >\r\n                              Add Department\r\n                            </Button>\r\n                          </Grid>\r\n                          <br />\r\n                          <br />\r\n                          <br />\r\n                          <br />\r\n                          <hr />\r\n                          <br />\r\n                          <br />\r\n                          <Grid item xs={12}>\r\n                            <Stack>\r\n                              <div style={{ width: '70%' }}>\r\n                                <Typography variant=\"p\">Default Department</Typography>\r\n                                <FormControl fullWidth>\r\n                                  <Select\r\n                                    fullWidth\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={department}\r\n                                    onChange={handleDepartment}\r\n                                  >\r\n                                    <MenuItem value=\"Department 1\">Department 1</MenuItem>\r\n                                    <MenuItem value=\"Department 2\">Department 2</MenuItem>\r\n                                    <MenuItem value=\"Department 3\">Department 3</MenuItem>\r\n                                  </Select>\r\n                                </FormControl>\r\n                              </div>\r\n                              <FormControlLabel\r\n                                control={\r\n                                  <Checkbox sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }} />\r\n                                }\r\n                                label=\"Allow users to create ticket only in the default department\"\r\n                                sx={{ mt: '2px' }}\r\n                              />\r\n                            </Stack>\r\n                            <Button variant=\"contained\" sx={{ float: 'right', mr: '13%' }}>\r\n                              Update Default Department\r\n                            </Button>\r\n                          </Grid>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"8\">\r\n                    <Typography variant=\"h5\" sx={{ float: 'left' }}>\r\n                      Email Settings\r\n                    </Typography>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      sx={{ float: 'right' }}\r\n                      startIcon={<AddIcon />}\r\n                      onClick={(e) => {\r\n                        handleClickOpen(e, 'Email Templates');\r\n                      }}\r\n                    >\r\n                      Add Templates\r\n                    </Button>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      spacing={4}\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"flex-end\"\r\n                    >\r\n                      <div style={{ width: '70%' }}>\r\n                        <Typography variant=\"p\">Email server address</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <Button variant=\"contained\">Save</Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      spacing={4}\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"flex-end\"\r\n                    >\r\n                      <div style={{ width: '70%' }}>\r\n                        <Typography variant=\"p\">Image header URL</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <Button variant=\"contained\">Save</Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12} container spacing={2}>\r\n                      <Grid item xs={6}>\r\n                        <Paper variant=\"elevation\" elevation={4} sx={{ p: 2, height: '475px' }}>\r\n                          <Typography variant=\"h5\">SMTP Server</Typography>\r\n                          <Typography variant=\"subtitle2\">Configure your SMTP server</Typography>\r\n                          <br />\r\n                          <Typography variant=\"p\">Server</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">User</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">Password</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n                            <Button variant=\"contained\" color=\"success\">\r\n                              Test\r\n                            </Button>\r\n                            <Button variant=\"contained\">Save</Button>\r\n                          </Stack>\r\n                        </Paper>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <Paper variant=\"elevation\" elevation={4} sx={{ p: 2 }}>\r\n                          <Typography variant=\"h5\">IMAP Server</Typography>\r\n                          <Typography variant=\"subtitle2\">Configure your IMAP server</Typography>\r\n                          <br />\r\n                          <Typography variant=\"p\">Server</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">User</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">Password</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">IMAP Token</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n                            <Button variant=\"contained\" color=\"success\">\r\n                              Test\r\n                            </Button>\r\n                            <Button variant=\"contained\">Save</Button>\r\n                          </Stack>\r\n                        </Paper>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                </TabContext>\r\n              </Box>\r\n            </>\r\n          ) : tabTitle == 'Manager' ? (\r\n            <>\r\n              <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                  <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                    <TabList\r\n                      onChange={handleChange}\r\n                      textColor=\"secondary\"\r\n                      indicatorColor=\"secondary\"\r\n                      aria-label=\"lab API tabs example\"\r\n                      centered\r\n                    >\r\n                      <Tab label=\"Onboarding Requests\" value=\"1\" />\r\n                      <Tab label=\"Offboarding Requests\" value=\"2\" />\r\n                      <Tab label=\"Tasks\" value=\"3\" />\r\n                      {/* <Tab label=\"Assign Tasks\" value=\"4\" /> */}\r\n                      {/* <Tab label=\"HR Onboarding\" value=\"5\" /> */}\r\n                      {/* <Tab label=\"HR Offboarding\" value=\"6\" /> */}\r\n                    </TabList>\r\n                  </Box>\r\n                  <TabPanel value=\"1\">\r\n                    <center>\r\n                      <Paper\r\n                        component=\"form\"\r\n                        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: '60%' }}\r\n                      >\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          placeholder=\"Search ...\"\r\n                          inputProps={{ 'aria-label': 'search google maps' }}\r\n                        />\r\n                        <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </Paper>\r\n                    </center>\r\n                    <br />\r\n                    <Link\r\n                      href=\"#\"\r\n                      sx={{ float: 'right' }}\r\n                      underline=\"hover\"\r\n                      onClick={(e) => {\r\n                        getClosedOnboardingRequests();\r\n                        handleClickOpen(e, 'Closed Onboarding Requests');\r\n                      }}\r\n                    >\r\n                      Closed Requests\r\n                    </Link>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\">First Name</TableCell>\r\n                              <TableCell align=\"center\">Last Name</TableCell>\r\n                              <TableCell align=\"center\">Employment Type</TableCell>\r\n                              <TableCell align=\"center\">Manager</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {onboardingReq &&\r\n                              onboardingReq.map((item, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    <TableCell align=\"center\" scope=\"row\">\r\n                                      <Link\r\n                                        href=\"#\"\r\n                                        underline=\"hover\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setRequestDetail(item);\r\n                                          handleClickOpen(e, 'Onboarding Request details');\r\n                                        }}\r\n                                      >\r\n                                        <Typography variant=\"h6\">\r\n                                          {item.personal.firstName}\r\n                                        </Typography>\r\n                                      </Link>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" variant=\"h6\">\r\n                                      {item.personal.lastName}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                        {item.position.empType}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                        {item.position.manager}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"2\">\r\n                    <center>\r\n                      <Paper\r\n                        component=\"form\"\r\n                        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: '60%' }}\r\n                      >\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          placeholder=\"Search ...\"\r\n                          inputProps={{ 'aria-label': 'search google maps' }}\r\n                        />\r\n                        <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </Paper>\r\n                    </center>\r\n                    <br />\r\n                    <Link\r\n                      href=\"#\"\r\n                      sx={{ float: 'right' }}\r\n                      underline=\"hover\"\r\n                      onClick={(e) => {\r\n                        getClosedOffboardingRequests();\r\n                        handleClickOpen(e, 'Closed Offboarding Requests');\r\n                      }}\r\n                    >\r\n                      Closed Requests\r\n                    </Link>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\">First Name</TableCell>\r\n                              <TableCell align=\"center\">Last Name</TableCell>\r\n                              <TableCell align=\"center\">Employment Type</TableCell>\r\n                              <TableCell align=\"center\">Manager</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {offboardingReq &&\r\n                              offboardingReq.map((item) => {\r\n                                return (\r\n                                  <TableRow key={item}>\r\n                                    <TableCell align=\"center\" scope=\"row\">\r\n                                      <Link\r\n                                        href=\"#\"\r\n                                        underline=\"hover\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setRequestDetail(item);\r\n                                          handleClickOpen(e, 'Offboarding Request details');\r\n                                        }}\r\n                                      >\r\n                                        <Typography variant=\"h6\">{item.firstName}</Typography>\r\n                                      </Link>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" variant=\"h6\">\r\n                                      {item.lastName}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                        {item.empType}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                        {item.manager}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"3\">\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"h5\">Tasks</Typography>\r\n                      <Paper\r\n                        component=\"form\"\r\n                        sx={{\r\n                          p: '2px 4px',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          width: '50%',\r\n                          borderRadius: '50px',\r\n                        }}\r\n                      >\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          placeholder=\"Search for tags\"\r\n                          value={searchTag}\r\n                          onChange={(e) => setSearchTag(e.target.value)}\r\n                        />\r\n                        {/* <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                                                    <SearchIcon />\r\n                                                </IconButton> */}\r\n                      </Paper>\r\n                      <Stack direction=\"row\" spacing={2}>\r\n                        <Button\r\n                          disabled={!employeeList}\r\n                          variant=\"contained\"\r\n                          startIcon={<AddIcon />}\r\n                          onClick={(e) => {\r\n                            handleClickOpen(e, 'Assign Task');\r\n                          }}\r\n                        >\r\n                          Assign Task\r\n                        </Button>\r\n                        <Button\r\n                          disabled={!employeeList}\r\n                          variant=\"contained\"\r\n                          startIcon={<AddIcon />}\r\n                          onClick={(e) => {\r\n                            handleClickOpen(e, 'New Task');\r\n                          }}\r\n                        >\r\n                          Add Task\r\n                        </Button>\r\n                      </Stack>\r\n                    </div>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '25%' }} align=\"center\">\r\n                                Task\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Assigned By\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '15%' }} align=\"center\">\r\n                                Assigned To\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Due Date\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Source\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Tags\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Status\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {tasks.map((item) => {\r\n                              if (searchTag && !new RegExp(searchTag).test(item.tag)) return;\r\n                              return (\r\n                                <TableRow\r\n                                  key={item._id}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell align=\"center\" scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      {item.task}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    {item.manager}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    {item.employee === 'None' ? '-' : item.employee}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      {new Date(item.due).toLocaleDateString()}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      <a href={`${item.url}`} target=\"blank\">\r\n                                        {item.source}\r\n                                      </a>\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      {item.tag}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    {item.employee !== 'None' ? (\r\n                                      <Chip\r\n                                        label={item.status ? 'Completed' : 'In Progress'}\r\n                                        color={item.status ? 'success' : 'warning'}\r\n                                      />\r\n                                    ) : (\r\n                                      <Chip label=\"Not Assigned\" color={'error'} />\r\n                                    )}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"4\">\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      spacing={2}\r\n                      justifyContent=\"center\"\r\n                      alignItems=\"flex-end\"\r\n                      mt={1}\r\n                    >\r\n                      <div style={{ width: '20%' }}>\r\n                        <Typography variant=\"p\">Choose Employee</Typography>\r\n                        <br />\r\n                        <FormControl fullWidth>\r\n                          {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\r\n                          <Select\r\n                            fullWidth\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={employee}\r\n                            // label=\"Status\"\r\n                            onChange={handleEmployee}\r\n                          >\r\n                            <MenuItem value=\"Employee 1\">Employee 1</MenuItem>\r\n                            <MenuItem value=\"Employee 2\">Employee 2</MenuItem>\r\n                            <MenuItem value=\"Employee 3\">Employee 3</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Due Date</Typography>\r\n                        <br />\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                          <DatePicker\r\n                            disableFuture\r\n                            openTo=\"year\"\r\n                            views={['year', 'month', 'day']}\r\n                            value={value}\r\n                            onChange={(newValue) => {\r\n                              setFrom(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                          />\r\n                        </LocalizationProvider>\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Tags</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <Button variant=\"contained\">Search</Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                    <TableContainer component={Paper}>\r\n                      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              Select\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Task Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '25%' }} align=\"center\">\r\n                              Source Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '25%' }} align=\"center\">\r\n                              Source URL\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Tag\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {[1, 2, 3, 4, 5, 6, 7].map((item) => {\r\n                            return (\r\n                              <TableRow\r\n                                key={item}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                              >\r\n                                <TableCell align=\"center\">\r\n                                  <Checkbox color=\"success\" />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    Open Account\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  Salesforce\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    something.com\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    Sales Team\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"5\">\r\n                    <TableContainer component={Paper}>\r\n                      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              First Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              Last Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Location\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Job Title\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Hire Date\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Contract End Date\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {[1, 2, 3, 4, 5, 6, 7].map((item) => {\r\n                            return (\r\n                              <TableRow\r\n                                key={item}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                              >\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    FName\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    LName\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    India\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    Manager\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    10/10/23\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    10/10/23\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"6\">\r\n                    <TableContainer component={Paper}>\r\n                      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              First Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              Last Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Location\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Job Title\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Hire Date\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Contract End Date\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {[1, 2, 3, 4, 5, 6, 7].map((item) => {\r\n                            return (\r\n                              <TableRow\r\n                                key={item}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                              >\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    FName\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    LName\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    India\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    Manager\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    10/10/23\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    10/10/23\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </TabPanel>\r\n                </TabContext>\r\n              </Box>\r\n            </>\r\n          ) : tabTitle == 'Services' ? (\r\n            <>\r\n              <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                  <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                    <TabList\r\n                      onChange={handleChange}\r\n                      textColor=\"secondary\"\r\n                      indicatorColor=\"secondary\"\r\n                      aria-label=\"lab API tabs example\"\r\n                      centered\r\n                    >\r\n                      <Tab label=\"FAQs\" value=\"1\" />\r\n                      <Tab label=\"Policies\" value=\"2\" />\r\n                      <Tab label=\"Blog\" value=\"3\" />\r\n                      <Tab label=\"News\" value=\"4\" />\r\n                    </TabList>\r\n                  </Box>\r\n                  <TabPanel value=\"1\">\r\n                    <Stack spacing={2} sx={{ width: '50%' }} m={'auto'}>\r\n                      <Link\r\n                        href=\"#\"\r\n                        underline=\"hover\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          navigate('/dashboard/faq', { state: { editable: true } });\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body1\" sx={{ float: 'right' }}>\r\n                          Edit FAQs\r\n                        </Typography>\r\n                      </Link>\r\n                      <div>\r\n                        <Typography variant=\"p\">Choose Category</Typography>\r\n                        <br />\r\n                        <FormControl fullWidth>\r\n                          {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\r\n                          <Select\r\n                            fullWidth\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={category}\r\n                            // label=\"Status\"\r\n                            onChange={handleCategory}\r\n                          >\r\n                            <MenuItem value=\"Hardware\">Hardware</MenuItem>\r\n                            <MenuItem value=\"Software\">Software</MenuItem>\r\n                            <MenuItem value=\"Security\">Security</MenuItem>\r\n                            <MenuItem value=\"Troubleshooting\">Troubleshooting</MenuItem>\r\n                            <MenuItem value=\"Others\">Others</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Question</Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          value={question}\r\n                          onChange={(e) => setQuestion(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Answer</Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          multiline\r\n                          rows={6}\r\n                          value={answer}\r\n                          onChange={(e) => setAnswer(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <Button startIcon={<AddIcon />} variant=\"contained\" onClick={addFAQ}>\r\n                        Add FAQ\r\n                      </Button>\r\n                    </Stack>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"2\">\r\n                    <Stack spacing={2} sx={{ width: '50%' }} m={'auto'}>\r\n                      <div>\r\n                        <Typography variant=\"p\" value={inputState.policySub}>\r\n                          Subject\r\n                        </Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          value={inputState.policySub}\r\n                          onChange={(e) => {\r\n                            setInputState((prev) => {\r\n                              return { ...prev, policySub: e.target.value };\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Policy</Typography>\r\n                        <TextEditor\r\n                          id=\"poliy\"\r\n                          value={inputState}\r\n                          setValue={handleRTEInput('policy')}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        startIcon={<AddIcon />}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          handleServicesInput('policy');\r\n                        }}\r\n                      >\r\n                        Add Policy\r\n                      </Button>\r\n                    </Stack>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"3\">\r\n                    <Stack spacing={2} sx={{ width: '50%' }} m={'auto'}>\r\n                      <div>\r\n                        <Typography variant=\"p\">Subject</Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          value={inputState.blogSub}\r\n                          onChange={(e) => {\r\n                            setInputState((prev) => {\r\n                              return { ...prev, blogSub: e.target.value };\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Blog</Typography>\r\n                        <TextEditor\r\n                          id=\"blog\"\r\n                          value={inputState}\r\n                          setValue={handleRTEInput('blog')}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        startIcon={<AddIcon />}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          handleServicesInput('blog');\r\n                        }}\r\n                      >\r\n                        Add Blog\r\n                      </Button>\r\n                    </Stack>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"4\">\r\n                    <Stack spacing={2} sx={{ width: '50%' }} m={'auto'}>\r\n                      <div>\r\n                        <Typography variant=\"p\">Subject</Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          value={inputState.newsSub}\r\n                          onChange={(e) => {\r\n                            setInputState((prev) => {\r\n                              return { ...prev, newsSub: e.target.value };\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">News</Typography>\r\n                        <TextEditor\r\n                          id=\"news\"\r\n                          value={inputState}\r\n                          setValue={handleRTEInput('news')}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        startIcon={<AddIcon />}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          handleServicesInput('news');\r\n                        }}\r\n                      >\r\n                        Add News\r\n                      </Button>\r\n                    </Stack>\r\n                  </TabPanel>\r\n                </TabContext>\r\n              </Box>\r\n            </>\r\n          ) : tabTitle == 'Settings' ? (\r\n            <>\r\n              <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                  <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                    <TabList\r\n                      onChange={handleChange}\r\n                      textColor=\"secondary\"\r\n                      indicatorColor=\"secondary\"\r\n                      aria-label=\"lab API tabs example\"\r\n                      centered\r\n                    >\r\n                      <Tab label=\"General\" value=\"1\" />\r\n                      <Tab label=\"Integrations\" value=\"2\" />\r\n                      <Tab label=\"Members\" value=\"3\" />\r\n                      {user?.firestore.role === 'admin' ? <Tab label=\"Billing\" value=\"4\" /> : null}\r\n                    </TabList>\r\n                  </Box>\r\n                  <TabPanel value=\"1\">\r\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                      <Typography variant=\"h5\">\r\n                        Your organization's global settings can be configured here.\r\n                      </Typography>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          saveGlobalSettings();\r\n                        }}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        Your Organisation Logo{' '}\r\n                        <span style={{ color: 'red' }}>(recommended ratio: 1:4)*</span>\r\n                      </Typography>\r\n                      <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                        <img\r\n                          src={newGlobalSettings?.logo}\r\n                          alt=\"Company Logo\"\r\n                          width=\"300px\"\r\n                          height=\"75px\"\r\n                        />\r\n                        <div>\r\n                          <LoadingButton\r\n                            size=\"small\"\r\n                            loading={loading}\r\n                            loadingPosition=\"start\"\r\n                            startIcon={<FileUploadRounded />}\r\n                            variant=\"contained\"\r\n                            onClick={(e) => logoRef.current.click()}\r\n                          >\r\n                            {loading ? `${progress}%` : 'Change'}\r\n                            <input\r\n                              ref={logoRef}\r\n                              hidden\r\n                              accept=\"image/*\"\r\n                              type=\"file\"\r\n                              onChange={(e) => {\r\n                                updateCompanyLogo(e.target.files[0]);\r\n                              }}\r\n                            />\r\n                          </LoadingButton>\r\n                        </div>\r\n                      </Stack>\r\n                      <Divider sx={{ my: 2 }} />\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                      <Typography variant=\"p\">Organisation Tagline</Typography>\r\n                      <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={newGlobalSettings?.tagline}\r\n                        onChange={(e) => handleGlobalSettings('tagline', e.target.value)}\r\n                      />\r\n                      <Divider sx={{ my: 2 }} />\r\n                    </Grid> */}\r\n                    {/* <Grid item xs={12}>\r\n                      <Stack direction=\"row\" spacing={2} fullWidth>\r\n                        <div style={{ width: '30%' }}>\r\n                          <Typography variant=\"p\">Navigation Background</Typography>\r\n                          <br />\r\n                          <ColorPicker\r\n                            value={newGlobalSettings?.nav_bg}\r\n                            onChange={(newColor) => {\r\n                              handleGlobalSettings('nav_bg', `#${newColor.hex}`);\r\n                            }}\r\n                          />\r\n                          <Typography variant=\"caption\">\r\n                            This is the background color of navigation bar\r\n                          </Typography>\r\n                        </div>\r\n                        <div style={{ width: '30%' }}>\r\n                          <Typography variant=\"p\">Navigation Icon Color</Typography>\r\n                          <br />\r\n                          <ColorPicker\r\n                            value={newGlobalSettings?.nav_icon}\r\n                            onChange={(newColor) => {\r\n                              handleGlobalSettings('nav_icon', `#${newColor.hex}`);\r\n                            }}\r\n                          />\r\n                          <Typography variant=\"caption\">\r\n                            This is the icon color of navigation bar\r\n                          </Typography>\r\n                        </div>\r\n                      </Stack>\r\n                      <Divider sx={{ my: 2 }} />\r\n                    </Grid> */}\r\n                    <Grid item xs={12}>\r\n                      <Stack direction=\"row\" spacing={2} fullWidth>\r\n                        <div style={{ width: '50%' }}>\r\n                          <Typography variant=\"p\">Organisation Name</Typography>\r\n                          <TextField\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={newGlobalSettings?.name}\r\n                            onChange={(e) => handleGlobalSettings('name', e.target.value)}\r\n                          />\r\n                        </div>\r\n                        <div style={{ width: '50%' }}>\r\n                          <Typography variant=\"p\">Organisation Location</Typography>\r\n                          <TextField\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={newGlobalSettings?.location}\r\n                            onChange={(e) => handleGlobalSettings('location', e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Stack>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"2\">\r\n                    {/* <center>\r\n                                            <Paper\r\n                                                component=\"form\"\r\n                                                sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: '60%' }}\r\n                                            >\r\n                                                <InputBase\r\n                                                    sx={{ ml: 1, flex: 1 }}\r\n                                                    placeholder=\"Search ...\"\r\n                                                    inputProps={{ 'aria-label': 'search google maps' }}\r\n                                                />\r\n                                                <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                                                    <SearchIcon />\r\n                                                </IconButton>\r\n                                            </Paper>\r\n                                        </center>\r\n                                        <br /> */}\r\n                    <Typography variant=\"h5\">Manage your Integrations.</Typography>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      {[1].map((item, index) => {\r\n                        return (\r\n                          <Accordion\r\n                            key={item}\r\n                            expanded={expanded === item}\r\n                            onChange={handleAccordian(item)}\r\n                          >\r\n                            <AccordionSummary>\r\n                              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                <img\r\n                                  src=\"https://img.icons8.com/color/36/null/slack-new.png\"\r\n                                  alt=\"icon\"\r\n                                />\r\n                                <Typography variant=\"subtitle1\">Slack</Typography>\r\n                              </Stack>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <Typography>\r\n                                Slack offers the functionality to authorize users to submit their\r\n                                tickets via a designated Slack channel.\r\n                              </Typography>\r\n                              <Stack\r\n                                direction=\"row\"\r\n                                justifyContent=\"flex-end\"\r\n                                spacing={2}\r\n                                sx={{ mt: 1 }}\r\n                              >\r\n                                <Button size=\"small\" variant=\"contained\" color=\"success\">\r\n                                  Connect/Enable\r\n                                </Button>\r\n                                <Button size=\"small\" variant=\"contained\" color=\"error\">\r\n                                  Disable Extension\r\n                                </Button>\r\n                              </Stack>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"3\">\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"h5\">Manage your members</Typography>\r\n                      <Stack direction=\"row\" spacing={2}>\r\n                        <Button\r\n                          // disabled={!employeeList}\r\n                          variant=\"contained\"\r\n                          startIcon={<AddIcon />}\r\n                          onClick={(e) => {\r\n                            handleClickOpen(e, 'Invite new users');\r\n                          }}\r\n                        >\r\n                          Invite\r\n                        </Button>\r\n                      </Stack>\r\n                    </div>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '20%' }}>Name</TableCell>\r\n                              <TableCell sx={{ width: '20%' }}>Role</TableCell>\r\n                              <TableCell sx={{ width: '60%' }}>Email</TableCell>\r\n                              <TableCell sx={{ width: '60%' }}>Status</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {members?.map((item, index) => {\r\n                              return (\r\n                                <TableRow\r\n                                  key={item.uid}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      {item.displayName}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell variant=\"h6\">{item.role}</TableCell>\r\n                                  <TableCell variant=\"h6\">{item.email}</TableCell>\r\n                                  <TableCell variant=\"h6\">\r\n                                    {item.blocked ? (\r\n                                      <Stack direction=\"row\" alignItems=\"center\">\r\n                                        <Chip\r\n                                          color=\"success\"\r\n                                          label=\"Activate\"\r\n                                          clickable\r\n                                          onClick={(e) => {\r\n                                            activateAccount(item.uid, index);\r\n                                            console.log(`${item.displayName}'s account Activated`);\r\n                                          }}\r\n                                        />\r\n                                        <Tooltip title=\"Delete account permanently\">\r\n                                          <IconButton\r\n                                            sx={{ ml: 1 }}\r\n                                            onClick={(e) => {\r\n                                              deleteUser(item, index);\r\n                                            }}\r\n                                            color=\"error\"\r\n                                            component=\"label\"\r\n                                          >\r\n                                            <DeleteForever />\r\n                                          </IconButton>\r\n                                        </Tooltip>\r\n                                      </Stack>\r\n                                    ) : (\r\n                                      <Chip\r\n                                        color=\"error\"\r\n                                        label=\"Deactivate\"\r\n                                        clickable\r\n                                        onClick={(e) => {\r\n                                          deactivateAccount(item.uid, index);\r\n                                          console.log(`${item.displayName}'s account deactivated`);\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"4\"></TabPanel>\r\n                </TabContext>\r\n              </Box>\r\n            </>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPortal;\r\n","import React from 'react';\r\nimport { FormControl, Grid, MenuItem, Select, TextField, Typography } from '@mui/material';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nconst EmployeeTaskForm = ({ empTask, employeeList, handleEmpTask }) => {\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Select Employee</Typography>\r\n                <br />\r\n                <FormControl fullWidth>\r\n                    <Select fullWidth id=\"demo-simple-select\" value={empTask.employee} onChange={handleEmpTask('employee')}>\r\n                        {employeeList ? <MenuItem value=\"None\">None</MenuItem> : <MenuItem value=\"None\">No employee found</MenuItem>}\r\n                        {employeeList &&\r\n                            employeeList.map((emp, index) => (\r\n                                <MenuItem key={emp.email} value={emp.email}>\r\n                                    {emp.email}\r\n                                </MenuItem>\r\n                            ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Task Name</Typography>\r\n                <TextField variant=\"outlined\" fullWidth type=\"text\" value={empTask.task} onChange={handleEmpTask('task')} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Source Name</Typography>\r\n                <TextField variant=\"outlined\" fullWidth type=\"text\" value={empTask.source} onChange={handleEmpTask('source')} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Source URL (If applicable *)</Typography>\r\n                <TextField variant=\"outlined\" fullWidth type=\"text\" value={empTask.url} onChange={handleEmpTask('url')} />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n                <Typography variant=\"p\">Tag Name</Typography>\r\n                <TextField variant=\"outlined\" fullWidth type=\"text\" value={empTask.tag} onChange={handleEmpTask('tag')} />\r\n            </Grid> */}\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Due Date</Typography>\r\n                <br />\r\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DatePicker\r\n                        disablePast\r\n                        openTo=\"year\"\r\n                        views={['year', 'month', 'day']}\r\n                        value={empTask.due}\r\n                        onChange={handleEmpTask('due')}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                </LocalizationProvider>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default EmployeeTaskForm;\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\nimport {\r\n    align,\r\n    font,\r\n    fontColor,\r\n    fontSize,\r\n    formatBlock,\r\n    hiliteColor,\r\n    horizontalRule,\r\n    lineHeight,\r\n    list,\r\n    paragraphStyle,\r\n    table,\r\n    template,\r\n    textStyle,\r\n    image,\r\n    link,\r\n    fullScreen\r\n} from 'suneditor/src/plugins';\r\n\r\nconst TextEditor = ({ id, value, setValue }) => {\r\n\r\n    return (\r\n        <SunEditor\r\n            id={id}\r\n            autoFocus={true}\r\n            lang=\"en\"\r\n            setOptions={{\r\n                showPathLabel: false,\r\n                minHeight: '50vh',\r\n                maxHeight: '50vh',\r\n                placeholder: 'Enter your text here ...',\r\n                plugins: [\r\n                    align,\r\n                    font,\r\n                    fontColor,\r\n                    fontSize,\r\n                    formatBlock,\r\n                    hiliteColor,\r\n                    horizontalRule,\r\n                    lineHeight,\r\n                    list,\r\n                    paragraphStyle,\r\n                    table,\r\n                    template,\r\n                    textStyle,\r\n                    image,\r\n                    link\r\n                ],\r\n                buttonList: [\r\n                    ['undo', 'redo'],\r\n                    ['font', 'fontSize', 'formatBlock'],\r\n                    ['paragraphStyle'],\r\n                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                    ['fontColor', 'hiliteColor'],\r\n                    ['removeFormat'],\r\n                    '/', // Line break\r\n                    ['outdent', 'indent'],\r\n                    ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                    ['table', 'link', 'image'],\r\n                    ['fullScreen']\r\n                ],\r\n                formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n                font: [\r\n                    'Arial',\r\n                    'Calibri',\r\n                    'Comic Sans',\r\n                    'Courier',\r\n                    'Garamond',\r\n                    'Georgia',\r\n                    'Impact',\r\n                    'Lucida Console',\r\n                    'Palatino Linotype',\r\n                    'Segoe UI',\r\n                    'Tahoma',\r\n                    'Times New Roman',\r\n                    'Trebuchet MS'\r\n                ]\r\n            }}\r\n            setDefaultStyle=\"font-family: Arial; font-size: 16px;\"\r\n            setContents={localStorage.getItem(id) || value[`${id}Ans`]}\r\n            value={value[`${id}Ans`]}\r\n            onChange={(value) => {\r\n                setValue(value);\r\n                localStorage.setItem(id, value);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default TextEditor;\r\n","var map = {\n\t\"./ckb.js\": 82871,\n\t\"./da.js\": 59651,\n\t\"./de.js\": 64639,\n\t\"./en.js\": 75213,\n\t\"./es.js\": 47068,\n\t\"./fr.js\": 78488,\n\t\"./he.js\": 93179,\n\t\"./index.js\": 87488,\n\t\"./it.js\": 63577,\n\t\"./ja.js\": 10916,\n\t\"./ko.js\": 19920,\n\t\"./lv.js\": 39985,\n\t\"./nl.js\": 14076,\n\t\"./pl.js\": 71676,\n\t\"./pt_br.js\": 3204,\n\t\"./ro.js\": 59575,\n\t\"./ru.js\": 70123,\n\t\"./se.js\": 52372,\n\t\"./ua.js\": 63854,\n\t\"./zh_cn.js\": 79602\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97699;"],"names":["getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","avatarSX","height","fontSize","actionSX","mt","ml","top","right","alignSelf","transform","STATS","title","key","OPTION_OPERATION","randomDate","start","end","Date","getTime","Math","random","toDateString","Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","_useAuthContext","useAuthContext","user","getDataByRole","_useContext","useContext","SettingsContext","globalSettings","setGlobalSettings","_useState","useState","tagline","location","logo","nav_bg","nav_icon","_useState2","_slicedToArray","newGlobalSettings","setNewGlobalSettings","useEffect","handleGlobalSettings","value","prev","_defineProperty","navigate","useNavigate","useTheme","_useState3","_useState4","searchTag","setSearchTag","_useState5","_useState6","tabTitle","setTabTitle","_useState7","_useState8","settitle","_React$useState","_React$useState2","setValue","_React$useState3","_React$useState4","open","setOpen","handleClickOpen","e","formTitle","handleClose","fetchOrgMembers","queryRef","firestore","collection","where","company","temp","get","then","snapshot","forEach","doc","data","id","uid","push","setMembers","_useState9","_useState10","members","handleChange","event","newValue","_React$useState5","_React$useState6","status","setstatus","_React$useState7","_React$useState8","employee","setemployee","_React$useState9","_React$useState10","category","setcategory","_React$useState11","_React$useState12","lang","setlang","handleLang","target","_React$useState13","_React$useState14","department","setDepartment","_React$useState15","_React$useState16","setFrom","_React$useState17","_React$useState18","setTo","_useState11","_useState12","question","setQuestion","_useState13","_useState14","answer","setAnswer","addFAQ","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payload","res","wrap","_context","next","adminId","type","axios","concat","apiBaseURL","sent","toast","t0","stop","apply","arguments","_useState15","policySub","policyAns","blogSub","blogAns","newsSub","newsAns","_useState16","inputState","setInputState","handleServicesInput","_ref2","_callee2","service","_context2","subject","_objectSpread3","localStorage","removeItem","_x","handleRTEInput","field","_useState17","_useState18","requestDetail","setRequestDetail","_useState19","_useState20","onboardingReq","setOnboardingReq","_useState21","_useState22","offboardingReq","setOffboardingReq","setTicketEmployees","_useState23","_useState24","tasks","setTasks","_useState25","_useState26","employeeList","setEmployeeList","_useState27","task","source","url","tag","due","toLocaleDateString","_useState28","empTask","setEmpTask","_useState29","_useState30","itcomments","setITComments","_useState31","_useState32","closedOnboardings","setClosedOnboardings","getClosedOnboardingRequests","_ref4","_callee4","_context4","_useState33","_useState34","closedOffboardings","setClosedOffboardings","getClosedOffboardingRequests","_ref5","_callee5","_context5","_useState35","_useState36","selectedTasks","setSelectedTasks","_useState37","_useState38","selectedEmployee","setSelectedEmployee","handleSelectedTasks","assignTask","_ref6","_callee6","_context6","length","_useState39","_useState40","ticketDepartment","setTicketDepartment","_useState41","_useState42","ticketEmployees","_useState43","_useState44","tickets","setTickets","role","assignTickets","_ref7","_callee7","_context7","formData","ticketId","find","_ref8","_id","_useState45","_useState46","ticketStats","setTicketStats","reopened","_React$useState19","_React$useState20","expanded","setExpanded","logoRef","useRef","_useState47","_useState48","loading","setLoading","_useState49","_useState50","progress","setProgress","_useState51","_useState52","newInvites","setNewInvites","_useState53","_useState54","selectedRole","setSelectedRole","activateAccount","_ref9","_callee8","index","_context8","update","blocked","_toConsumableArray","catch","err","console","log","_x2","_x3","deactivateAccount","_ref10","_callee9","_context9","_x4","_x5","_jsxs","_Fragment","children","Dialog","fullScreen","onClose","TransitionComponent","Container","sx","mb","maxWidth","Card","variant","CardContent","display","justifyContent","Typography","Paper","elevation","p","Stack","spacing","Grid","container","item","xs","color","Button","size","FormControlLabel","control","Checkbox","label","TextField","fullWidth","multiline","rows","List","component","px","py","position","map","ListItemButton","divider","ListItemText","primary","marginLeft","marginTop","FormControl","Select","labelId","onChange","MenuItem","float","EmployeeTaskForm","handleEmpTask","rowSpacing","columnSpacing","readOnly","personal","firstName","middleName","lastName","country","offLoc","Divider","manager","empType","Box","flexWrap","gap","hardware","devices","Chip","peripherals","managers","managerEmail","response","comments","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","scope","Link","href","underline","onClick","preventDefault","pt","endDate","delegation","emp","email","multiple","input","OutlinedInput","renderValue","selected","_ref11","ticket","_ref12","assigned","DialogContentText","autoFocus","margin","placeholder","CardActions","padding","toList","split","trim","companyName","_callee3","_index","_context3","join","managerId","displayName","findIndex","req","splice","cursor","backgroundColor","alt","src","textAlign","borderRadius","AppCurrentDownload","chart","colors","palette","main","info","error","warning","series","ListItemAvatar","Avatar","bgcolor","icon","TabContext","borderBottom","borderColor","TabList","textColor","indicatorColor","centered","Tab","TabPanel","border","startIcon","AddIcon","alignItems","InputBase","flex","inputProps","IconButton","SearchIcon","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","disableFuture","openTo","views","renderInput","params","dep","photoURL","verticalAlign","mr","disabled","RegExp","test","m","state","editable","TextEditor","message","LoadingButton","loadingPosition","FileUploadRounded","current","click","hidden","accept","file","fileName","uploadTask","storage","child","put","on","uploaded","floor","bytesTransferred","totalBytes","getDownloadURL","remaining","updateCompanyLogo","files","my","Accordion","panel","isExpanded","AccordionSummary","AccordionDetails","clickable","Tooltip","delete","deleteUser","DeleteForever","disablePast","SunEditor","setOptions","showPathLabel","minHeight","plugins","font","fontColor","formatBlock","hiliteColor","horizontalRule","lineHeight","list","paragraphStyle","table","template","textStyle","image","link","buttonList","formats","setDefaultStyle","setContents","getItem","setItem","webpackContext","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}