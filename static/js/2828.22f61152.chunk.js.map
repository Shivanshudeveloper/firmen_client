{"version":3,"file":"static/js/2828.22f61152.chunk.js","mappings":"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","sources":["pages/extra-pages/TrackOnboarding.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Chip,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Grid,\r\n    Paper,\r\n    Radio,\r\n    RadioGroup,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from 'src/App';\r\nimport axios from 'axios';\r\nimport { apiBaseURL } from 'src/config-global';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\n\r\nconst ACCEPTED = 'Accepted';\r\nconst REJECTED = 'Rejected';\r\nconst NORES = 'No Response';\r\n\r\nconst TrackOnboarding = () => {\r\n    const { user } = useAuthContext();\r\n    const [radioValue, setRadioValue] = React.useState('Requested');\r\n    const [requests, setRequests] = React.useState([]);\r\n    const [pending, setPending] = React.useState([]);\r\n    const [managerRes, setManagerRes] = React.useState(null);\r\n    const [responses, setResponses] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!user) return;\r\n        axios.get(`${apiBaseURL}/manager/onboarding/${user.company}?key=managerId&value=${user.uid}`).then((res) => {\r\n            setRequests(res.data);\r\n        });\r\n        axios.get(`${apiBaseURL}/manager/onboarding/${user.company}?key=managerEmail&value=${user.email}`).then((res) => {\r\n            setPending(res.data);\r\n        });\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        if (!user) return;\r\n        setResponses(() => {\r\n            const temp = {};\r\n            pending.forEach((item, index) => {\r\n                const manager = item.managers[item.managers.findIndex((manager) => manager.managerEmail === user.email)];\r\n                temp[index] = manager.response;\r\n            });\r\n            return temp;\r\n        });\r\n    }, [pending]);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = (data) => () => {\r\n        setOpen(true);\r\n        setManagerRes(data);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleRequest = (response, id, index, ix) => (e) => {\r\n        const payload = {\r\n            id,\r\n            managerEmail: user.email,\r\n            response\r\n        };\r\n        axios.post(`${apiBaseURL}/manager/onboarding/approval`, { payload }).then((res) => {\r\n            setResponses((prev) => ({\r\n                ...prev,\r\n                [index]: res.data.managers[ix].response\r\n            }));\r\n        });\r\n    };\r\n\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                scroll=\"paper\"\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                {managerRes && (\r\n                    <>\r\n                        <DialogTitle id=\"scroll-dialog-title\">\r\n                            <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                                <div>Manager Responses</div>\r\n                                <div>\r\n                                    <Typography variant=\"overline\">\r\n                                        &nbsp;&nbsp;&nbsp;By:&nbsp;&nbsp;&nbsp;{managerRes.position.manager}\r\n                                        <br />\r\n                                        For:&nbsp;&nbsp;&nbsp;{`${managerRes.personal.firstName + ' ' + managerRes.personal.lastName}`}\r\n                                    </Typography>\r\n                                </div>\r\n                            </Stack>\r\n                        </DialogTitle>\r\n                        <DialogContent dividers={scroll === 'paper'}>\r\n                            <Box id=\"scroll-dialog-description\" ref={descriptionElementRef} tabIndex={-1}>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"center\">Manager</TableCell>\r\n                                                <TableCell align=\"center\">Response</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {managerRes.managers.map(({ managerEmail: email, response }) => {\r\n                                                return (\r\n                                                    <TableRow key={email}>\r\n                                                        <TableCell align=\"center\" scope=\"row\">\r\n                                                            <Typography variant=\"h6\">{email}</Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\" variant=\"h6\">\r\n                                                            <Chip\r\n                                                                label={response}\r\n                                                                color={\r\n                                                                    response === NORES\r\n                                                                        ? 'warning'\r\n                                                                        : response === ACCEPTED\r\n                                                                        ? 'success'\r\n                                                                        : 'error'\r\n                                                                }\r\n                                                            />\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                );\r\n                                            })}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose}>Close</Button>\r\n                        </DialogActions>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n\r\n            <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n                <Grid item xs={12}>\r\n                    <Typography sx={{ float: 'left' }} variant=\"h3\">\r\n                        Track Onboarding Requests\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControl>\r\n                        <RadioGroup\r\n                            row\r\n                            aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                            name=\"row-radio-buttons-group\"\r\n                            value={radioValue}\r\n                            onChange={(e) => setRadioValue(e.target.value)}\r\n                        >\r\n                            <FormControlLabel value=\"Requested\" control={<Radio />} label=\"Requested\" />\r\n                            <FormControlLabel value=\"Pending Actions\" control={<Radio />} label=\"Pending Actions\" />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <br />\r\n                    <br />\r\n                    {radioValue === 'Requested' ? (\r\n                        <Grid item xs={12}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"center\">First Name</TableCell>\r\n                                            <TableCell align=\"center\">Last Name</TableCell>\r\n                                            <TableCell align=\"center\">Job Title</TableCell>\r\n                                            {/* <TableCell align=\"center\">Reporter</TableCell> */}\r\n                                            <TableCell align=\"center\">Start Date</TableCell>\r\n                                            <TableCell align=\"center\">Status</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {requests.map((item, index) => {\r\n                                            return (\r\n                                                <TableRow key={index}>\r\n                                                    <TableCell align=\"center\" scope=\"row\">\r\n                                                        <Typography variant=\"h6\">{item.personal.firstName}</Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\" variant=\"h6\">\r\n                                                        {item.personal.lastName}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                                            {item.position.empType}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    {/* <TableCell align=\"center\">\r\n                                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                                        {item.position.manager}\r\n                                                    </Typography>\r\n                                                </TableCell> */}\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                                            {item.position.start}\r\n                                                        </Typography>\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"center\">\r\n                                                        <Button\r\n                                                            disabled={!item.managers.length}\r\n                                                            sx={{ mr: 1 }}\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={handleClickOpen(item)}\r\n                                                            >\r\n                                                            {!item.managers?.length ? 'No Delegations' : 'View'}\r\n                                                        </Button>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    ) : radioValue === 'Pending Actions' ? (\r\n                        <Grid item xs={12}>\r\n                            <TableContainer component={Paper}>\r\n                                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell align=\"center\">First Name</TableCell>\r\n                                            <TableCell align=\"center\">Last Name</TableCell>\r\n                                            <TableCell align=\"center\">Job Title</TableCell>\r\n                                            <TableCell align=\"center\">Reporter</TableCell>\r\n                                            <TableCell align=\"center\">Start Date</TableCell>\r\n                                            <TableCell align=\"center\">Status</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {responses &&\r\n                                            pending.map((item, index) => {\r\n                                                const ix = item.managers.findIndex((manager) => manager.managerEmail === user.email);\r\n                                                const accFlag = responses[index] === ACCEPTED;\r\n                                                const rejFlag = responses[index] === REJECTED;\r\n                                                return (\r\n                                                    <TableRow key={index}>\r\n                                                        <TableCell align=\"center\" scope=\"row\">\r\n                                                            <Typography variant=\"h6\">{item.personal.firstName}</Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\" variant=\"h6\">\r\n                                                            {item.personal.lastName}\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                                                {item.position.empType}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                                                {item.position.manager}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                                                {item.position.start}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell align=\"center\">\r\n                                                            <Button\r\n                                                                // disabled={accFlag}\r\n                                                                sx={{ mr: 1, width: '70px' }}\r\n                                                                variant={accFlag ? 'contained' : 'outlined'}\r\n                                                                color={accFlag ? 'success' : 'secondary'}\r\n                                                                onClick={\r\n                                                                    accFlag ? () => null : handleRequest(ACCEPTED, item._id, index, ix)\r\n                                                                }\r\n                                                            >\r\n                                                                {accFlag ? 'Accepted' : 'Accept'}\r\n                                                            </Button>\r\n                                                            <Button\r\n                                                                // disabled={rejFlag}\r\n                                                                sx={{ width: '70px' }}\r\n                                                                variant={rejFlag ? 'contained' : 'outlined'}\r\n                                                                color={rejFlag ? 'error' : 'secondary'}\r\n                                                                onClick={\r\n                                                                    rejFlag ? () => null : handleRequest(REJECTED, item._id, index, ix)\r\n                                                                }\r\n                                                            >\r\n                                                                {rejFlag ? 'Rejected' : 'Reject'}\r\n                                                            </Button>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                );\r\n                                            })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    ) : null}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TrackOnboarding;\r\n"],"names":["ACCEPTED","REJECTED","user","useAuthContext","_React$useState","React","_React$useState2","_slicedToArray","radioValue","setRadioValue","_React$useState3","_React$useState4","requests","setRequests","_React$useState5","_React$useState6","pending","setPending","_React$useState7","_React$useState8","managerRes","setManagerRes","_React$useState9","_React$useState10","responses","setResponses","useEffect","axios","concat","apiBaseURL","company","uid","then","res","data","email","temp","forEach","item","index","manager","managers","findIndex","managerEmail","response","_React$useState11","_React$useState12","open","setOpen","handleClose","handleRequest","id","ix","e","payload","prev","_objectSpread","_defineProperty","descriptionElementRef","descriptionElement","current","focus","_jsxs","_Fragment","children","_jsx","Dialog","onClose","scroll","DialogTitle","Stack","direction","justifyContent","alignItems","Typography","variant","position","personal","firstName","lastName","DialogContent","dividers","Box","ref","tabIndex","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","align","TableBody","map","_ref","scope","Chip","label","color","DialogActions","Button","onClick","Grid","container","rowSpacing","columnSpacing","xs","float","FormControl","RadioGroup","row","name","value","onChange","target","FormControlLabel","control","Radio","_item$managers","pt","empType","start","disabled","length","mr","accFlag","rejFlag","width","_id"],"sourceRoot":""}