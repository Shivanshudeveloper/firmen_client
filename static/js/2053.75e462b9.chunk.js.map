{"version":3,"file":"static/js/2053.75e462b9.chunk.js","mappings":"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","sources":["pages/extra-pages/HelpCenter.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// material-ui\r\nimport {\r\n    Avatar,\r\n    CardContent,\r\n    CardActions,\r\n    Card,\r\n    Stack,\r\n    Typography,\r\n    Container,\r\n    Chip,\r\n    Grid,\r\n    Button,\r\n    Paper,\r\n    TextField,\r\n    ListItemAvatar,\r\n    ListItemButton,\r\n    ListItemSecondaryAction,\r\n    Tooltip\r\n} from '@mui/material';\r\n\r\n// project import\r\nimport { Dialog, Slide } from '@mui/material';\r\nimport { FormControl, MenuItem, Select, InputLabel } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { AuthContext, SettingsContext } from 'src/App';\r\nimport axios from 'axios';\r\nimport { apiBaseURL } from 'src/config-global';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst HelpCenter = () => {\r\n    const { user } = useAuthContext();\r\n    const { globalSettings, setGlobalSettings } = useContext(SettingsContext);\r\n    const navigate = useNavigate();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [title, settitle] = React.useState('');\r\n    const [department, setdepartment] = React.useState('none');\r\n\r\n    const handleChange = (event) => {\r\n        setdepartment(event.target.value);\r\n    };\r\n\r\n    const handleClickOpen = (formTitle) => {\r\n        setOpen(true);\r\n        settitle(formTitle);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [ticket, setTicket] = useState({\r\n        title: '',\r\n        desc: ''\r\n    });\r\n\r\n    const handleTicket = (field) => (e) => {\r\n        setTicket((prev) => ({\r\n            ...prev,\r\n            [field]: e.target.value\r\n        }));\r\n    };\r\n\r\n    const handleDialogSubmit = () => {\r\n        if (title === 'Create Ticket') {\r\n            const formData = { ...ticket, email: user.email, company: user.company, name: user.displayName, photoURL: user.photoURL };\r\n            axios.post(`${apiBaseURL}/tickets`, { formData }).then((res) => {\r\n                toast.success('Ticket Opened');\r\n                handleClose();\r\n                axios\r\n                    .post(`${apiBaseURL}/email/send?service=ticket&event=open`, {\r\n                        formData: {\r\n                            to: res.data.email,\r\n                            ref: res.data,\r\n                            companyName: globalSettings.name,\r\n                        }\r\n                    })\r\n                    .then((res) => {\r\n                        console.log(res.data);\r\n                    });\r\n                setTicket({\r\n                    title: '',\r\n                    desc: ''\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                <Container sx={{ mt: 6, mb: 6 }} maxWidth=\"sm\">\r\n                    <Card variant=\"outlined\">\r\n                        <CardContent>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                <Typography variant=\"h2\">{title}</Typography>\r\n                            </div>\r\n                            <br />\r\n                            {title === 'Create Ticket' ? (\r\n                                <>\r\n                                    {/* <Stack direction=\"row\" spacing={2}>\r\n                                        <div>\r\n                                            <Typography variant=\"p\">\r\n                                                First Name <span style={{ color: 'red' }}>*</span>\r\n                                            </Typography>\r\n                                            <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                                        </div>\r\n                                        <div>\r\n                                            <Typography variant=\"p\">Middle Name</Typography>\r\n                                            <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                                        </div>\r\n                                        <div>\r\n                                            <Typography variant=\"p\">\r\n                                                Surame <span style={{ color: 'red' }}>*</span>\r\n                                            </Typography>\r\n                                            <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                                        </div>\r\n                                    </Stack>\r\n                                    <br />\r\n                                    <Typography variant=\"p\">Email</Typography>\r\n                                    <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                                    <br />\r\n                                    <br /> */}\r\n                                    <Typography variant=\"p\">Title</Typography>\r\n                                    <TextField\r\n                                        type=\"text\"\r\n                                        variant=\"outlined\"\r\n                                        value={ticket.title}\r\n                                        fullWidth\r\n                                        onChange={handleTicket('title')}\r\n                                    />\r\n                                    <br />\r\n                                    <br />\r\n                                    {/* <FormControl sx={{ mt: 1 }} fullWidth>\r\n                                        <InputLabel id=\"demo-simple-select-label\">Department</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            value={department}\r\n                                            label=\"department\"\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            <MenuItem value=\"none\">None</MenuItem>\r\n                                            <MenuItem value=\"dep-1\">Department 1</MenuItem>\r\n                                            <MenuItem value=\"dep-2\">Department 2</MenuItem>\r\n                                            <MenuItem value=\"dep-3\">Department 3</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n\r\n                                    <br />\r\n                                    <br /> */}\r\n                                    <Typography variant=\"p\">Description</Typography>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        type=\"text\"\r\n                                        value={ticket.desc}\r\n                                        onChange={handleTicket('desc')}\r\n                                        multiline\r\n                                        rows={6}\r\n                                    />\r\n                                </>\r\n                            ) : null}\r\n                        </CardContent>\r\n\r\n                        <CardActions sx={{ float: 'right' }} style={{ padding: '0px 20px 20px' }}>\r\n                            <Button onClick={handleClose}>Close</Button>\r\n                            <Button onClick={handleDialogSubmit} variant=\"contained\">\r\n                                Submit\r\n                            </Button>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Container>\r\n            </Dialog>\r\n\r\n            <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n                <Grid item xs={12}>\r\n                    <Typography sx={{ float: 'left' }} variant=\"h3\">\r\n                        Submit Ticket\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n                        {/* <Grid item xs={3}>\r\n                            <Card variant=\"outlined\" sx={{ cursor: 'pointer' }}>\r\n                                <CardContent>\r\n                                    <center>\r\n                                        <img alt=\"Self Service\" src=\"https://img.icons8.com/ios-filled/100/null/guest-male--v1.png\" />\r\n                                        <Typography variant=\"h5\">Self Service</Typography>\r\n                                        <Typography variant=\"p\">\r\n                                            Please check our list for frequently asked question in the self service section before\r\n                                            submitting a ticket for self service troubleshooting.\r\n                                        </Typography>\r\n                                    </center>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid> */}\r\n                        <Grid item xs={6}>\r\n                            <Card\r\n                                variant=\"outlined\"\r\n                                sx={{ cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    handleClickOpen('Create Ticket');\r\n                                }}\r\n                            >\r\n                                <CardContent>\r\n                                    <center>\r\n                                        <img alt=\"Submit Ticket\" src=\"https://img.icons8.com/fluency/100/null/add-ticket.png\" />\r\n                                        <Typography variant=\"h5\">Submit Ticket</Typography>\r\n                                        <Typography variant=\"p\">\r\n                                            Submit your ticket via clicking here\r\n                                        </Typography>\r\n                                    </center>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Card\r\n                                variant=\"outlined\"\r\n                                sx={{ cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    navigate('/dashboard/tickets');\r\n                                }}\r\n                            >\r\n                                <CardContent>\r\n                                    <center>\r\n                                        <img alt=\"Check Status\" src=\"https://img.icons8.com/color/100/null/ok--v1.png\" />\r\n                                        <Typography variant=\"h5\">Check Status</Typography>\r\n                                        <Typography variant=\"p\">\r\n                                            Check status of your ticket\r\n                                        </Typography>\r\n                                    </center>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        {/* <Grid item xs={3}>\r\n                            <Card variant=\"outlined\" sx={{ cursor: 'pointer' }}>\r\n                                <CardContent>\r\n                                    <center>\r\n                                        <img alt=\"FAQs\" src=\"https://img.icons8.com/ios-filled/100/null/ask-question.png\" />\r\n                                        <Typography variant=\"h5\">FAQs</Typography>\r\n                                        <Typography variant=\"p\">\r\n                                            Please check our list for frequently asked question in the self service section before\r\n                                            submitting a ticket for self service troubleshooting.\r\n                                        </Typography>\r\n                                    </center>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid> */}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HelpCenter;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","user","useAuthContext","_useContext","useContext","SettingsContext","globalSettings","navigate","setGlobalSettings","useNavigate","_React$useState","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","title","settitle","_React$useState5","_React$useState6","handleClose","_useState","useState","desc","_useState2","ticket","setTicket","handleTicket","field","e","prev","_defineProperty","target","value","_jsxs","_Fragment","children","Dialog","fullScreen","onClose","TransitionComponent","Container","sx","mt","mb","maxWidth","Card","variant","CardContent","style","display","justifyContent","Typography","TextField","type","fullWidth","onChange","multiline","rows","CardActions","float","padding","Button","onClick","formData","email","company","name","displayName","photoURL","axios","concat","apiBaseURL","then","res","toast","to","data","companyName","console","log","Grid","container","rowSpacing","columnSpacing","item","xs","cursor","formTitle","alt","src","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","overridesResolver","styles","ownerState","root","disableSpacing","spacing","_ref","_extends","alignItems","marginLeft","inProps","useThemeProps","_props$disableSpacing","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","getCardContentUtilityClass","CardContentRoot","paddingBottom","_props$component","component","as","getCardUtilityClass","CardRoot","Paper","overflow","_props$raised","raised","elevation","undefined"],"sourceRoot":""}