{"version":3,"file":"static/js/2053.e2a657dc.chunk.js","mappings":"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","sources":["pages/extra-pages/HelpCenter.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// material-ui\r\nimport {\r\n  Avatar,\r\n  CardContent,\r\n  CardActions,\r\n  Card,\r\n  Stack,\r\n  Typography,\r\n  Container,\r\n  Chip,\r\n  Grid,\r\n  Button,\r\n  Paper,\r\n  TextField,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n} from '@mui/material';\r\n\r\n// project import\r\nimport { Dialog, Slide } from '@mui/material';\r\nimport { FormControl, MenuItem, Select, InputLabel } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { AuthContext, SettingsContext } from 'src/App';\r\nimport axios from 'axios';\r\nimport { apiBaseURL } from 'src/config-global';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst HelpCenter = () => {\r\n  const { user } = useAuthContext();\r\n  const { globalSettings, setGlobalSettings } = useContext(SettingsContext);\r\n  const navigate = useNavigate();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, settitle] = React.useState('');\r\n  const [department, setdepartment] = React.useState('none');\r\n\r\n  const handleChange = (event) => {\r\n    setdepartment(event.target.value);\r\n  };\r\n\r\n  const handleClickOpen = (formTitle) => {\r\n    setOpen(true);\r\n    settitle(formTitle);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [ticket, setTicket] = useState({\r\n    title: '',\r\n    priority: 0,\r\n    desc: '',\r\n  });\r\n\r\n  const handleTicket = (field) => (e) => {\r\n    setTicket((prev) => ({\r\n      ...prev,\r\n      [field]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleDialogSubmit = () => {\r\n    if (title === 'Create Ticket') {\r\n      const formData = {\r\n        ...ticket,\r\n        email: user.email,\r\n        company: user.company,\r\n        name: user.displayName,\r\n        photoURL: user.photoURL,\r\n      };\r\n      axios.post(`${apiBaseURL}/tickets`, { formData }).then((res) => {\r\n        toast.success('Ticket Opened');\r\n        handleClose();\r\n        axios\r\n          .post(`${apiBaseURL}/email/send?service=ticket&event=open`, {\r\n            formData: {\r\n              to: res.data.email,\r\n              ref: res.data,\r\n              companyName: globalSettings.name,\r\n            },\r\n          })\r\n          .then((res) => {\r\n            console.log(res.data);\r\n          });\r\n        setTicket({\r\n          title: '',\r\n          desc: '',\r\n          priority: 0,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <Container sx={{ mt: 6, mb: 6 }} maxWidth=\"sm\">\r\n          <Card variant=\"outlined\">\r\n            <CardContent>\r\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Typography variant=\"h2\">{title}</Typography>\r\n              </div>\r\n              <br />\r\n              {title === 'Create Ticket' ? (\r\n                <>\r\n                  {/* <Stack direction=\"row\" spacing={2}>\r\n                        <div>\r\n                            <Typography variant=\"p\">\r\n                                First Name <span style={{ color: 'red' }}>*</span>\r\n                            </Typography>\r\n                            <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                        </div>\r\n                        <div>\r\n                            <Typography variant=\"p\">Middle Name</Typography>\r\n                            <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                        </div>\r\n                        <div>\r\n                            <Typography variant=\"p\">\r\n                                Surame <span style={{ color: 'red' }}>*</span>\r\n                            </Typography>\r\n                            <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                        </div>\r\n                    </Stack>\r\n                    <br />\r\n                    <Typography variant=\"p\">Email</Typography>\r\n                    <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                    <br />\r\n                    <br /> */}\r\n                  <Typography variant=\"p\">Title</Typography>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    value={ticket.title}\r\n                    fullWidth\r\n                    onChange={handleTicket('title')}\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <Typography variant=\"p\">Priority</Typography>\r\n                  <FormControl fullWidth>\r\n                    {/* <InputLabel id=\"ticket_priority\"></InputLabel> */}\r\n                    <Select\r\n                    //   labelId=\"ticket_priority\"\r\n                      id=\"priority_select\"\r\n                      value={ticket.priority}\r\n                    //   label=\"Priority\"\r\n                      onChange={handleTicket('priority')}\r\n                    >\r\n                      <MenuItem value={0}>Low</MenuItem>\r\n                      <MenuItem value={1}>Medium</MenuItem>\r\n                      <MenuItem value={2}>High</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br />\r\n                  <br />\r\n                  {/* <FormControl sx={{ mt: 1 }} fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Department</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={department}\r\n                            label=\"department\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            <MenuItem value=\"none\">None</MenuItem>\r\n                            <MenuItem value=\"dep-1\">Department 1</MenuItem>\r\n                            <MenuItem value=\"dep-2\">Department 2</MenuItem>\r\n                            <MenuItem value=\"dep-3\">Department 3</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <br />\r\n                    <br /> */}\r\n                  <Typography variant=\"p\">Description</Typography>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    type=\"text\"\r\n                    value={ticket.desc}\r\n                    onChange={handleTicket('desc')}\r\n                    multiline\r\n                    rows={6}\r\n                  />\r\n                </>\r\n              ) : null}\r\n            </CardContent>\r\n\r\n            <CardActions sx={{ float: 'right' }} style={{ padding: '0px 20px 20px' }}>\r\n              <Button onClick={handleClose}>Close</Button>\r\n              <Button onClick={handleDialogSubmit} variant=\"contained\">\r\n                Submit\r\n              </Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Container>\r\n      </Dialog>\r\n\r\n      <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n        <Grid item xs={12}>\r\n          <Typography sx={{ float: 'left' }} variant=\"h3\">\r\n            Submit Ticket\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            {/* <Grid item xs={3}>\r\n                            <Card variant=\"outlined\" sx={{ cursor: 'pointer' }}>\r\n                                <CardContent>\r\n                                    <center>\r\n                                        <img alt=\"Self Service\" src=\"https://img.icons8.com/ios-filled/100/null/guest-male--v1.png\" />\r\n                                        <Typography variant=\"h5\">Self Service</Typography>\r\n                                        <Typography variant=\"p\">\r\n                                            Please check our list for frequently asked question in the self service section before\r\n                                            submitting a ticket for self service troubleshooting.\r\n                                        </Typography>\r\n                                    </center>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid> */}\r\n            <Grid item xs={6}>\r\n              <Card\r\n                variant=\"outlined\"\r\n                sx={{ cursor: 'pointer' }}\r\n                onClick={() => {\r\n                  handleClickOpen('Create Ticket');\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <center>\r\n                    <img\r\n                      alt=\"Submit Ticket\"\r\n                      src=\"https://img.icons8.com/fluency/100/null/add-ticket.png\"\r\n                    />\r\n                    <Typography variant=\"h5\">Submit Ticket</Typography>\r\n                    <Typography variant=\"p\">Submit your ticket via clicking here</Typography>\r\n                  </center>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Card\r\n                variant=\"outlined\"\r\n                sx={{ cursor: 'pointer' }}\r\n                onClick={() => {\r\n                  navigate('/dashboard/tickets');\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <center>\r\n                    <img\r\n                      alt=\"Check Status\"\r\n                      src=\"https://img.icons8.com/color/100/null/ok--v1.png\"\r\n                    />\r\n                    <Typography variant=\"h5\">Check Status</Typography>\r\n                    <Typography variant=\"p\">Check status of your ticket</Typography>\r\n                  </center>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            {/* <Grid item xs={3}>\r\n                            <Card variant=\"outlined\" sx={{ cursor: 'pointer' }}>\r\n                                <CardContent>\r\n                                    <center>\r\n                                        <img alt=\"FAQs\" src=\"https://img.icons8.com/ios-filled/100/null/ask-question.png\" />\r\n                                        <Typography variant=\"h5\">FAQs</Typography>\r\n                                        <Typography variant=\"p\">\r\n                                            Please check our list for frequently asked question in the self service section before\r\n                                            submitting a ticket for self service troubleshooting.\r\n                                        </Typography>\r\n                                    </center>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelpCenter;\r\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","user","useAuthContext","_useContext","useContext","SettingsContext","globalSettings","navigate","setGlobalSettings","useNavigate","_React$useState","_React$useState2","_slicedToArray","open","setOpen","_React$useState3","_React$useState4","title","settitle","_React$useState5","_React$useState6","handleClose","_useState","useState","priority","desc","_useState2","ticket","setTicket","handleTicket","field","e","prev","_defineProperty","target","value","_jsxs","_Fragment","children","Dialog","fullScreen","onClose","TransitionComponent","Container","sx","mt","mb","maxWidth","Card","variant","CardContent","style","display","justifyContent","Typography","TextField","type","fullWidth","onChange","FormControl","Select","id","MenuItem","multiline","rows","CardActions","float","padding","Button","onClick","formData","email","company","name","displayName","photoURL","axios","concat","apiBaseURL","then","res","toast","to","data","companyName","console","log","Grid","container","rowSpacing","columnSpacing","item","xs","cursor","formTitle","alt","src","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","overridesResolver","styles","ownerState","root","disableSpacing","spacing","_ref","_extends","alignItems","marginLeft","inProps","useThemeProps","_props$disableSpacing","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","getCardContentUtilityClass","CardContentRoot","paddingBottom","_props$component","component","as","getCardUtilityClass","CardRoot","Paper","overflow","_props$raised","raised","elevation","undefined"],"sourceRoot":""}