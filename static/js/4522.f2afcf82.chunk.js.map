{"version":3,"file":"static/js/4522.f2afcf82.chunk.js","mappings":"uWAwBMA,EAAe,CACjB,OACA,cACA,UACA,UACA,UACA,SACA,WACA,wBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,2BACA,WACA,SACA,yBACA,SACA,WACA,eACA,UACA,WACA,WACA,aACA,iBACA,OACA,QACA,QACA,WACA,QACA,eACA,aACA,gBACA,UACA,cACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,WACA,mBACA,gBACA,OACA,UACA,SACA,mBACA,qBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,SACA,kBACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,aACA,YACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,QACA,cACA,uBACA,gBACA,cACA,YACA,QACA,UACA,SACA,OACA,WACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,cACA,QACA,UACA,UACA,SACA,SACA,8BACA,QACA,aACA,YACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,eACA,cACA,QACA,YACA,uBACA,WACA,aACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,eACA,OACA,QACA,wBACA,UACA,SACA,eACA,qBACA,SACA,UACA,uBACA,iBACA,UACA,aACA,YACA,UACA,sBACA,QACA,SACA,YAgQJ,UA7PwB,WACpB,IAAQC,GAASC,EAAAA,EAAAA,KAATD,KACFE,EAAWC,EAAAA,GAAAA,OAAgBC,YAC3BC,GAAWC,EAAAA,EAAAA,UACjBC,GAAgCC,EAAAA,EAAAA,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","sources":["pages/extra-pages/ProfileSettings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Avatar,\r\n    FormControl,\r\n    Grid,\r\n    MenuItem,\r\n    Select,\r\n    Stack,\r\n    TextField,\r\n    Typography,\r\n    InputLabel,\r\n    Button\r\n} from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from 'src/App';\r\nimport { useRef } from 'react';\r\nimport { collection, firestore, storage, default as firebase } from 'src/Firebase';\r\nimport { useEffect } from 'react';\r\nimport { forEach } from 'lodash';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\n// import PhoneInput from 'react-phone-number-input';\r\n// import 'react-phone-number-input/style.css';\r\n\r\nconst country_list = [\r\n    'None',\r\n    'Afghanistan',\r\n    'Albania',\r\n    'Algeria',\r\n    'Andorra',\r\n    'Angola',\r\n    'Anguilla',\r\n    'Antigua &amp; Barbuda',\r\n    'Argentina',\r\n    'Armenia',\r\n    'Aruba',\r\n    'Australia',\r\n    'Austria',\r\n    'Azerbaijan',\r\n    'Bahamas',\r\n    'Bahrain',\r\n    'Bangladesh',\r\n    'Barbados',\r\n    'Belarus',\r\n    'Belgium',\r\n    'Belize',\r\n    'Benin',\r\n    'Bermuda',\r\n    'Bhutan',\r\n    'Bolivia',\r\n    'Bosnia &amp; Herzegovina',\r\n    'Botswana',\r\n    'Brazil',\r\n    'British Virgin Islands',\r\n    'Brunei',\r\n    'Bulgaria',\r\n    'Burkina Faso',\r\n    'Burundi',\r\n    'Cambodia',\r\n    'Cameroon',\r\n    'Cape Verde',\r\n    'Cayman Islands',\r\n    'Chad',\r\n    'Chile',\r\n    'China',\r\n    'Colombia',\r\n    'Congo',\r\n    'Cook Islands',\r\n    'Costa Rica',\r\n    'Cote D Ivoire',\r\n    'Croatia',\r\n    'Cruise Ship',\r\n    'Cuba',\r\n    'Cyprus',\r\n    'Czech Republic',\r\n    'Denmark',\r\n    'Djibouti',\r\n    'Dominica',\r\n    'Dominican Republic',\r\n    'Ecuador',\r\n    'Egypt',\r\n    'El Salvador',\r\n    'Equatorial Guinea',\r\n    'Estonia',\r\n    'Ethiopia',\r\n    'Falkland Islands',\r\n    'Faroe Islands',\r\n    'Fiji',\r\n    'Finland',\r\n    'France',\r\n    'French Polynesia',\r\n    'French West Indies',\r\n    'Gabon',\r\n    'Gambia',\r\n    'Georgia',\r\n    'Germany',\r\n    'Ghana',\r\n    'Gibraltar',\r\n    'Greece',\r\n    'Greenland',\r\n    'Grenada',\r\n    'Guam',\r\n    'Guatemala',\r\n    'Guernsey',\r\n    'Guinea',\r\n    'Guinea Bissau',\r\n    'Guyana',\r\n    'Haiti',\r\n    'Honduras',\r\n    'Hong Kong',\r\n    'Hungary',\r\n    'Iceland',\r\n    'India',\r\n    'Indonesia',\r\n    'Iran',\r\n    'Iraq',\r\n    'Ireland',\r\n    'Isle of Man',\r\n    'Israel',\r\n    'Italy',\r\n    'Jamaica',\r\n    'Japan',\r\n    'Jersey',\r\n    'Jordan',\r\n    'Kazakhstan',\r\n    'Kenya',\r\n    'Kuwait',\r\n    'Kyrgyz Republic',\r\n    'Laos',\r\n    'Latvia',\r\n    'Lebanon',\r\n    'Lesotho',\r\n    'Liberia',\r\n    'Libya',\r\n    'Liechtenstein',\r\n    'Lithuania',\r\n    'Luxembourg',\r\n    'Macau',\r\n    'Macedonia',\r\n    'Madagascar',\r\n    'Malawi',\r\n    'Malaysia',\r\n    'Maldives',\r\n    'Mali',\r\n    'Malta',\r\n    'Mauritania',\r\n    'Mauritius',\r\n    'Mexico',\r\n    'Moldova',\r\n    'Monaco',\r\n    'Mongolia',\r\n    'Montenegro',\r\n    'Montserrat',\r\n    'Morocco',\r\n    'Mozambique',\r\n    'Namibia',\r\n    'Nepal',\r\n    'Netherlands',\r\n    'Netherlands Antilles',\r\n    'New Caledonia',\r\n    'New Zealand',\r\n    'Nicaragua',\r\n    'Niger',\r\n    'Nigeria',\r\n    'Norway',\r\n    'Oman',\r\n    'Pakistan',\r\n    'Palestine',\r\n    'Panama',\r\n    'Papua New Guinea',\r\n    'Paraguay',\r\n    'Peru',\r\n    'Philippines',\r\n    'Poland',\r\n    'Portugal',\r\n    'Puerto Rico',\r\n    'Qatar',\r\n    'Reunion',\r\n    'Romania',\r\n    'Russia',\r\n    'Rwanda',\r\n    'Saint Pierre &amp; Miquelon',\r\n    'Samoa',\r\n    'San Marino',\r\n    'Satellite',\r\n    'Saudi Arabia',\r\n    'Senegal',\r\n    'Serbia',\r\n    'Seychelles',\r\n    'Sierra Leone',\r\n    'Singapore',\r\n    'Slovakia',\r\n    'Slovenia',\r\n    'South Africa',\r\n    'South Korea',\r\n    'Spain',\r\n    'Sri Lanka',\r\n    'St Kitts &amp; Nevis',\r\n    'St Lucia',\r\n    'St Vincent',\r\n    'St. Lucia',\r\n    'Sudan',\r\n    'Suriname',\r\n    'Swaziland',\r\n    'Sweden',\r\n    'Switzerland',\r\n    'Syria',\r\n    'Taiwan',\r\n    'Tajikistan',\r\n    'Tanzania',\r\n    'Thailand',\r\n    \"Timor L'Este\",\r\n    'Togo',\r\n    'Tonga',\r\n    'Trinidad &amp; Tobago',\r\n    'Tunisia',\r\n    'Turkey',\r\n    'Turkmenistan',\r\n    'Turks &amp; Caicos',\r\n    'Uganda',\r\n    'Ukraine',\r\n    'United Arab Emirates',\r\n    'United Kingdom',\r\n    'Uruguay',\r\n    'Uzbekistan',\r\n    'Venezuela',\r\n    'Vietnam',\r\n    'Virgin Islands (US)',\r\n    'Yemen',\r\n    'Zambia',\r\n    'Zimbabwe'\r\n];\r\n\r\nconst ProfileSettings = () => {\r\n    const { user } = useAuthContext();\r\n    const currUser = firebase.auth().currentUser\r\n    const inputRef = useRef();\r\n    const [progress, setProgress] = useState(100);\r\n    const [profilePic, setProfilePic] = useState(null);\r\n    const [newProfile, setNewProfile] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        phoneNumber: '',\r\n        state: '',\r\n        country: ''\r\n    });\r\n\r\n    const handleChange = (field) => (e) => {\r\n        let value;\r\n        if (field === 'phoneNumber') value = e;\r\n        else value = e.target.value;\r\n        setNewProfile((prev) => {\r\n            return { ...prev, [field]: value };\r\n        });\r\n    };\r\n\r\n    const updateProfile = () => {\r\n        let displayName;\r\n        if (newProfile['firstName'] && newProfile['lastName']) displayName = newProfile['firstName'] + ' ' + newProfile['lastName'];\r\n        else displayName = user.displayName;\r\n        delete newProfile.firstName;\r\n        delete newProfile.lastName;\r\n        newProfile.displayName = displayName\r\n        Object.keys(newProfile).forEach((key) => {\r\n            if (newProfile[key] === '') {\r\n                newProfile[key] = user[key];\r\n            }\r\n        });\r\n        // let phoneNumber = newProfile.phoneNumber;\r\n        // delete newProfile.phoneNumber;\r\n\r\n        // const recaptchaVerifier = new firebase.auth.RecaptchaVerifier('reCaptcha', {\r\n        //     size: 'normal',\r\n        //     callback: (response) => {\r\n        //         const phoneProvider = new firebase.auth.PhoneAuthProvider();\r\n        //         phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier).then((id) => {\r\n        //             const code = window.prompt('Enter OTP:');\r\n        //             const cred = firebase.auth.PhoneAuthProvider.credential(id, code);\r\n        //             user.updatePhoneNumber(cred);\r\n        //         });\r\n        //     }\r\n        // });\r\n        // recaptchaVerifier.render();\r\n        currUser.updateProfile({ displayName })\r\n        .then(() => {\r\n            // console.log('Profile Updated');\r\n                console.log(newProfile)\r\n                firestore\r\n                    .collection(collection)\r\n                    .doc(user.uid)\r\n                    .update(newProfile)\r\n                    .then(() => {\r\n                        toast.success('Profile Updated', {\r\n                            position: 'top-right',\r\n                            autoClose: 5000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: false,\r\n                            draggable: true,\r\n                            progress: undefined\r\n                        });\r\n                        setNewProfile({\r\n                            firstName: '',\r\n                            lastName: '',\r\n                            phoneNumber: '',\r\n                            state: '',\r\n                            country: ''\r\n                        });\r\n                        window.location.href = '/dashboard/profilesettings';\r\n                    });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const handleUpload = (files) => {\r\n        const file = files[0];\r\n        const fileName = new Date().getTime() + file.name;\r\n        const storageRef = storage.ref();\r\n        const uploadTask = storageRef.child(`/ProfilePictures/${fileName}`).put(file);\r\n        uploadTask.on(\r\n            'state_changed',\r\n            (snapshot) => {\r\n                const uploaded = Math.floor((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n                setProgress(uploaded);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n                    currUser.updateProfile({\r\n                        photoURL: url\r\n                    })\r\n                        .then(() => {\r\n                            setProfilePic(url);\r\n                            firestore\r\n                                .collection(collection)\r\n                                .doc(user.uid)\r\n                                .update({ photoURL: url })\r\n                                // .then((res) => console.log('firestore db updated'));\r\n                        })\r\n                        .catch((err) => console.log(err));\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!user) return;\r\n        setNewProfile((prev) => ({\r\n            ...prev,\r\n            country: user.firestore.country || 'None',\r\n            state: user.firestore.state\r\n        }));\r\n    }, [user]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h2\">Profile</Typography>\r\n            {user && (\r\n                <Grid container sx={{ marginTop: 6 }}>\r\n                    <Grid item xs={4} sx={{ padding: 2 }}>\r\n                        <center>\r\n                            <Avatar alt=\"profile user\" src={profilePic ? profilePic : user.photoURL} sx={{ width: 100, height: 100 }} />\r\n                            {progress === 100 ? (\r\n                                <Typography\r\n                                    variant=\"p\"\r\n                                    sx={{\r\n                                        color: 'blue',\r\n                                        cursor: 'pointer'\r\n                                    }}\r\n                                    onClick={(e) => {\r\n                                        inputRef.current.click();\r\n                                    }}\r\n                                >\r\n                                    <input\r\n                                        style={{ display: 'none' }}\r\n                                        type=\"file\"\r\n                                        ref={inputRef}\r\n                                        onChange={(e) => {\r\n                                            handleUpload(e.target.files);\r\n                                        }}\r\n                                        value={user.profilePic}\r\n                                    />\r\n                                    Update Picture\r\n                                </Typography>\r\n                            ) : (\r\n                                <>Uploading: {progress}%</>\r\n                            )}\r\n                            <br />\r\n                            <br />\r\n                            <Typography variant=\"h5\">{user.displayName}</Typography>\r\n                        </center>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <div style={{ width: '50%' }}>\r\n                                <Typography variant=\"p\">\r\n                                    First Name <span style={{ color: 'red' }}>*</span>\r\n                                </Typography>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder={user.displayName.split(' ')[0]}\r\n                                    fullWidth\r\n                                    value={newProfile.firstName}\r\n                                    onChange={handleChange('firstName')}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '50%' }}>\r\n                                <Typography variant=\"p\">\r\n                                    Last Name <span style={{ color: 'red' }}>*</span>\r\n                                </Typography>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    placeholder={user.displayName.split(' ')[1]}\r\n                                    fullWidth\r\n                                    value={newProfile.lastName}\r\n                                    onChange={handleChange('lastName')}\r\n                                />\r\n                            </div>\r\n                        </Stack>\r\n                        <br />\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <div style={{ width: '100%' }}>\r\n                                <Typography variant=\"p\">Email Address</Typography>\r\n                                <TextField type=\"text\" variant=\"outlined\" value={user.email} fullWidth disabled />\r\n                            </div>\r\n                            {/* <div style={{ width: '50%' }}>\r\n                                <Typography variant=\"p\">Phone Number</Typography>\r\n                                <PhoneInput\r\n                                    defaultCountry=\"IN\"\r\n                                    value={newProfile.phoneNumber}\r\n                                    placeholder={user.phoneNumber}\r\n                                    onChange={handleChange('phoneNumber')}\r\n                                />\r\n                                <div\r\n                                    id=\"reCaptcha\"\r\n                                    style={{ marginTop: '16px' }}\r\n                                ></div>\r\n                            </div> */}\r\n                        </Stack>\r\n                        <br />\r\n                        <Stack direction=\"row\" spacing={2}>\r\n                            <div style={{ width: '50%' }}>\r\n                                <Typography variant=\"p\">\r\n                                    State <span style={{ color: 'red' }}>*</span>\r\n                                </Typography>\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    value={newProfile.state}\r\n                                    onChange={handleChange('state')}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '50%' }}>\r\n                                <Typography variant=\"p\">Country</Typography>\r\n                                <br />\r\n                                <FormControl fullWidth>\r\n                                    {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\r\n                                    <Select fullWidth id=\"demo-simple-select\" value={newProfile.country} onChange={handleChange('country')}>\r\n                                        {country_list.map((country, index) => (\r\n                                            <MenuItem key={index + country} value={country}>\r\n                                                {country}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                        </Stack>\r\n                        <br />\r\n                        <Button id=\"submit-button\" variant=\"contained\" sx={{ float: 'right' }} onClick={updateProfile}>\r\n                            Save Details\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n        </>\r\n        // <>Hello</>\r\n    );\r\n};\r\n\r\nexport default ProfileSettings;\r\n"],"names":["country_list","user","useAuthContext","currUser","firebase","currentUser","inputRef","useRef","_useState","useState","_useState2","_slicedToArray","progress","setProgress","_useState3","_useState4","profilePic","setProfilePic","_useState5","firstName","lastName","phoneNumber","state","country","_useState6","newProfile","setNewProfile","handleChange","field","e","value","target","prev","_objectSpread","_defineProperty","useEffect","firestore","_jsxs","_Fragment","children","_jsx","Typography","variant","Grid","container","sx","marginTop","item","xs","padding","Avatar","alt","src","photoURL","width","height","color","cursor","onClick","current","click","style","display","type","ref","onChange","files","file","fileName","Date","getTime","name","uploadTask","storage","child","concat","put","on","snapshot","uploaded","Math","floor","bytesTransferred","totalBytes","error","console","log","getDownloadURL","then","url","updateProfile","collection","doc","uid","update","catch","err","handleUpload","displayName","Stack","direction","spacing","TextField","placeholder","split","fullWidth","email","disabled","FormControl","Select","id","map","index","MenuItem","Button","float","Object","keys","forEach","key","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","undefined","window","location","href"],"sourceRoot":""}