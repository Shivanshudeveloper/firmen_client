{"version":3,"file":"static/js/2384.7ba478bc.chunk.js","mappings":"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","sources":["pages/extra-pages/Ticket.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Chip,\r\n  Container,\r\n  Dialog,\r\n  Divider,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Stack,\r\n  Tab,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { CancelOutlined } from '@mui/icons-material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport { useTheme } from '@mui/styles';\r\nimport { useState } from 'react';\r\nimport { apiBaseURL } from 'src/config-global';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport { toast } from 'react-toastify';\r\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport { collection, firestore, storage } from 'src/Firebase';\r\nimport firebase from 'firebase/app';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@mui/material/Menu';\r\nimport { useRef } from 'react';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { SettingsContext } from 'src/App';\r\n// multiple select style\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst tabs = ['All', 'Open', 'Pending', 'Closed'];\r\nconst access = ['itadmin', 'admin'];\r\n\r\nconst ChatLog = ({ msg }) => {\r\n  const date = new Date(msg.createdOn || Date.now());\r\n  const dateArr = date.toDateString().split(' ');\r\n  const timeArr = date.toLocaleTimeString().split(' ');\r\n  return (\r\n    <Grid container item xs={12} padding={1}>\r\n      <Grid item xs={0.8}>\r\n        <Avatar alt=\"me\" src={msg.dp} sx={{ height: '30px', width: '30px' }} />\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <Typography variant=\"subtitle1\">{msg.from}</Typography>\r\n        <Typography variant=\"body1\">{msg.message}</Typography>\r\n      </Grid>\r\n      <Grid item xs={1.2}>\r\n        <Stack justifyContent=\"center\" alignItems=\"center\">\r\n          <Typography variant=\"caption\">{dateArr[1] + ' ' + dateArr[2]}</Typography>\r\n          <Typography variant=\"caption\">\r\n            {timeArr[0].split(':').slice(0, 2).join(':') + ' ' + timeArr[1]}\r\n          </Typography>\r\n        </Stack>\r\n      </Grid>\r\n      {msg.attachments.length !== 0 && (\r\n        <Grid item xs={12} justifyContent=\"space-between\" sx={{ width: '100%' }}>\r\n          {msg.attachments.map((file, index) => {\r\n            return (\r\n              <>\r\n                {/*  <img\r\n                                 key={file.name}\r\n                                 src={typeof file === 'string' ? file : URL.createObjectURL(file)}\r\n                                 alt=\"file\"\r\n                                 style={{ marginRight: '10px', width: '80px', height: '80px', objectFit: 'contain' }}\r\n                             /> */}\r\n                <a\r\n                  href={typeof file === 'string' ? file : URL.createObjectURL(file)}\r\n                  target=\"_blank\"\r\n                  // style={{ marginRight: '10px', width: '80px', height: '80px', objectFit: 'contain' }}\r\n                >\r\n                  {`Attachment ${index + 1}`}\r\n                </a>{' '}\r\n              </>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Ticket = () => {\r\n  const { user, getDataByRole } = useAuthContext();\r\n  const { globalSettings, setGlobalSettings } = useContext(SettingsContext);\r\n  const theme = useTheme();\r\n\r\n  const [socket, setSocket] = useState(null);\r\n  const [profileView, setProfileView] = useState(false);\r\n  const [menu, setMenu] = useState(false);\r\n  const [tabTitle, setTabTitle] = useState('All');\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentTicket, setCurrentTicket] = useState(null);\r\n  const [ticketType, setTicketType] = useState('myTickets');\r\n  const [tickets, setTickets] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState('');\r\n  const [teamTabValue, setTeamTabValue] = React.useState('1');\r\n\r\n  const getAllEmployees = () => {\r\n    const queryRef = firestore.collection(collection).where('company', '==', user.company);\r\n    const temp = [];\r\n    queryRef.get().then((snapshot) => {\r\n      snapshot.forEach((doc) => {\r\n        let data = doc.data();\r\n        if (doc.id !== user.uid) {\r\n          data.uid = doc.id;\r\n          temp.push(data);\r\n        }\r\n      });\r\n      setAllEmployees(temp);\r\n    });\r\n  };\r\n\r\n  const handleTeamTabChange = (event, newValue) => {\r\n    event.preventDefault();\r\n    setTeamTabValue(newValue);\r\n    if (newValue === '1') {\r\n      getAllEmployees();\r\n    }\r\n  };\r\n\r\n  const [allEmployees, setAllEmployees] = useState([]);\r\n  const handleClickOpen = (e, formTitle) => {\r\n    getAllEmployees();\r\n    setSelectedEmployee('None');\r\n    setSelectedTasks([]);\r\n    setOpen(true);\r\n    setTitle(formTitle);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setDisableSelectedTasks(false);\r\n  };\r\n\r\n  const addMessage = (message, attachments, from, dp, email, index) => {\r\n    setMessages((prev) => [...prev, { from, message, attachments, dp, email }]);\r\n    setInput('');\r\n    setAttachments([]);\r\n    const createdOn = new Date().toISOString();\r\n    const chatData = {\r\n      from,\r\n      message,\r\n      attachments,\r\n      email,\r\n      dp,\r\n    };\r\n    if (attachments.length !== 0) return chatData;\r\n\r\n    axios.patch(`${apiBaseURL}/tickets/chat/${currentTicket._id}`, { chatData }).then((res) => {\r\n      setTickets((prev) => {\r\n        const ticket = prev[index];\r\n        ticket?.chats?.push({ ...chatData, createdOn });\r\n        prev[index] = ticket;\r\n        return prev;\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleQuery = (index, attachments) => async (e) => {\r\n    if (!input) return;\r\n    // console.log(index);\r\n    const to = user.email === currentTicket.email ? currentTicket.assigned : currentTicket.email;\r\n    sendMessage({\r\n      message: input,\r\n      attachments,\r\n      to,\r\n      from: user.displayName,\r\n      email: user.email,\r\n      dp: user.photoURL,\r\n      ticketId: currentTicket._id,\r\n      createdOn: new Date().toISOString(),\r\n    });\r\n    addMessage(input, attachments, user.displayName, user.photoURL, user.email, index);\r\n  };\r\n\r\n  const sendMessage = (data) => {\r\n    socket.emit('sendMessage', data);\r\n  };\r\n\r\n  const handleTabChange = (e) => {\r\n    if (!e.target.innerText) return;\r\n    setTabTitle(e.target.innerText);\r\n  };\r\n\r\n  const [priority, setPriority] = useState(0);\r\n  const priorityMap = new Map([\r\n    ['Low', 0],\r\n    ['Medium', 1],\r\n    ['High', 2],\r\n  ]);\r\n  const handlePriorityChange = (e) => {\r\n    const input = e.target.innerText;\r\n    if (!input) return;\r\n    const value = priorityMap.get(input);\r\n    setPriority(value);\r\n  };\r\n\r\n  const [ticketEmployees, setTicketEmployees] = useState(null);\r\n  const getEmployeesToAssign = () => {\r\n    firestore\r\n      .collection(collection)\r\n      .where('teams', 'array-contains-any', ['tickets'])\r\n      .get()\r\n      .then((snapshot) => {\r\n        const temp = [];\r\n        snapshot.forEach((doc) => {\r\n          let data = doc.data();\r\n          if (doc.id !== user.uid) {\r\n            data.uid = doc.id;\r\n            temp.push(data);\r\n          }\r\n        });\r\n        setTicketEmployees(temp);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmployeesToAssign();\r\n  }, []);\r\n\r\n  const assignTickets = async () => {\r\n    const data = { selectedEmployee, selectedTasks };\r\n    // console.log(data)\r\n    const res = await axios.patch(`${apiBaseURL}/tickets`, { formData: data });\r\n    if (res.data === selectedTasks.length) {\r\n      toast.success('Tickets Assigned to ' + selectedEmployee);\r\n      setCurrentTicket((prev) => ({\r\n        ...prev,\r\n        assigned: selectedEmployee,\r\n      }));\r\n      setTickets((prev) => {\r\n        selectedTasks.forEach((ticketId) => {\r\n          tickets.find(({ _id }) => _id === ticketId)['assigned'] = selectedEmployee;\r\n        });\r\n        return prev;\r\n      });\r\n      setSelectedEmployee('None');\r\n      setSelectedTasks([]);\r\n    }\r\n  };\r\n\r\n  const [disableSelectedTasks, setDisableSelectedTasks] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState('None');\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  const handleSelectedTasks = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSelectedTasks(value);\r\n  };\r\n\r\n  const [statusSelect, setStatusSelect] = useState('open');\r\n  const handleStatusChange = async (status) => {\r\n    const payload = currentTicket;\r\n    const res = await axios.patch(`${apiBaseURL}/tickets?operation=status`, {\r\n      formData: { _id: payload._id, status },\r\n    });\r\n    if (res.data === 1) {\r\n      tickets[payload.index].status = status;\r\n      setStatusSelect(status);\r\n      axios\r\n        .post(`${apiBaseURL}/email/send?service=ticket&event=${status}`, {\r\n          formData: {\r\n            to: payload.email,\r\n            ref: payload,\r\n            companyName: globalSettings.name,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const [privateReply, setPrivateReply] = useState(false);\r\n  const [privateMsg, setPrivateMsg] = useState('');\r\n\r\n  const addPrivateReply = async () => {\r\n    const tempTicket = currentTicket;\r\n    // const tempChat = currentChat;\r\n    const formData = {\r\n      ticketId: currentTicket._id,\r\n      // chatId: currentChat._id,\r\n      reply: {\r\n        email: user.email,\r\n        from: user.displayName,\r\n        dp: '',\r\n        message: privateMsg,\r\n      },\r\n    };\r\n    // console.log(formData);\r\n    const res = await axios.patch(`${apiBaseURL}/tickets/pvtreply`, { formData });\r\n    if (res.status === 200) {\r\n      // console.log(tempTicket.index, tempChat.index);\r\n      const temp = tickets[tempTicket.index].replies;\r\n      if (!temp) {\r\n        temp = [];\r\n      }\r\n      temp.push(formData.reply);\r\n      tickets[tempTicket.index]['replies'] = temp;\r\n      if (currentTicket?._id === tempTicket._id)\r\n        setCurrentTicket((prev) => ({ ...tickets[tempTicket.index], index: prev.index }));\r\n    }\r\n    setPrivateMsg('');\r\n  };\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const menuFlag = Boolean(anchorEl);\r\n  const openMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const filesInput = useRef();\r\n  const [attachments, setAttachments] = useState([]);\r\n\r\n  const uploadAttachments = (files) => {\r\n    const promises = files.map(\r\n      (file) =>\r\n        new Promise((resolve, reject) => {\r\n          const fileName = new Date().getTime() + file.name;\r\n          const storageRef = storage.ref();\r\n          const uploadTask = storageRef.child(`/Attachments/${fileName}`).put(file);\r\n          uploadTask.on(\r\n            'state_changed',\r\n            (snapshot) => {\r\n              const uploaded = Math.floor((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n              // setProgress(uploaded);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              uploadTask.snapshot.ref\r\n                .getDownloadURL()\r\n                .then((url) => {\r\n                  resolve(url);\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            }\r\n          );\r\n        })\r\n    );\r\n    return promises;\r\n  };\r\n\r\n  const restrictedRoles = new Set(['admin', 'itadmin']); //to avoid task assignment to these roles\r\n  const [settings, setSettings] = useState(() =>\r\n    user.firestore.settings ? user.firestore.settings : {}\r\n  );\r\n  const saveSettings = () => {\r\n    // console.log(settings);\r\n    firestore\r\n      .collection(collection)\r\n      .doc(user.uid)\r\n      .update({ settings })\r\n      .then(() => {\r\n        toast.success(`Applied settings`);\r\n        user.firestore.settings = settings;\r\n      });\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('ticketUIContainer');\r\n    const dec = 60 + 8 * 3 * 2; //header.offsetheight + paddingY\r\n    container.style.height = `${window.innerHeight - dec}px`;\r\n    window.addEventListener('resize', () => {\r\n      container.style.height = `${window.innerHeight - dec}px`;\r\n    });\r\n    return () =>\r\n      window.removeEventListener('resize', () => {\r\n        console.log('window resize listener removed');\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const searchBar = document.getElementById('searchBar');\r\n    const chatBox = document.getElementById('chatBox');\r\n    if (chatBox.scrollHeight > chatBox.offsetHeight) {\r\n      searchBar.style.position = 'sticky';\r\n    }\r\n    chatBox.scrollTop = chatBox.scrollHeight;\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (!currentTicket) return;\r\n    setMessages(currentTicket.chats);\r\n  }, [currentTicket]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    setSocket(\r\n      io(apiBaseURL, {\r\n        query: { email: user.email },\r\n      })\r\n    );\r\n\r\n    if (ticketType === 'myTickets') {\r\n      axios.get(`${apiBaseURL}/tickets/${user.company}?email=${user.email}`).then((res) => {\r\n        setTickets(res.data);\r\n        const fabricatedParam = {\r\n          // target: { innerText: access.includes(user.role) ? 'All' : 'Open' },\r\n          target: { innerText: 'Open' },\r\n        };\r\n        handleTabChange(fabricatedParam);\r\n      });\r\n    } else {\r\n      // if (user.firestore.role === 'itadmin') {\r\n      if (access.includes(user.firestore.role)) {\r\n        axios.get(`${apiBaseURL}/tickets/${user.company}`).then((res) => {\r\n          setTickets(res.data);\r\n        });\r\n      } else {\r\n        axios.get(`${apiBaseURL}/tickets/${user.company}?assigned=${user.email}`).then((res) => {\r\n          setTickets(res.data);\r\n          const fabricatedParam = {\r\n            // target: { innerText: access.includes(user.role) ? 'All' : 'Open' },\r\n            target: { innerText: 'Open' },\r\n          };\r\n          handleTabChange(fabricatedParam);\r\n        });\r\n      }\r\n    }\r\n  }, [user, ticketType]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    // listen for incoming messages\r\n    // console.log(`subscribed-rec`);\r\n    socket.on('recieveMessage', (data) => {\r\n      const { ticketId } = data;\r\n      // console.log(ticketId);\r\n      const ticket = tickets.find((ticket) => ticket._id === ticketId);\r\n      if (!ticket) return;\r\n      ticket.chats.push(data);\r\n      if (currentTicket?._id === ticketId) {\r\n        setCurrentTicket({\r\n          ...ticket,\r\n        });\r\n      }\r\n    });\r\n    return () => {\r\n      socket.off('recieveMessage');\r\n      // console.log(`unsubscribed-rec`);\r\n    };\r\n  }, [socket, tickets, currentTicket]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        fullScreen={title === 'Settings'}\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: title === 'Settings' ? null : '75vh',\r\n            overflowY: 'auto',\r\n          },\r\n        }}\r\n      >\r\n        <Container sx={{ mt: 3, mb: 3 }}>\r\n          <Card variant=\"outlined\">\r\n            <CardContent>\r\n              {title !== 'Team' ? (\r\n                <>\r\n                  <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Typography variant=\"h2\">{title}</Typography>\r\n                  </div>\r\n                  <br />\r\n                </>\r\n              ) : null}\r\n              {title === 'Assign Tickets' ? (\r\n                <>\r\n                  <Typography variant=\"p\">Select Employee</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      fullWidth\r\n                      id=\"demo-simple-select\"\r\n                      value={selectedEmployee}\r\n                      onChange={(e) => {\r\n                        setSelectedEmployee(e.target.value);\r\n                      }}\r\n                    >\r\n                      {ticketEmployees ? (\r\n                        <MenuItem value=\"None\">None</MenuItem>\r\n                      ) : (\r\n                        <MenuItem value=\"None\">No employee found</MenuItem>\r\n                      )}\r\n                      {ticketEmployees &&\r\n                        ticketEmployees.map((emp, index) => {\r\n                          return (\r\n                            <MenuItem key={emp.email} value={emp.email}>\r\n                              {emp.email}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br />\r\n                  <br />\r\n                  <Typography variant=\"p\">Select Tickets to assign.</Typography>\r\n                  <br />\r\n                  <FormControl disabled={disableSelectedTasks} fullWidth>\r\n                    <Select\r\n                      id=\"demo-multiple-chip\"\r\n                      multiple\r\n                      value={selectedTasks}\r\n                      onChange={handleSelectedTasks}\r\n                      input={<OutlinedInput id=\"select-multiple-chip\" label=\"Managers\" />}\r\n                      renderValue={(selected) => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          {selected.map((value) => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={tickets.find((ticket) => ticket._id === value).title}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {tickets.map(({ _id, title, assigned }) => {\r\n                        if (assigned) return;\r\n                        return (\r\n                          <MenuItem key={_id} value={_id} style={getStyles(title, tickets, theme)}>\r\n                            {title}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </>\r\n              ) : title === 'Team' ? (\r\n                <>\r\n                  <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                    <TabContext value={teamTabValue}>\r\n                      <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                        <TabList\r\n                          onChange={handleTeamTabChange}\r\n                          textColor=\"secondary\"\r\n                          indicatorColor=\"secondary\"\r\n                          aria-label=\"lab API tabs example\"\r\n                          centered\r\n                        >\r\n                          <Tab label=\"Team Members\" value=\"1\" />\r\n                          <Tab label=\"Add Members\" value=\"2\" />\r\n                        </TabList>\r\n                      </Box>\r\n                      <TabPanel value=\"1\">\r\n                        <List sx={{ p: 0 }}>\r\n                          {allEmployees.map((item, index) => {\r\n                            if (item.teams?.includes('tickets')) {\r\n                              return (\r\n                                <>\r\n                                  <ListItem\r\n                                    id={item.uid}\r\n                                    key={index}\r\n                                    sx={{ p: 0 }}\r\n                                    secondaryAction={\r\n                                      <IconButton\r\n                                        edge=\"end\"\r\n                                        aria-label=\"delete\"\r\n                                        sx={{ borderRadius: '50%' }}\r\n                                        onClick={() => {\r\n                                          firestore\r\n                                            .collection(collection)\r\n                                            .doc(item.uid)\r\n                                            .update({\r\n                                              teams:\r\n                                                firebase.firestore.FieldValue.arrayRemove(\r\n                                                  'tickets'\r\n                                                ),\r\n                                            })\r\n                                            .then((res) => {\r\n                                              const teamMem = document.getElementById(item.uid);\r\n                                              teamMem.style.display = 'none';\r\n                                            });\r\n                                        }}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    }\r\n                                  >\r\n                                    <ListItemAvatar>\r\n                                      <Avatar alt=\"DP\" src={item.photoURL} />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                      primary={item.displayName}\r\n                                      secondary={item.email}\r\n                                    />\r\n                                  </ListItem>\r\n                                  <Divider />\r\n                                </>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </List>\r\n                      </TabPanel>\r\n                      <TabPanel value=\"2\">\r\n                        <Typography variant=\"p\">Select Employees</Typography>\r\n                        <br />\r\n                        <FormControl fullWidth>\r\n                          <Select\r\n                            id=\"demo-multiple-chip\"\r\n                            multiple\r\n                            value={selectedTasks}\r\n                            onChange={handleSelectedTasks}\r\n                            input={<OutlinedInput id=\"select-multiple-chip\" label=\"Managers\" />}\r\n                            renderValue={(selected) => (\r\n                              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                                {selected.map((value) => (\r\n                                  <Chip key={value} label={value} />\r\n                                ))}\r\n                              </Box>\r\n                            )}\r\n                            MenuProps={MenuProps}\r\n                          >\r\n                            {allEmployees.map((item) => {\r\n                              if (!item.teams || item.teams.includes('tickets')) return;\r\n                              return (\r\n                                <MenuItem\r\n                                  key={item.email}\r\n                                  value={item.email}\r\n                                  style={getStyles(item.email, allEmployees, theme)}\r\n                                >\r\n                                  {item.email}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                          </Select>\r\n                        </FormControl>\r\n                      </TabPanel>\r\n                    </TabContext>\r\n                  </Box>\r\n                </>\r\n              ) : title === 'Settings' ? (\r\n                <>\r\n                  <br />\r\n                  <Grid container>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"subtitle1\">Appoint a substitute:</Typography>\r\n                      <FormControl fullWidth>\r\n                        <Select\r\n                          fullWidth\r\n                          id=\"demo-simple-select\"\r\n                          value={settings.appointed ? settings.appointed : 'None'}\r\n                          onChange={(e) => {\r\n                            setSettings((prev) => ({\r\n                              ...prev,\r\n                              appointed: e.target.value,\r\n                            }));\r\n                          }}\r\n                        >\r\n                          {allEmployees ? (\r\n                            <MenuItem value=\"None\">None</MenuItem>\r\n                          ) : (\r\n                            <MenuItem value=\"None\">No employee found</MenuItem>\r\n                          )}\r\n                          {allEmployees &&\r\n                            allEmployees.map((emp, index) => {\r\n                              if (restrictedRoles.has(emp.role)) return;\r\n                              return (\r\n                                <MenuItem key={emp.email} value={emp.email}>\r\n                                  {`${emp.email} (${emp.role})`}\r\n                                </MenuItem>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              ) : null}\r\n            </CardContent>\r\n            <CardActions sx={{ float: 'right' }} style={{ padding: '0px 20px 20px' }}>\r\n              <Button\r\n                onClick={() => {\r\n                  if (title === 'Settings')\r\n                    setSettings(user.firestore.settings ? user.firestore.settings : {});\r\n                  handleClose();\r\n                }}\r\n              >\r\n                Close\r\n              </Button>\r\n              {teamTabValue !== '1' || title === 'Assign Tickets' ? (\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    if (title === 'Team') {\r\n                      const temp = allEmployees.filter((item) =>\r\n                        selectedTasks.includes(item.email)\r\n                      );\r\n                      const promises = [];\r\n                      temp.forEach((item) => {\r\n                        promises.push(\r\n                          firestore\r\n                            .collection(collection)\r\n                            .doc(item.uid)\r\n                            .update({ teams: firebase.firestore.FieldValue.arrayUnion('tickets') })\r\n                        );\r\n                      });\r\n                      Promise.all(promises).then((res) => {\r\n                        console.log('Teams Updated');\r\n                      });\r\n                      setTeamTabValue('1');\r\n                    } else if (title === 'Assign Tickets') {\r\n                      assignTickets();\r\n                    }\r\n                    handleClose();\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              ) : title === 'Settings' ? (\r\n                <Button size=\"small\" variant=\"contained\" onClick={saveSettings}>\r\n                  Save\r\n                </Button>\r\n              ) : null}\r\n            </CardActions>\r\n          </Card>\r\n        </Container>\r\n      </Dialog>\r\n\r\n      <FormControl>\r\n        {/* <FormLabel id=\"demo-controlled-radio-buttons-group\">Gender</FormLabel> */}\r\n        {/* <RadioGroup\r\n          row\r\n          aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n          name=\"controlled-radio-buttons-group\"\r\n          value={ticketType}\r\n          onChange={(e) => {\r\n            setTicketType(e.target.value);\r\n          }}\r\n        >\r\n          <FormControlLabel value=\"myTickets\" control={<Radio />} label=\"My Tickets\" />\r\n          <FormControlLabel\r\n            value=\"assigned\"\r\n            control={<Radio />}\r\n            label={access.includes(user.firestore.role) ? 'All Tickets' : 'Assigned Tickets'}\r\n          />\r\n        </RadioGroup> */}\r\n      </FormControl>\r\n      <br />\r\n      <br />\r\n\r\n      <div\r\n        id=\"ticketUIContainer\"\r\n        style={{ border: '2px solid #f0f0f0', borderRadius: '25px', overflowY: 'hidden' }}\r\n      >\r\n        <Grid container sx={{ height: '100%' }}>\r\n          {false && (\r\n            <>\r\n              <Grid item xs={3} sx={{ height: '100%' }}>\r\n                <Typography variant=\"subtitle1\" sx={{ mt: 2, ml: 2, alignItems: 'center' }}>\r\n                  Menu\r\n                </Typography>\r\n                <Divider />\r\n                <List sx={{ p: 0 }}>\r\n                  <ListItemButton\r\n                    onClick={(e) => {\r\n                      handleClickOpen(e, 'Team');\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{ width: '100%' }}\r\n                      onMouseOver={(e) => {\r\n                        e.target.style.color = 'blue';\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.target.style.color = '';\r\n                      }}\r\n                    >\r\n                      Team\r\n                    </Typography>\r\n                  </ListItemButton>\r\n                  <ListItemButton\r\n                    onClick={(e) => {\r\n                      getEmployeesToAssign();\r\n                      handleClickOpen(e, 'Assign Tickets');\r\n                      setSelectedTasks([]);\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{ width: '100%' }}\r\n                      onMouseOver={(e) => {\r\n                        e.target.style.color = 'blue';\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.target.style.color = '';\r\n                      }}\r\n                    >\r\n                      Assign Tickets\r\n                    </Typography>\r\n                  </ListItemButton>\r\n                </List>\r\n              </Grid>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n            </>\r\n          )}\r\n          <Grid\r\n            container\r\n            item\r\n            xs={profileView || privateReply || menu ? 3 : 3.5}\r\n            spacing={2}\r\n            sx={{ height: '100%' }}\r\n          >\r\n            <Grid item xs={12} sx={{ height: '100%' }}>\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n                sx={{ paddingX: '7px', paddingY: '5px' }}\r\n              >\r\n                {/* <Typography variant=\"body1\">Body1</Typography>\r\n                                <Typography variant=\"body2\">Body2</Typography>\r\n                                <Typography variant=\"subtitle1\">Subtitle1</Typography>\r\n                                <Typography variant=\"subtitle2\">Subtitle2</Typography>\r\n                                <Typography variant=\"caption\">Caption</Typography>\r\n                                <Typography variant=\"overline\">Overline</Typography>\r\n                                <Typography variant=\"button\">Button</Typography> */}\r\n                {access.includes(user?.firestore.role) && (\r\n                  <>\r\n                    <IconButton\r\n                      onClick={(e) => {\r\n                        // setMenu((prev) => !prev);\r\n                        openMenu(e);\r\n                      }}\r\n                      // sx={{ height: '16px', width: '10px', borderRadius: '20px', ml: '2px', mr: '4px' }}\r\n                    >\r\n                      <SettingsIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"basic-menu\"\r\n                      anchorEl={anchorEl}\r\n                      open={menuFlag}\r\n                      onClose={closeMenu}\r\n                      MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                      }}\r\n                    >\r\n                      <MenuItem\r\n                        onClick={(e) => {\r\n                          closeMenu();\r\n                          handleClickOpen(e, 'Team');\r\n                        }}\r\n                      >\r\n                        Team\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        onClick={(e) => {\r\n                          closeMenu();\r\n                          getEmployeesToAssign();\r\n                          handleClickOpen(e, 'Assign Tickets');\r\n                          setSelectedTasks([]);\r\n                        }}\r\n                      >\r\n                        Assign Tickets\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        onClick={(e) => {\r\n                          closeMenu();\r\n                          handleClickOpen(e, 'Settings');\r\n                        }}\r\n                      >\r\n                        Settings\r\n                      </MenuItem>\r\n                    </Menu>\r\n                  </>\r\n                )}\r\n                {/* {tabs.map((tab) => (\r\n                  <Typography\r\n                    width=\"85%\"\r\n                    textAlign=\"center\"\r\n                    display={user?.firestore.role !== 'itadmin' && tab === 'All' ? 'none' : ''}\r\n                    variant=\"subtitle1\"\r\n                    name={tab}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      color: tabTitle === tab ? 'blue' : '',\r\n                      backgroundColor: tabTitle === tab ? '#ebecf0' : '',\r\n                      borderRadius: '50px',\r\n                    }}\r\n                    onClick={handleTabChange}\r\n                  >\r\n                    {tab}\r\n                  </Typography>\r\n                ))} */}\r\n                <FormControl size=\"small\">\r\n                  <InputLabel id=\"tabLabel\">Status</InputLabel>\r\n                  <Select\r\n                    labelId=\"tabLabel\"\r\n                    label=\"Status\"\r\n                    id=\"tab-select\"\r\n                    value={tabTitle}\r\n                    onClick={handleTabChange}\r\n                  >\r\n                    {tabs.map((tab) => {\r\n                      if (tab === 'All') return;\r\n                      return (\r\n                        <MenuItem key={tab} value={tab}>\r\n                          {tab}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl size=\"small\">\r\n                  <InputLabel id=\"priorityLabel\">Priority</InputLabel>\r\n                  <Select\r\n                    labelId=\"priorityLabel\"\r\n                    label=\"Priority\"\r\n                    id=\"priority-select\"\r\n                    value={priority}\r\n                    onClick={handlePriorityChange}\r\n                  >\r\n                    <MenuItem value=\"0\">Low</MenuItem>\r\n                    <MenuItem value=\"1\">Medium</MenuItem>\r\n                    <MenuItem value=\"2\">High</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Stack>\r\n              <Divider />\r\n              <List sx={{ backgroundColor: '#f5f6fa', py: 0, height: '95%', overflowY: 'auto' }}>\r\n                {tickets.map((ticket, index) => {\r\n                  if (tabTitle !== 'All' && ticket.status !== tabTitle?.toLowerCase()) return;\r\n                  if (typeof ticket.priority === 'number') {\r\n                    if (ticket.priority !== priority) return;\r\n                  } else if (priority !== 0) return;\r\n                  const dateArr = new Date(ticket.createdOn).toDateString().split(' ');\r\n                  // const dateArr = ticket.createdOn.toDateString().split(' ');\r\n                  return (\r\n                    <>\r\n                      <ListItemButton\r\n                        key={ticket._id}\r\n                        // selected={ticket._id === currentTicket?._id}\r\n                        sx={{\r\n                          px: 1,\r\n                          py: 1,\r\n                          backgroundColor:\r\n                            ticket._id === currentTicket?._id ? '#b2ccfe' : 'transparent',\r\n                        }}\r\n                        onClick={() => {\r\n                          if (ticket._id === currentTicket?._id) return;\r\n                          const searchBar = document.getElementById('searchBar');\r\n                          searchBar.style.position = 'absolute';\r\n                          searchBar.style.bottom = '0px';\r\n                          setPrivateReply(false);\r\n                          setCurrentTicket({ ...ticket, index });\r\n                          setStatusSelect(ticket.status);\r\n                        }}\r\n                      >\r\n                        <Grid container>\r\n                          <Grid\r\n                            container\r\n                            item\r\n                            xs={2}\r\n                            justifyContent=\"center\"\r\n                            sx={{ overflowX: 'clip' }}\r\n                          >\r\n                            <Avatar\r\n                              alt=\"user pic\"\r\n                              src={\r\n                                ticket.photoURL === user?.photoURL\r\n                                  ? ticket.assigned\r\n                                  : ticket.photoURL\r\n                              }\r\n                            />\r\n                          </Grid>\r\n                          <Grid item xs={10}>\r\n                            <Stack direction=\"row\" justifyContent=\"space-between\" width=\"100%\">\r\n                              <>\r\n                                {user?.firestore.role === 'itadmin' ? (\r\n                                  <div style={{ width: '75%' }}>\r\n                                    <Typography\r\n                                      variant=\"caption\"\r\n                                      noWrap\r\n                                      onClick={() => {\r\n                                        setMenu(false);\r\n                                        setProfileView(true);\r\n                                      }}\r\n                                      onMouseOver={(e) => {\r\n                                        e.target.style.color = 'blue';\r\n                                      }}\r\n                                      onMouseLeave={(e) => {\r\n                                        e.target.style.color = '';\r\n                                      }}\r\n                                    >\r\n                                      {ticket.name}\r\n                                    </Typography>\r\n                                  </div>\r\n                                ) : (\r\n                                  <Typography variant=\"caption\" style={{ width: '75%' }} noWrap>\r\n                                    #{ticket._id}\r\n                                  </Typography>\r\n                                )}\r\n                              </>\r\n                              <Typography\r\n                                variant=\"overline\"\r\n                                style={{ width: '25%', textAlign: 'right' }}\r\n                              >\r\n                                {dateArr[1] + ' ' + dateArr[2]}\r\n                              </Typography>\r\n                            </Stack>\r\n                            <Typography width=\"100%\" noWrap variant=\"subtitle1\">\r\n                              {ticket.title}\r\n                            </Typography>\r\n                            <Typography width=\"100%\" noWrap variant=\"subtitle2\">\r\n                              {ticket.desc}\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </ListItemButton>\r\n                      {index !== tickets.length - 1 && <Divider />}\r\n                    </>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider orientation=\"vertical\" flexItem />\r\n          <Grid\r\n            id=\"chatContainer\"\r\n            container\r\n            item\r\n            xs={profileView || privateReply || menu ? 5.96 : 8.46}\r\n            sx={{ height: '100%' }}\r\n          >\r\n            <Grid id=\"chatHeader\" item xs={12}>\r\n              <Stack\r\n                direction=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                sx={{ padding: '5px' }}\r\n              >\r\n                <div style={{ marginLeft: '16px' }}>\r\n                  {currentTicket ? (\r\n                    <Stack direction=\"row\">\r\n                      <Link\r\n                        onClick={() => {\r\n                          if (!currentTicket || !access.includes(user?.firestore.role)) return;\r\n                          setPrivateReply(true);\r\n                          // setCurrentChat((prev) => {\r\n                          //     let temp = [];\r\n                          //     currentTicket?.replies?.map((chat) => {\r\n                          //         if (chat.pvtReplies) {\r\n                          //             chat.pvtReplies.map((reply) => {\r\n                          //                 temp.push({ ...reply, chatId: chat._id });\r\n                          //             });\r\n                          //         }\r\n                          //     });\r\n                          //     temp.sort((a, b) => new Date(b.createdOn) - new Date(a.createdOn));\r\n                          //     return { pvtReplies: temp };\r\n                          // });\r\n                        }}\r\n                      >\r\n                        <Tooltip\r\n                          title={\r\n                            access.includes(user?.firestore.role)\r\n                              ? 'View all private replies'\r\n                              : 'Ticket Title'\r\n                          }\r\n                        >\r\n                          <Typography variant=\"h4\">\r\n                            {currentTicket?.title || 'Select a ticket'}\r\n                          </Typography>\r\n                        </Tooltip>\r\n                      </Link>\r\n                      {currentTicket?.assigned && (\r\n                        <Tooltip title={`Assigned to ${currentTicket?.assigned}`}>\r\n                          <img\r\n                            style={{\r\n                              marginLeft: '8px',\r\n                              height: '25px',\r\n                              width: '25px',\r\n                              float: 'right',\r\n                            }}\r\n                            src=\"https://img.icons8.com/color/25/null/checked--v1.png\"\r\n                          />\r\n                        </Tooltip>\r\n                      )}\r\n                    </Stack>\r\n                  ) : (\r\n                    <Typography variant=\"h4\">\r\n                      {currentTicket?.title || 'Select a ticket'}\r\n                    </Typography>\r\n                  )}\r\n                  <Typography variant=\"body1\">{currentTicket?.desc}</Typography>\r\n                </div>\r\n                {access.includes(user?.firestore.role) && (\r\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    {currentTicket && (\r\n                      <Button\r\n                        size=\"small\"\r\n                        onClick={(e) => {\r\n                          handleClickOpen(e, 'Assign Tickets');\r\n                          setDisableSelectedTasks(true);\r\n                          setSelectedTasks([currentTicket._id]);\r\n                        }}\r\n                      >\r\n                        {currentTicket?.assigned === null ? 'Assign' : 'Re-Assign'}\r\n                      </Button>\r\n                    )}\r\n                    {currentTicket && (\r\n                      <FormControl size=\"small\">\r\n                        <Select\r\n                          id=\"demo-simple-select\"\r\n                          value={statusSelect}\r\n                          onChange={(e) => {\r\n                            handleStatusChange(e.target.value);\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"open\">Open</MenuItem>\r\n                          <MenuItem value=\"pending\">Pending</MenuItem>\r\n                          <MenuItem value=\"closed\">Closed</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    )}\r\n                  </Stack>\r\n                )}\r\n              </Stack>\r\n              <Divider />\r\n            </Grid>\r\n            <Grid item xs={12} sx={{ height: '91%', paddingY: '4px' }}>\r\n              <div id=\"chatBox\" style={{ position: 'relative', overflowY: 'auto', height: '100%' }}>\r\n                {/* <Grid container rowSpacing={2}>\r\n                                    {messages?.map((message, index) => {\r\n                                        if (message.email === user.email) message.from = 'You';\r\n                                        return <ChatLog id={`chatLog-${index}`} key={index} msg={message} />;\r\n                                    })}\r\n                                </Grid> */}\r\n                <List sx={{ p: 0 }}>\r\n                  {messages?.map((message, index) => {\r\n                    if (message.email === user.email) message.from = 'You';\r\n                    return (\r\n                      <>\r\n                        <ListItemButton\r\n                          id={`chatLog-${message._id}`}\r\n                          sx={{\r\n                            p: 0,\r\n                            cursor: 'default',\r\n                            // backgroundColor: message.from === 'You' ? '#f0f0f0' : null\r\n                          }}\r\n                          // selected={message._id === currentChat?._id}\r\n                        >\r\n                          <ChatLog key={index} msg={message} />\r\n                          {/* <ListItemSecondaryAction sx={{ mr: '10%' }}>\r\n                                                        <IconButton\r\n                                                            sx={{ borderRadius: '50%' }}\r\n                                                            onClick={() => {\r\n                                                                setCurrentChat({ ...message, index });\r\n                                                                setPrivateReply(true);\r\n                                                            }}\r\n                                                        >\r\n                                                            <CommentIcon />\r\n                                                        </IconButton>\r\n                                                    </ListItemSecondaryAction> */}\r\n                        </ListItemButton>\r\n                        <Divider />\r\n                      </>\r\n                    );\r\n                  })}\r\n                </List>\r\n                <div\r\n                  id=\"searchBar\"\r\n                  style={{\r\n                    position: 'absolute',\r\n                    bottom: '0px',\r\n                    width: '100%',\r\n                    backgroundColor: '#ffffff',\r\n                  }}\r\n                >\r\n                  {attachments.length !== 0 && (\r\n                    <Grid item xs={12} justifyContent=\"space-evenly\">\r\n                      {Object.values(attachments).map((file) => {\r\n                        return (\r\n                          // <img\r\n                          //     key={file.name}\r\n                          //     src={typeof file === 'string' ? file : URL.createObjectURL(file)}\r\n                          //     alt=\"file\"\r\n                          //     style={{ marginRight: '10px', width: '80px', height: '80px', objectFit: 'contain' }}\r\n                          // />\r\n                          <Typography variant=\"caption\">{file.name}</Typography>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  )}\r\n                  <Stack\r\n                    direction=\"row\"\r\n                    spacing={2}\r\n                    justifyContent=\"center\"\r\n                    sx={{ width: '100%', paddingY: 1 }}\r\n                  >\r\n                    <TextField\r\n                      placeholder=\"Type your query here ...\"\r\n                      sx={{ width: '80%' }}\r\n                      value={input}\r\n                      InputProps={{\r\n                        endAdornment: (\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              sx={{ borderRadius: '50%' }}\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={(e) => filesInput.current.click()}\r\n                              // onMouseDown={handleMouseDownPassword}\r\n                              edge=\"end\"\r\n                            >\r\n                              <input\r\n                                ref={filesInput}\r\n                                type=\"file\"\r\n                                multiple\r\n                                hidden\r\n                                onChange={(e) => setAttachments(e.target.files)}\r\n                              />\r\n                              <AttachFileIcon />\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                      onChange={(e) => setInput(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      disabled={\r\n                        !currentTicket ||\r\n                        (user.firestore.role !== 'itadmin' && !currentTicket?.assigned)\r\n                      }\r\n                      variant=\"contained\"\r\n                      onClick={(e) => {\r\n                        if (attachments.length) {\r\n                          // console.log(Object.values(attachments))\r\n                          const tempTicket = currentTicket;\r\n                          const chatData = addMessage(\r\n                            input,\r\n                            Object.values(attachments),\r\n                            user.displayName,\r\n                            user.photoURL,\r\n                            user.email,\r\n                            currentTicket?.index\r\n                          );\r\n\r\n                          const promises = uploadAttachments(Object.values(attachments));\r\n                          Promise.all(promises).then((urls) => {\r\n                            // handleQuery(currentTicket?.index, urls)()\r\n                            const to =\r\n                              user.email === tempTicket.email\r\n                                ? tempTicket.assigned\r\n                                : tempTicket.email;\r\n                            sendMessage({\r\n                              message: input,\r\n                              attachments: urls,\r\n                              to,\r\n                              from: user.displayName,\r\n                              email: user.email,\r\n                              dp: user.photoURL,\r\n                              ticketId: tempTicket._id,\r\n                              createdOn: new Date().toISOString(),\r\n                            });\r\n                            chatData.attachments = urls;\r\n                            axios\r\n                              .patch(`${apiBaseURL}/tickets/chat/${tempTicket._id}`, { chatData })\r\n                              .then((res) => {\r\n                                setTickets((prev) => {\r\n                                  const ticket = prev[tempTicket?.index];\r\n                                  ticket?.chats?.push({\r\n                                    ...chatData,\r\n                                    createdOn: new Date().toISOString(),\r\n                                  });\r\n                                  prev[tempTicket?.index] = ticket;\r\n                                  return prev;\r\n                                });\r\n                              });\r\n                          });\r\n                        } else {\r\n                          handleQuery(currentTicket?.index, [])();\r\n                        }\r\n                      }}\r\n                    >\r\n                      Send\r\n                    </Button>\r\n                  </Stack>\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          {profileView && (\r\n            <>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid container item xs={3} sx={{ height: '100%' }}>\r\n                <Grid item xs={12}>\r\n                  <IconButton\r\n                    sx={{ float: 'right', borderRadius: '50%' }}\r\n                    onClick={() => setProfileView(false)}\r\n                  >\r\n                    <CancelOutlined />\r\n                  </IconButton>\r\n                  {currentTicket && (\r\n                    <center style={{ padding: '40px 0px' }}>\r\n                      <Avatar\r\n                        alt=\"profile user\"\r\n                        src={currentTicket.photoURL}\r\n                        sx={{ width: 75, height: 75 }}\r\n                      />\r\n                      <br />\r\n                      <Typography variant=\"h3\">{currentTicket.name}</Typography>\r\n                      {/* <Typography variant=\"caption\">Customer</Typography> */}\r\n                    </center>\r\n                  )}\r\n                  <Divider />\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )}\r\n          {privateReply && (\r\n            <>\r\n              <Divider orientation=\"vertical\" flexItem />\r\n              <Grid container item xs={3} sx={{ px: 1, height: '100%' }}>\r\n                <Grid item xs={12} sx={{ height: '28%' }}>\r\n                  <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography variant=\"caption\">All private replies</Typography>\r\n                    <IconButton\r\n                      sx={{ borderRadius: '50%' }}\r\n                      onClick={() => {\r\n                        // setCurrentChat(null);\r\n                        setPrivateReply(false);\r\n                      }}\r\n                    >\r\n                      <CancelOutlined />\r\n                    </IconButton>\r\n                  </Stack>\r\n                  {currentTicket && (\r\n                    <>\r\n                      <TextField\r\n                        // disabled={!currentChat?._id}\r\n                        fullWidth\r\n                        multiline\r\n                        rows={3}\r\n                        value={privateMsg}\r\n                        onChange={(e) => setPrivateMsg(e.target.value)}\r\n                      />\r\n                      <Button\r\n                        disabled={!privateMsg}\r\n                        size=\"small\"\r\n                        sx={{ float: 'right', mt: 1 }}\r\n                        variant=\"contained\"\r\n                        onClick={addPrivateReply}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ height: '72%' }}>\r\n                  <List dense={true} sx={{ p: 0, height: '100%', overflowY: 'auto' }}>\r\n                    {currentTicket?.replies?.map((msg) => {\r\n                      if (msg.email !== user.email) return;\r\n                      const date = new Date(msg.createdOn || Date.now());\r\n                      const dateArr = date.toDateString().split(' ');\r\n                      const timeArr = date.toLocaleTimeString().split(' ');\r\n                      return (\r\n                        <>\r\n                          {/* <ListItemAvatar>\r\n                                                            <Avatar src=\"img\" alt=\"sender dp\" />\r\n                                                        </ListItemAvatar> */}\r\n                          {/* <ListItemText primary={msg.from} secondary={msg.message} /> */}\r\n                          <ListItem sx={{ p: 0 }}>\r\n                            <div style={{ width: '100%' }}>\r\n                              <Typography variant=\"body1\">{msg.message}</Typography>\r\n                              <Stack\r\n                                sx={{ width: '100%' }}\r\n                                direction=\"row\"\r\n                                justifyContent=\"flex-end\"\r\n                                alignItems=\"center\"\r\n                              >\r\n                                <Typography variant=\"caption\" sx={{ mr: 1 }}>\r\n                                  {dateArr[1] + ' ' + dateArr[2]}\r\n                                </Typography>\r\n                                <Typography variant=\"caption\">\r\n                                  {timeArr[0].split(':').slice(0, 2).join(':') + ' ' + timeArr[1]}\r\n                                </Typography>\r\n                              </Stack>\r\n                            </div>\r\n                          </ListItem>\r\n                          {/* <ListItemSecondaryAction>\r\n                                                            \r\n                                                        </ListItemSecondaryAction> */}\r\n                          <Divider />\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Ticket;\r\n"],"names":["getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","tabs","access","ChatLog","_ref","msg","date","Date","createdOn","now","dateArr","toDateString","split","timeArr","toLocaleTimeString","_jsxs","Grid","container","item","xs","padding","children","_jsx","Avatar","alt","src","dp","sx","height","Typography","variant","from","message","Stack","justifyContent","alignItems","slice","join","attachments","length","map","file","index","_Fragment","href","URL","createObjectURL","target","concat","_currentTicket$replie","_useAuthContext","useAuthContext","user","_useContext","getDataByRole","useContext","SettingsContext","globalSettings","setGlobalSettings","useTheme","_useState","useState","_useState2","_slicedToArray","socket","setSocket","_useState3","_useState4","profileView","setProfileView","_useState5","_useState6","menu","setMenu","_useState7","_useState8","tabTitle","setTabTitle","_useState9","_useState10","input","setInput","_useState11","_useState12","messages","setMessages","_useState13","_useState14","currentTicket","setCurrentTicket","_useState15","_useState16","ticketType","_useState17","_useState18","tickets","setTickets","_React$useState","React","_React$useState2","open","setOpen","_React$useState3","_React$useState4","title","setTitle","_React$useState5","_React$useState6","teamTabValue","setTeamTabValue","getAllEmployees","queryRef","firestore","collection","where","company","temp","get","then","snapshot","forEach","doc","data","id","uid","push","setAllEmployees","_useState19","_useState20","allEmployees","handleClickOpen","e","formTitle","setSelectedEmployee","setSelectedTasks","handleClose","setDisableSelectedTasks","addMessage","email","prev","_toConsumableArray","setAttachments","toISOString","chatData","axios","apiBaseURL","_id","res","_ticket$chats","ticket","chats","_objectSpread","sendMessage","emit","handleTabChange","innerText","_useState21","_useState22","priority","setPriority","priorityMap","Map","_useState23","_useState24","ticketEmployees","setTicketEmployees","getEmployeesToAssign","useEffect","assignTickets","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","next","selectedEmployee","selectedTasks","formData","sent","toast","assigned","ticketId","find","_ref4","stop","apply","arguments","_useState25","_useState26","disableSelectedTasks","_useState27","_useState28","_useState29","_useState30","handleSelectedTasks","event","value","_useState31","_useState32","statusSelect","setStatusSelect","handleStatusChange","_ref5","_callee3","status","payload","_context3","to","ref","companyName","console","log","_x2","_useState33","_useState34","privateReply","setPrivateReply","_useState35","_useState36","privateMsg","setPrivateMsg","addPrivateReply","_ref6","_callee4","tempTicket","_context4","reply","displayName","replies","_readOnlyError","_useState37","_useState38","anchorEl","setAnchorEl","menuFlag","Boolean","closeMenu","filesInput","useRef","_useState39","_useState40","restrictedRoles","Set","_useState41","settings","_useState42","setSettings","document","getElementById","window","innerHeight","addEventListener","removeEventListener","searchBar","chatBox","scrollHeight","offsetHeight","position","scrollTop","io","query","includes","role","on","off","Dialog","maxWidth","fullWidth","fullScreen","onClose","overflowY","Container","mt","mb","Card","CardContent","display","FormControl","Select","onChange","MenuItem","emp","disabled","multiple","OutlinedInput","label","renderValue","selected","Box","flexWrap","gap","Chip","_ref7","TabContext","borderBottom","borderColor","TabList","newValue","preventDefault","textColor","indicatorColor","centered","Tab","TabPanel","List","p","_item$teams","teams","ListItem","secondaryAction","IconButton","edge","borderRadius","onClick","update","firebase","DeleteIcon","ListItemAvatar","photoURL","ListItemText","primary","secondary","Divider","appointed","has","CardActions","float","Button","size","filter","promises","Promise","all","border","spacing","direction","paddingX","paddingY","currentTarget","SettingsIcon","Menu","MenuListProps","InputLabel","labelId","tab","backgroundColor","py","toLowerCase","ListItemButton","px","bottom","overflowX","noWrap","onMouseOver","color","onMouseLeave","textAlign","desc","orientation","flexItem","marginLeft","Link","Tooltip","cursor","Object","values","TextField","placeholder","InputProps","endAdornment","InputAdornment","current","click","type","hidden","files","AttachFileIcon","resolve","reject","fileName","getTime","uploadTask","storage","child","put","Math","floor","bytesTransferred","totalBytes","error","getDownloadURL","url","catch","err","urls","_ticket$chats2","_ref2","_callee","_context","abrupt","_x","handleQuery","CancelOutlined","multiline","rows","dense","mr"],"sourceRoot":""}