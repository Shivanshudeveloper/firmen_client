{"version":3,"file":"static/js/698.c8dd797c.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animateValue({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n"],"names":["Feature","node","_classCallCheck","this","isMounted","_createClass","key","value","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","arguments","length","undefined","point","x","y","addPointerInfo","handler","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","addPointerEvent","distance","a","b","Math","abs","PanSession","handlers","_this","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","pow","distance2D","offset","timestamp","frameData","push","_objectSpread","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","sync","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","type","initialInfo","onSessionStart","removeListeners","pipe","window","cancelSync","subtractPoint","_ref2","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","name","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","mix","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","_ref3","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","callback","convertBoundingBoxToBox","_ref","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_slicedToArray","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","cubicBezierAsString","c","d","concat","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","Array","isArray","featureTests","waapi","Object","hasOwnProperty","call","Element","prototype","results","supports","_loop","acceleratedValues","Set","createAcceleratedAnimation","valueName","onUpdate","onComplete","_objectWithoutProperties","_excluded","has","repeatDelay","repeatType","damping","keyframes","_options$duration","duration","_options$elapsed","elapsed","repeat","sampleAnimation","animateValue","state","done","pregeneratedKeyframes","t","sample","animation","element","_element$animate","_ref$delay","delay","_ref$repeat","_ref$repeatType","times","animate","_defineProperty","fill","iterations","direction","animateStyle","owner","current","onfinish","set","getFinalKeyframe","cancel","currentTime","stop","autoplay","setWithVelocity","timeout","start","performance","now","checkElapsed","createInstantAnimation","setValue","underDampedSpring","stiffness","restSpeed","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","complex","maxDefaults","applyDefaultFilter","v","_v$slice$split","slice","split","_v$slice$split2","match","floatRegex","number","unit","replace","defaultValue","functionRegex","filter","getAnimatableNone","functions","map","join","defaultValueTypes","numberValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","parseFloat","indexOf","getZeroUnit","potentialUnitType","getValueTransition","transition","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","from","get","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","warning","currentAnimation","_ref$velocity","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","_ref$restDelta","restDelta","modifyTarget","driver","onStop","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","prev","boundary","heading","velocityPerSecond","inertia","when","delayChildren","staggerChildren","staggerDirection","keys","isTransitionDefined","HTMLElement","getProps","acceleratedAnimation","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","presenceContext","isPresent","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","animationState","setActive","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","next","applyConstraints","_this2","_this$getProps6","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","invariant","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","then","_this4","dragKey","toUpperCase","props","externalMotionValue","getValue","initial","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","latest","sourceLength","targetLength","progress","clamp","calcOrigin","transformTemplate","style","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","_Feature","_inherits","_super","_createSuper","removeGroupControls","noop","controls","dragControls","subscribe","addListeners","PanGesture","apply","removePointerDownListener","pointerDownEvent","session","createPanHandlers","_this$node$getProps","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","px","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","resolved","getComputedStyle","getPropertyValue","trim","isCSSVariableToken","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","shadow","template","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","_React__default$Compo","_this$props","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","register","didUpdate","safeToRemove","setOptions","onExitComplete","globalProjectionState","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","MeasureLayout","_usePresence","context","useContext","PresenceContext","id","useId","useEffect","usePresence","_usePresence2","LayoutGroupContext","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","p","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","forEach","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","children","isDirty","child","sort","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","_toConsumableArray","registerPotentialNode","SubscriptionManager","subscriptionManager","_len","args","_key","notify","SVGElement","tagName","_this$options","mount","delete","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","onPlay","shouldReduceMotion","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","size","mountNodeEarly","clear","resetTransformStyle","notifyLayoutUpdate","flushSync","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","Boolean","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","_a","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","some","hasOpacityCrossfade","mixTargetDelta","to","mixAxisDelta","setTargetDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isMotionValue","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","styleProp","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","transformOrigin","scaleCorrectors","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","document","querySelector","round","DocumentProjectionNode","ref","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","shallowCompare","prevLength","isZeroValueString","test","testValueType","dimensionValueTypes","degrees","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","definition","custom","resolveVariantFromProps","getCurrent","setMotionValue","hasValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","isWillChangeMotionValue","optimizedAppearDataAttribute","camelToDash","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","resolve","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","valueTarget","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","HandoffAppearAnimations","hasAnimated","appearId","sortNodePosition","reversePriorityOrder","variantPriorityOrder","reverse","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","unmount","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","addHoverEvent","callbackName","HoverGesture","FocusGesture","isFocusVisible","matches","e","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps2","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","requestAnimationFrame","onViewportEnter","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","_viewport$fallback","threshold","isIntersecting","_this3$node$getProps","onViewportLeave","viewportFallback","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","inView","tap","focus","hover","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","isBrowser","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","assign","_objectDestructuringEmpty","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","featureDefinitions","numFeatures","propEventHandlers","numVariantProps","variantProps","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","baseTarget","initialValues","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","update","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","projectionId","initialLayoutGroupConfig","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","isEnabled","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","variants","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","HTMLVisualElement","_DOMVisualElement","defaultType","default","computedStyle","isCSSVariableName","buildHTMLStyles","childSubscription","textContent","renderHTML","SVGVisualElement","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","_get","_getPrototypeOf","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration","domMax"],"sourceRoot":""}