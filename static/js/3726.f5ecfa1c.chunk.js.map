{"version":3,"file":"static/js/3726.f5ecfa1c.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.js","components/custom-breadcrumbs/CustomBreadcrumbs.js","pages/dashboard/PermissionDeniedPage.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} to={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\r\n//\r\nimport LinkItem from './LinkItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\r\n    />\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\nimport { useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Card,\r\n  Container,\r\n  Typography,\r\n  CardHeader,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n} from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// components\r\nimport { useSettingsContext } from '../../components/settings';\r\nimport CustomBreadcrumbs from '../../components/custom-breadcrumbs';\r\n// auth\r\nimport RoleBasedGuard from '../../auth/RoleBasedGuard';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PermissionDeniedPage() {\r\n  const { themeStretch } = useSettingsContext();\r\n\r\n  const [role, setRole] = useState('admin');\r\n\r\n  const handleChangeRole = (event, newRole) => {\r\n    if (newRole !== null) {\r\n      setRole(newRole);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Other Cases: Permission Denied | Minimal UI</title>\r\n      </Helmet>\r\n\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <CustomBreadcrumbs\r\n          heading=\"Permission Denied\"\r\n          links={[\r\n            {\r\n              name: 'Dashboard',\r\n              href: PATH_DASHBOARD.root,\r\n            },\r\n            {\r\n              name: 'Permission Denied',\r\n            },\r\n          ]}\r\n        />\r\n\r\n        <ToggleButtonGroup\r\n          exclusive\r\n          value={role}\r\n          onChange={handleChangeRole}\r\n          color=\"primary\"\r\n          sx={{ mb: 5 }}\r\n        >\r\n          <ToggleButton value=\"admin\" aria-label=\"admin role\">\r\n            isAdmin\r\n          </ToggleButton>\r\n\r\n          <ToggleButton value=\"user\" aria-label=\"user role\">\r\n            isUser\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n\r\n        <RoleBasedGuard hasContent roles={[role]}>\r\n          <Box gap={3} display=\"grid\" gridTemplateColumns=\"repeat(2, 1fr)\">\r\n            {[...Array(8)].map((_, index) => (\r\n              <Card key={index}>\r\n                <CardHeader title={`Card ${index + 1}`} subheader=\"Proin viverra ligula\" />\r\n\r\n                <Typography sx={{ p: 3, color: 'text.secondary' }}>\r\n                  Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. In enim justo,\r\n                  rhoncus ut, imperdiet a, venenatis vitae, justo. Vestibulum fringilla pede sit\r\n                  amet augue.\r\n                </Typography>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </RoleBasedGuard>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n      slots = {},\n      slotProps = {}\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, otherProps, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, _extends({\n        as: slots.CollapsedIcon,\n        ownerState: ownerState\n      }, slotProps.collapsedIcon))\n    }))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n      children,\n      className,\n      component = 'nav',\n      slots = {},\n      slotProps = {},\n      expandText = 'Show path',\n      itemsAfterCollapse = 1,\n      itemsBeforeCollapse = 1,\n      maxItems = 8,\n      separator = '/'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n  return value === candidate;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      exclusive = false,\n      fullWidth = false,\n      onChange,\n      orientation = 'horizontal',\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n    onChange(event, newValue);\n  };\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n  const {\n      children,\n      className,\n      color = 'standard',\n      disabled = false,\n      disableFocusRipple = false,\n      fullWidth = false,\n      onChange,\n      onClick,\n      selected,\n      size = 'medium',\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes /* @typescript-to-proptypes-ignore */.any.isRequired\n} : void 0;\nexport default ToggleButton;"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","PermissionDeniedPage","themeStretch","useSettingsContext","_useState","useState","_useState2","_slicedToArray","role","setRole","Helmet","Container","maxWidth","PATH_DASHBOARD","ToggleButtonGroup","exclusive","value","onChange","event","newRole","ToggleButton","RoleBasedGuard","hasContent","roles","gap","gridTemplateColumns","_toConsumableArray","Array","_","index","Card","CardHeader","title","concat","subheader","p","createSvgIcon","d","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","props","_props$slots","slots","_props$slotProps","slotProps","otherProps","_objectWithoutPropertiesLoose","ownerState","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","overridesResolver","_defineProperty","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","push","React","inProps","ref","useThemeProps","_props$component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","_React$useState","_React$useState2","expanded","setExpanded","classes","composeClasses","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","filter","child","clsx","slice","BreadcrumbCollapsed","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","getCardHeaderUtilityClass","CardHeaderRoot","_extends2","cardHeaderClasses","CardHeaderAvatar","avatar","flex","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","_props$disableTypogra","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","getCardUtilityClass","CardRoot","Paper","overflow","_props$raised","raised","elevation","undefined","isValueSelected","candidate","isArray","indexOf","getToggleButtonGroupUtilityClass","ToggleButtonGroupRoot","toggleButtonGroupClasses","grouped","capitalize","orientation","vertical","fullWidth","_ref3","vars","shape","flexDirection","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderTop","_props$color","_props$disabled","_props$exclusive","_props$fullWidth","_props$orientation","_props$size","size","handleChange","buttonValue","newValue","splice","handleExclusiveChange","selected","getToggleButtonUtilityClass","ToggleButtonRoot","selectedColorChannel","selectedColor","text","primary","main","primaryChannel","mainChannel","button","border","divider","active","toggleButtonClasses","disabledBackground","textDecoration","hoverOpacity","alpha","selectedOpacity","fontSize","pxToRem","_props$disableFocusRi","disableFocusRipple","defaultPrevented"],"sourceRoot":""}