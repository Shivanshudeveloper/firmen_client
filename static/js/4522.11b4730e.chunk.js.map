{"version":3,"file":"static/js/4522.11b4730e.chunk.js","mappings":"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","sources":["pages/extra-pages/ProfileSettings.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Avatar,\r\n  FormControl,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n  InputLabel,\r\n  Button,\r\n} from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from 'src/App';\r\nimport { useRef } from 'react';\r\nimport { collection, firestore, storage, default as firebase, updatePassword } from 'src/Firebase';\r\nimport { useEffect } from 'react';\r\nimport { forEach } from 'lodash';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\n// import PhoneInput from 'react-phone-number-input';\r\n// import 'react-phone-number-input/style.css';\r\n\r\nconst country_list = [\r\n  'None',\r\n  'Afghanistan',\r\n  'Albania',\r\n  'Algeria',\r\n  'Andorra',\r\n  'Angola',\r\n  'Anguilla',\r\n  'Antigua &amp; Barbuda',\r\n  'Argentina',\r\n  'Armenia',\r\n  'Aruba',\r\n  'Australia',\r\n  'Austria',\r\n  'Azerbaijan',\r\n  'Bahamas',\r\n  'Bahrain',\r\n  'Bangladesh',\r\n  'Barbados',\r\n  'Belarus',\r\n  'Belgium',\r\n  'Belize',\r\n  'Benin',\r\n  'Bermuda',\r\n  'Bhutan',\r\n  'Bolivia',\r\n  'Bosnia &amp; Herzegovina',\r\n  'Botswana',\r\n  'Brazil',\r\n  'British Virgin Islands',\r\n  'Brunei',\r\n  'Bulgaria',\r\n  'Burkina Faso',\r\n  'Burundi',\r\n  'Cambodia',\r\n  'Cameroon',\r\n  'Cape Verde',\r\n  'Cayman Islands',\r\n  'Chad',\r\n  'Chile',\r\n  'China',\r\n  'Colombia',\r\n  'Congo',\r\n  'Cook Islands',\r\n  'Costa Rica',\r\n  'Cote D Ivoire',\r\n  'Croatia',\r\n  'Cruise Ship',\r\n  'Cuba',\r\n  'Cyprus',\r\n  'Czech Republic',\r\n  'Denmark',\r\n  'Djibouti',\r\n  'Dominica',\r\n  'Dominican Republic',\r\n  'Ecuador',\r\n  'Egypt',\r\n  'El Salvador',\r\n  'Equatorial Guinea',\r\n  'Estonia',\r\n  'Ethiopia',\r\n  'Falkland Islands',\r\n  'Faroe Islands',\r\n  'Fiji',\r\n  'Finland',\r\n  'France',\r\n  'French Polynesia',\r\n  'French West Indies',\r\n  'Gabon',\r\n  'Gambia',\r\n  'Georgia',\r\n  'Germany',\r\n  'Ghana',\r\n  'Gibraltar',\r\n  'Greece',\r\n  'Greenland',\r\n  'Grenada',\r\n  'Guam',\r\n  'Guatemala',\r\n  'Guernsey',\r\n  'Guinea',\r\n  'Guinea Bissau',\r\n  'Guyana',\r\n  'Haiti',\r\n  'Honduras',\r\n  'Hong Kong',\r\n  'Hungary',\r\n  'Iceland',\r\n  'India',\r\n  'Indonesia',\r\n  'Iran',\r\n  'Iraq',\r\n  'Ireland',\r\n  'Isle of Man',\r\n  'Israel',\r\n  'Italy',\r\n  'Jamaica',\r\n  'Japan',\r\n  'Jersey',\r\n  'Jordan',\r\n  'Kazakhstan',\r\n  'Kenya',\r\n  'Kuwait',\r\n  'Kyrgyz Republic',\r\n  'Laos',\r\n  'Latvia',\r\n  'Lebanon',\r\n  'Lesotho',\r\n  'Liberia',\r\n  'Libya',\r\n  'Liechtenstein',\r\n  'Lithuania',\r\n  'Luxembourg',\r\n  'Macau',\r\n  'Macedonia',\r\n  'Madagascar',\r\n  'Malawi',\r\n  'Malaysia',\r\n  'Maldives',\r\n  'Mali',\r\n  'Malta',\r\n  'Mauritania',\r\n  'Mauritius',\r\n  'Mexico',\r\n  'Moldova',\r\n  'Monaco',\r\n  'Mongolia',\r\n  'Montenegro',\r\n  'Montserrat',\r\n  'Morocco',\r\n  'Mozambique',\r\n  'Namibia',\r\n  'Nepal',\r\n  'Netherlands',\r\n  'Netherlands Antilles',\r\n  'New Caledonia',\r\n  'New Zealand',\r\n  'Nicaragua',\r\n  'Niger',\r\n  'Nigeria',\r\n  'Norway',\r\n  'Oman',\r\n  'Pakistan',\r\n  'Palestine',\r\n  'Panama',\r\n  'Papua New Guinea',\r\n  'Paraguay',\r\n  'Peru',\r\n  'Philippines',\r\n  'Poland',\r\n  'Portugal',\r\n  'Puerto Rico',\r\n  'Qatar',\r\n  'Reunion',\r\n  'Romania',\r\n  'Russia',\r\n  'Rwanda',\r\n  'Saint Pierre &amp; Miquelon',\r\n  'Samoa',\r\n  'San Marino',\r\n  'Satellite',\r\n  'Saudi Arabia',\r\n  'Senegal',\r\n  'Serbia',\r\n  'Seychelles',\r\n  'Sierra Leone',\r\n  'Singapore',\r\n  'Slovakia',\r\n  'Slovenia',\r\n  'South Africa',\r\n  'South Korea',\r\n  'Spain',\r\n  'Sri Lanka',\r\n  'St Kitts &amp; Nevis',\r\n  'St Lucia',\r\n  'St Vincent',\r\n  'St. Lucia',\r\n  'Sudan',\r\n  'Suriname',\r\n  'Swaziland',\r\n  'Sweden',\r\n  'Switzerland',\r\n  'Syria',\r\n  'Taiwan',\r\n  'Tajikistan',\r\n  'Tanzania',\r\n  'Thailand',\r\n  \"Timor L'Este\",\r\n  'Togo',\r\n  'Tonga',\r\n  'Trinidad &amp; Tobago',\r\n  'Tunisia',\r\n  'Turkey',\r\n  'Turkmenistan',\r\n  'Turks &amp; Caicos',\r\n  'Uganda',\r\n  'Ukraine',\r\n  'United Arab Emirates',\r\n  'United Kingdom',\r\n  'Uruguay',\r\n  'Uzbekistan',\r\n  'Venezuela',\r\n  'Vietnam',\r\n  'Virgin Islands (US)',\r\n  'Yemen',\r\n  'Zambia',\r\n  'Zimbabwe',\r\n];\r\n\r\nconst ProfileSettings = () => {\r\n  const { user } = useAuthContext();\r\n  const currUser = firebase.auth().currentUser;\r\n  const inputRef = useRef();\r\n  const [progress, setProgress] = useState(100);\r\n  const [profilePic, setProfilePic] = useState(null);\r\n  const [newProfile, setNewProfile] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNumber: '',\r\n    state: '',\r\n    country: '',\r\n  });\r\n\r\n  const handleChange = (field) => (e) => {\r\n    let value;\r\n    if (field === 'phoneNumber') value = e;\r\n    else value = e.target.value;\r\n    setNewProfile((prev) => {\r\n      return { ...prev, [field]: value };\r\n    });\r\n  };\r\n\r\n  const updateProfile = () => {\r\n    let displayName;\r\n    if (newProfile['firstName'] && newProfile['lastName'])\r\n      displayName = newProfile['firstName'] + ' ' + newProfile['lastName'];\r\n    else displayName = user.displayName;\r\n    delete newProfile.firstName;\r\n    delete newProfile.lastName;\r\n    newProfile.displayName = displayName;\r\n    Object.keys(newProfile).forEach((key) => {\r\n      if (newProfile[key] === '') {\r\n        newProfile[key] = user[key];\r\n      }\r\n    });\r\n    // let phoneNumber = newProfile.phoneNumber;\r\n    // delete newProfile.phoneNumber;\r\n\r\n    // const recaptchaVerifier = new firebase.auth.RecaptchaVerifier('reCaptcha', {\r\n    //     size: 'normal',\r\n    //     callback: (response) => {\r\n    //         const phoneProvider = new firebase.auth.PhoneAuthProvider();\r\n    //         phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier).then((id) => {\r\n    //             const code = window.prompt('Enter OTP:');\r\n    //             const cred = firebase.auth.PhoneAuthProvider.credential(id, code);\r\n    //             user.updatePhoneNumber(cred);\r\n    //         });\r\n    //     }\r\n    // });\r\n    // recaptchaVerifier.render();\r\n    currUser\r\n      .updateProfile({ displayName })\r\n      .then(() => {\r\n        // console.log('Profile Updated');\r\n        console.log(newProfile);\r\n        firestore\r\n          .collection(collection)\r\n          .doc(user.uid)\r\n          .update(newProfile)\r\n          .then(() => {\r\n            toast.success('Profile Updated', {\r\n              position: 'top-right',\r\n              autoClose: 5000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: true,\r\n              progress: undefined,\r\n            });\r\n            setNewProfile({\r\n              firstName: '',\r\n              lastName: '',\r\n              phoneNumber: '',\r\n              state: '',\r\n              country: '',\r\n            });\r\n            window.location.href = '/dashboard/profilesettings';\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleUpload = (files) => {\r\n    const file = files[0];\r\n    const fileName = new Date().getTime() + file.name;\r\n    const storageRef = storage.ref();\r\n    const uploadTask = storageRef.child(`/ProfilePictures/${fileName}`).put(file);\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {\r\n        const uploaded = Math.floor((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n        setProgress(uploaded);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n          currUser\r\n            .updateProfile({\r\n              photoURL: url,\r\n            })\r\n            .then(() => {\r\n              setProfilePic(url);\r\n              firestore.collection(collection).doc(user.uid).update({ photoURL: url });\r\n              // .then((res) => console.log('firestore db updated'));\r\n            })\r\n            .catch((err) => console.log(err));\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    setNewProfile((prev) => ({\r\n      ...prev,\r\n      country: user.firestore.country || 'None',\r\n      state: user.firestore.state || 'None',\r\n    }));\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h2\">Profile</Typography>\r\n      {user && (\r\n        <Grid container sx={{ marginTop: 6 }}>\r\n          <Grid item xs={4} sx={{ padding: 2 }}>\r\n            <center>\r\n              <Avatar\r\n                alt=\"profile user\"\r\n                src={profilePic ? profilePic : user.photoURL}\r\n                sx={{ width: 100, height: 100 }}\r\n              />\r\n              {progress === 100 ? (\r\n                <Typography\r\n                  variant=\"p\"\r\n                  sx={{\r\n                    color: 'blue',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onClick={(e) => {\r\n                    inputRef.current.click();\r\n                  }}\r\n                >\r\n                  <input\r\n                    style={{ display: 'none' }}\r\n                    type=\"file\"\r\n                    ref={inputRef}\r\n                    onChange={(e) => {\r\n                      handleUpload(e.target.files);\r\n                    }}\r\n                    value={user.profilePic}\r\n                  />\r\n                  Update Picture\r\n                </Typography>\r\n              ) : (\r\n                <>Uploading: {progress}%</>\r\n              )}\r\n              <br />\r\n              <br />\r\n              <Typography variant=\"h5\">{user.displayName}</Typography>\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <div style={{ width: '50%' }}>\r\n                <Typography variant=\"p\">\r\n                  First Name <span style={{ color: 'red' }}>*</span>\r\n                </Typography>\r\n                <TextField\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  placeholder={user.displayName.split(' ')[0]}\r\n                  fullWidth\r\n                  value={newProfile.firstName}\r\n                  onChange={handleChange('firstName')}\r\n                />\r\n              </div>\r\n              <div style={{ width: '50%' }}>\r\n                <Typography variant=\"p\">\r\n                  Last Name <span style={{ color: 'red' }}>*</span>\r\n                </Typography>\r\n                <TextField\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  placeholder={user.displayName.split(' ')[1]}\r\n                  fullWidth\r\n                  value={newProfile.lastName}\r\n                  onChange={handleChange('lastName')}\r\n                />\r\n              </div>\r\n            </Stack>\r\n            <br />\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <div style={{ width: '100%' }}>\r\n                <Typography variant=\"p\">Email Address</Typography>\r\n                <TextField type=\"text\" variant=\"outlined\" value={user.email} fullWidth disabled />\r\n              </div>\r\n              {/* <div style={{ width: '50%' }}>\r\n                                <Typography variant=\"p\">Phone Number</Typography>\r\n                                <PhoneInput\r\n                                    defaultCountry=\"IN\"\r\n                                    value={newProfile.phoneNumber}\r\n                                    placeholder={user.phoneNumber}\r\n                                    onChange={handleChange('phoneNumber')}\r\n                                />\r\n                                <div\r\n                                    id=\"reCaptcha\"\r\n                                    style={{ marginTop: '16px' }}\r\n                                ></div>\r\n                            </div> */}\r\n            </Stack>\r\n            <br />\r\n            {/* <Stack direction=\"row\" spacing={2}>\r\n                <div style={{ width: '50%' }}>\r\n                    <Typography variant=\"p\">\r\n                        State <span style={{ color: 'red' }}>*</span>\r\n                    </Typography>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={newProfile.state}\r\n                        onChange={handleChange('state')}\r\n                    />\r\n                </div>\r\n                <div style={{ width: '50%' }}>\r\n                    <Typography variant=\"p\">Country</Typography>\r\n                    <br />\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n                        <Select fullWidth id=\"demo-simple-select\" value={newProfile.country} onChange={handleChange('country')}>\r\n                            {country_list.map((country, index) => (\r\n                                <MenuItem key={index + country} value={country}>\r\n                                    {country}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </Stack> */}\r\n            <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={2}>\r\n              <Button\r\n                id=\"password-button\"\r\n                variant=\"contained\"\r\n                sx={{ float: 'right' }}\r\n                onClick={() => {\r\n                  updatePassword(user.email)\r\n                    .then(() => {\r\n                      toast.success('Email sent');\r\n                    })\r\n                    .catch((error) => {\r\n                      var errorCode = error.code;\r\n                      var errorMessage = error.message;\r\n                      toast.error(errorMessage);\r\n                    });\r\n                }}\r\n              >\r\n                Send password reset email\r\n              </Button>\r\n              <Button\r\n                id=\"submit-button\"\r\n                variant=\"contained\"\r\n                sx={{ float: 'right' }}\r\n                onClick={updateProfile}\r\n              >\r\n                Save Details\r\n              </Button>\r\n            </Stack>\r\n            {/* <br />\r\n            <br />\r\n            <br />\r\n            <hr />\r\n            <br />\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <div style={{ width: '80%' }}>\r\n                <Typography variant=\"p\">Update Password</Typography>\r\n                <TextField\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <Button\r\n                id=\"password-button\"\r\n                variant=\"contained\"\r\n                sx={{ float: 'right', alignSelf: \"flex-end\" }}\r\n                onClick={updatePassword}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Stack> */}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n    // <>Hello</>\r\n  );\r\n};\r\n\r\nexport default ProfileSettings;\r\n"],"names":["user","useAuthContext","currUser","firebase","currentUser","inputRef","useRef","_useState","useState","_useState2","_slicedToArray","progress","setProgress","_useState3","_useState4","profilePic","setProfilePic","_useState5","firstName","lastName","phoneNumber","state","country","_useState6","newProfile","setNewProfile","handleChange","field","e","value","target","prev","_objectSpread","_defineProperty","useEffect","firestore","_jsxs","_Fragment","children","_jsx","Typography","variant","Grid","container","sx","marginTop","item","xs","padding","Avatar","alt","src","photoURL","width","height","color","cursor","onClick","current","click","style","display","type","ref","onChange","files","file","fileName","Date","getTime","name","uploadTask","storage","child","concat","put","on","snapshot","uploaded","Math","floor","bytesTransferred","totalBytes","error","console","log","getDownloadURL","then","url","updateProfile","collection","doc","uid","update","catch","err","handleUpload","displayName","Stack","direction","spacing","TextField","placeholder","split","fullWidth","email","disabled","justifyContent","Button","id","float","updatePassword","toast","code","errorMessage","message","Object","keys","forEach","key","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","undefined","window","location","href"],"sourceRoot":""}