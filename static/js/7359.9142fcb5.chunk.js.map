{"version":3,"file":"static/js/7359.9142fcb5.chunk.js","mappings":"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","sources":["pages/extra-pages/Home.js","pages/extra-pages/TextEditor.js","../node_modules/suneditor/src/lang|D:/work/projects/company_management-saas/client3/node_modules/suneditor/src/lang|sync|/^/.*/.js$"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Tooltip,\r\n  Container,\r\n  IconButton,\r\n  DialogContent,\r\n  Stack,\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n} from '@mui/material';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n// import { Editor } from '@tinymce/tinymce-react';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nimport { SearchOutlined } from '@mui/icons-material';\r\nimport GroupsOutlinedIcon from '@mui/icons-material/GroupsOutlined';\r\n\r\n// project import\r\nimport { Box, InputAdornment, ListItemButton } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from 'src/App';\r\nimport axios from 'axios';\r\nimport { apiBaseURL } from 'src/config-global';\r\nimport { DialogActions, DialogContentText, DialogTitle } from '@mui/material';\r\nimport parse from 'html-react-parser';\r\nimport DOMPurify from 'dompurify';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\nimport { PATH_DASHBOARD } from 'src/routes/paths';\r\nimport { useNavigate } from 'react-router';\r\nimport TextEditor from './TextEditor';\r\nimport { toast } from 'react-toastify';\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\n// parse HTML string\r\nconst htmlFrom = (htmlString) => {\r\n  const cleanHtmlString = DOMPurify.sanitize(htmlString, { USE_PROFILES: { html: true } });\r\n  const html = parse(cleanHtmlString);\r\n  return html;\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map((value) =>\r\n    React.cloneElement(element, {\r\n      key: value,\r\n    })\r\n  );\r\n}\r\n\r\n// const cardClass = { position: 'sticky', top: '0px', backgroundColor: 'white', zIndex: '5' };\r\nconst elevatedRoles = ['itadmin', 'admin'];\r\n\r\nconst Library = () => {\r\n  const { user } = useAuthContext();\r\n  const navigate = useNavigate();\r\n\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  const greetings = ['Morning', 'Afternoon', 'Evening'];\r\n  const date = new Date();\r\n  const hour = date.getHours();\r\n  const greetingIndex = hour <= 12 ? 0 : hour <= 17 ? 1 : 2;\r\n  const today = `${days[date.getDay()]}, ${months[date.getMonth()]} ${date.getDate()}`;\r\n\r\n  const [dialogTitle, setDialogTitle] = useState('');\r\n\r\n  const services = ['news', 'blog', 'policy'];\r\n  const serviceObject = {};\r\n  services.forEach((service) => (serviceObject[service] = []));\r\n  const [data, setData] = useState(serviceObject);\r\n\r\n  const [allServiceData, setAllServiceData] = useState([]);\r\n\r\n  const refreshServiceData = (currService) => {\r\n    const limit = 5;\r\n    const adminId = '';\r\n    services.forEach((service) => {\r\n      axios\r\n        .get(`${apiBaseURL}/services/${service}/${user.company}?adminId=${adminId}&limit=${limit}`)\r\n        .then((res) => {\r\n          setData((prev) => {\r\n            return { ...prev, [service]: res.data };\r\n          });\r\n        });\r\n    });\r\n\r\n    axios\r\n      .get(`${apiBaseURL}/services/${currService}/${user.company}?adminId=${adminId}&limit=${limit}`)\r\n      .then((res) => {\r\n        setAllServiceData(res.data);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    fetchProjects();\r\n    const limit = 5;\r\n    // const adminId = user.firestore.role === 'admin' ? user.uid : '';\r\n    const adminId = '';\r\n    services.forEach((service) => {\r\n      axios\r\n        .get(`${apiBaseURL}/services/${service}/${user.company}?adminId=${adminId}&limit=${limit}`)\r\n        .then((res) => {\r\n          setData((prev) => {\r\n            return { ...prev, [service]: res.data };\r\n          });\r\n        });\r\n    });\r\n  }, [user]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [dialogData, setDialogData] = React.useState(null);\r\n  const handleServicesDialog = (data, service) => {\r\n    setOpen(true);\r\n    data['content'] = service;\r\n    setDialogData(data);\r\n  };\r\n\r\n  const allData = (service) => {\r\n    setOpen(true);\r\n    const limit = '';\r\n    const adminId = user.firestore.role === 'admin' ? user.uid : '';\r\n    axios\r\n      .get(`${apiBaseURL}/services/${service}/${user.company}?adminId=${adminId}&limit=${limit}`)\r\n      .then((res) => {\r\n        setAllServiceData(res.data);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setAllServiceData([]);\r\n  };\r\n\r\n  const [prevState, setPrevState] = useState({\r\n    service: null,\r\n  });\r\n\r\n  //project feed\r\n  const [projects, setProjects] = useState([]);\r\n  const fetchProjects = async () => {\r\n    if (elevatedRoles.includes(user.role)) {\r\n      // fetch all projects in company if admin/itadmin\r\n      axios.get(`${apiBaseURL}/project/${user.company}`).then((res) => {\r\n        setProjects(res.data);\r\n      });\r\n    } else {\r\n      // fetch manager's projects\r\n      if (user.role === 'manager') {\r\n        axios.get(`${apiBaseURL}/project/${user.company}?managerId=${user.email}`).then((res) => {\r\n          setProjects(res.data);\r\n        });\r\n      } else {\r\n        // fetch employee's projects\r\n        const managers = user.firestore.projects;\r\n        if (!managers) return;\r\n        setProjects([]);\r\n        managers.map((managerId) => {\r\n          axios.get(`${apiBaseURL}/project/${user.company}?managerId=${managerId}`).then((res) => {\r\n            setProjects((prev) => [...prev, ...res.data]);\r\n          });\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const [updateService, setUpdateService] = useState(null)\r\n  \r\n  const closeServiceUpdateDialog = () => {\r\n    localStorage.removeItem(updateService.service);\r\n    setUpdateService(null)\r\n  }\r\n\r\n  const handleServicesInput = async (service) => {\r\n    const payload = {\r\n      subject: updateService.subject,\r\n      [service]: updateService[`${service}Ans`],\r\n    };\r\n    // console.log(payload)\r\n    try {\r\n      const res = await axios.patch(`${apiBaseURL}/services/${service}/${updateService._id}`, {payload});\r\n      // localStorage.removeItem(service);\r\n      // setInputState((prev) => {\r\n      //   return { ...prev, [`${service}Sub`]: '', [`${service}Ans`]: '' };\r\n      // });\r\n      if (res.data === 1) {\r\n        toast.success(`${service} updated`);\r\n        refreshServiceData(service)\r\n        closeServiceUpdateDialog()\r\n      }\r\n    } catch (error) {\r\n      toast.error('Error, try again !');\r\n    }\r\n  };\r\n\r\n  const handleRTEInput = (service) => (value) => {\r\n    setUpdateService(prev => ({...prev, [`${service}Ans`]: value}))\r\n  }\r\n\r\n  const deleteService = (id, index) => async (e) => {\r\n    e.stopPropagation();\r\n    const service = dialogTitle\r\n    const res = await axios.delete(`${apiBaseURL}/services/${service}/${id}`);\r\n    if (res.data === 1) {\r\n        refreshServiceData(service)\r\n    }\r\n};\r\n\r\n  return (\r\n    <>\r\n      {/* <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            <Grid item xs={12}>\r\n                <Typography sx={{ float: 'left' }} variant=\"h3\">Library</Typography>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<AddIcon />}\r\n                    onClick={handleClickOpen}\r\n                    sx={{ float: 'right' }}\r\n                >\r\n                    Write a new article\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"sm\" >\r\n                    {\r\n                        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                            return (\r\n                                <Card variant=\"outlined\" sx={{ mb: 2 }} >\r\n                                    <CardContent>\r\n                                        <Typography sx={{ float: 'right', color: 'gray' }} variant=\"subtitle2\" >\r\n                                            Dec, 22 2022\r\n                                        </Typography>\r\n                                        <a\r\n                                            style={{ textDecoration: 'none' }}\r\n                                            href=\"/dashboard/viewarticle\"\r\n                                        >\r\n                                            <Typography sx={{ float: 'left' }}  variant=\"h4\" >\r\n                                                Test Topic {item}\r\n                                            </Typography>\r\n                                        </a>\r\n                                        <br />\r\n                                        <br />\r\n                                        <Typography variant=\"p\" >\r\n                                            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum...\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions sx={{ float: 'right' }} >\r\n                                        <Tooltip title=\"Delete Department\" >\r\n                                            <IconButton color=\"error\" aria-label=\"upload picture\" component=\"label\">\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </Container>\r\n            </Grid>\r\n        </Grid> */}\r\n\r\n      <Dialog open={open} onClose={handleClose} scroll=\"paper\" fullWidth maxWidth=\"lg\">\r\n        {dialogTitle === 'detailed info' ? (\r\n          <>\r\n            {dialogData && (\r\n              <>\r\n                <DialogTitle id=\"scroll-dialog-title\">\r\n                  <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                    <div>{dialogData.subject}</div>\r\n                    <div>\r\n                      <Typography variant=\"overline\">\r\n                        Published: {new Date(dialogData.createdOn).toDateString()}\r\n                      </Typography>\r\n                    </div>\r\n                  </Stack>\r\n                </DialogTitle>\r\n                <DialogContent dividers={true} sx={{ height: '600px' }}>\r\n                  <div id=\"scroll-dialog-description\">\r\n                    {htmlFrom(dialogData[dialogData.content])}\r\n                  </div>\r\n                </DialogContent>\r\n              </>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {dialogTitle && allServiceData && (\r\n              <>\r\n                <DialogTitle id=\"scroll-dialog-title\">\r\n                  All {dialogTitle.charAt(0).toUpperCase() + dialogTitle.slice(1)}\r\n                </DialogTitle>\r\n                <DialogContent dividers={true} sx={{ height: '600px' }}>\r\n                  <List sx={{ p: '0px' }}>\r\n                    {allServiceData.length !== 0\r\n                      ? allServiceData.map((item, index) => (\r\n                          <>\r\n                            <ListItemButton\r\n                              key={index}\r\n                              alignItems=\"flex-start\"\r\n                              sx={{ p: '0px' }}\r\n                              onClick={() => {\r\n                                setPrevState({\r\n                                  service: dialogTitle,\r\n                                });\r\n                                setDialogTitle('detailed info');\r\n                                handleServicesDialog(item, dialogTitle);\r\n                              }}\r\n                            >\r\n                              <ListItemText\r\n                                primaryTypographyProps={{\r\n                                  overflow: 'clip',\r\n                                  padding: '8px',\r\n                                }}\r\n                                secondaryTypographyProps={{\r\n                                  overflow: 'clip',\r\n                                }}\r\n                                primary={\r\n                                  item.subject.slice(0, 50) +\r\n                                  (item.subject.length > 50 ? '....' : '')\r\n                                }\r\n                                //   secondary={\r\n                                //       item[dialogTitle].slice(0, 50) +\r\n                                //       (item[dialogTitle].length > 50 ? '....' : '')\r\n                                //   }\r\n                              />\r\n                              {elevatedRoles.includes(user.role) && (\r\n                                <ListItemSecondaryAction>\r\n                                  <Stack direction=\"row\" spacing={2} alignItems=\"flex-end\">\r\n                                      <IconButton\r\n                                        onClick={(e) => {\r\n                                          e.stopPropagation()\r\n                                          const item_copy = {...item}\r\n                                          item_copy.service = dialogTitle\r\n                                          item_copy[`${dialogTitle}Ans`] = item[dialogTitle]\r\n                                          // console.log(item_copy)\r\n                                          setUpdateService(item_copy)\r\n                                          handleClose()\r\n                                        }}\r\n                                        color=\"info\"\r\n                                        component=\"label\"\r\n                                      >\r\n                                        <EditIcon />\r\n                                      </IconButton>\r\n                                      <IconButton\r\n                                        onClick={deleteService(item?._id, index)}\r\n                                        color=\"error\"\r\n                                        component=\"label\"\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                  </Stack>\r\n                                </ListItemSecondaryAction>\r\n                              )}\r\n                            </ListItemButton>\r\n                            <Divider component=\"li\" />\r\n                          </>\r\n                        ))\r\n                      : null}\r\n                  </List>\r\n                </DialogContent>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        <DialogActions>\r\n          {prevState.service && (\r\n            <Button\r\n              onClick={() => {\r\n                setDialogTitle(prevState.service);\r\n                setPrevState((prev) => ({\r\n                  ...prev,\r\n                  service: null,\r\n                }));\r\n              }}\r\n            >\r\n              Back\r\n            </Button>\r\n          )}\r\n          <Button onClick={handleClose}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n                maxWidth=\"lg\"\r\n                fullWidth\r\n                fullScreen\r\n                open={updateService}\r\n                onClose={closeServiceUpdateDialog}\r\n                // PaperProps={{\r\n                //     style: {\r\n                //         maxHeight: '75vh',\r\n                //         overflowY: 'auto'\r\n                //     }\r\n                // }}\r\n                scroll=\"paper\"\r\n            >\r\n                <DialogTitle>Edit {updateService?.service}</DialogTitle>\r\n                <DialogContent>\r\n                  {updateService && <Stack spacing={2} m={'auto'}>\r\n                    <div>\r\n                      <Typography variant=\"p\">\r\n                        Subject\r\n                      </Typography>\r\n                      <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={updateService.subject}\r\n                        onChange={(e) => {\r\n                          setUpdateService((prev) => {\r\n                            return { ...prev, subject: e.target.value };\r\n                          });\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Typography variant=\"p\">{updateService.service.charAt(0).toUpperCase() + updateService.service.slice(1)}</Typography>\r\n                      <TextEditor\r\n                        id={updateService.service}\r\n                        value={updateService}\r\n                        setValue={handleRTEInput(updateService.service)}\r\n                      />\r\n                    </div>\r\n                  </Stack>}\r\n                  <br />\r\n                  <br />\r\n                  <Button sx={{ mr: 2 }} onClick={closeServiceUpdateDialog}>Close</Button>\r\n                      <Button\r\n                        // startIcon={<AddIcon />}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          handleServicesInput(updateService?.service);\r\n                        }}\r\n                      >\r\n                      Update {updateService?.service}\r\n                    </Button>\r\n                </DialogContent>\r\n                \r\n                {/* <DialogActions>\r\n                  <Button onClick={closeServiceUpdateDialog}>Close</Button>\r\n                      <Button\r\n                        // startIcon={<AddIcon />}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          handleServicesInput(updateService?.service);\r\n                        }}\r\n                      >\r\n                      Update {updateService?.service}\r\n                    </Button>\r\n                </DialogActions> */}\r\n            </Dialog>\r\n      \r\n        {user && (\r\n          <Typography variant='h4' >\r\n            Good {greetings[greetingIndex]}, {user.displayName}\r\n          </Typography>\r\n        )}\r\n\r\n      <Grid container colspacing={2}>\r\n        <Grid item xs={2.5}>\r\n        {/* <Grid item xs={12}> */}\r\n          <Typography>{today}</Typography>\r\n        </Grid>\r\n        <Grid item xs p={2}>\r\n          <Grid container spacing={2}>\r\n            {services.map((service) => (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Card variant=\"outlined\" sx={{ height: '300px' }}>\r\n                  <CardContent>\r\n                    <Typography\r\n                      fullWidth\r\n                      sx={{ cursor: 'pointer' }}\r\n                      onMouseOver={(e) => {\r\n                        e.target.style.textDecoration = 'underline';\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.target.style.textDecoration = '';\r\n                      }}\r\n                      color=\"primary\"\r\n                      onClick={(e) => {\r\n                        setDialogTitle(service);\r\n                        allData(service);\r\n                      }}\r\n                    >\r\n                      {service.charAt(0).toUpperCase() + service.slice(1)}\r\n                    </Typography>\r\n                    <hr />\r\n                    <List sx={{ p: '0px' }}>\r\n                      {data[service].length !== 0\r\n                        ? data[service].map((item) => (\r\n                            <>\r\n                              <ListItemButton\r\n                                alignItems=\"flex-start\"\r\n                                sx={{ p: '0px' }}\r\n                                onClick={() => {\r\n                                  setDialogTitle('detailed info');\r\n                                  handleServicesDialog(item, service);\r\n                                }}\r\n                              >\r\n                                <ListItemText\r\n                                  primaryTypographyProps={{\r\n                                    overflow: 'clip',\r\n                                    padding: '8px',\r\n                                  }}\r\n                                  secondaryTypographyProps={{\r\n                                    overflow: 'clip',\r\n                                  }}\r\n                                  primary={\r\n                                    item.subject.slice(0, 30) +\r\n                                    (item.subject.length > 30 ? '....' : '')\r\n                                  }\r\n                                  //   secondary={\r\n                                  //       item[service].slice(0, 30) + (item[service].length > 30 ? '....' : '')\r\n                                  //   }\r\n                                />\r\n                              </ListItemButton>\r\n                              <Divider component=\"li\" />\r\n                            </>\r\n                          ))\r\n                        : null}\r\n                    </List>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <br />\r\n          <br />\r\n          <Typography variant=\"h4\">Project Feeds</Typography>\r\n          <List>\r\n          <ListItemButton\r\n              divider>\r\n              <Grid container>\r\n                <Grid item xs={4}>\r\n                  <Stack direction=\"row\">\r\n                    <ListItemText primary=\"Project Name\"secondary=\" \" />\r\n                  </Stack>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <Stack direction=\"row\">\r\n                    <ListItemText primary=\"Assignee\" />\r\n                  </Stack>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Stack direction=\"row\">\r\n                    <ListItemText primary=\"Last Activity\" />\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n            </ListItemButton>\r\n\r\n\r\n\r\n            {projects &&\r\n              projects.map((project, index) => {\r\n                if (index >= 8) return;\r\n                return (\r\n                  <ListItemButton\r\n                    divider\r\n                    onClick={() => {\r\n                      navigate(\r\n                        `${PATH_DASHBOARD.general.projectview}?id=${project._id}&title=${project.name}`\r\n                      );\r\n                    }}\r\n                  >\r\n                    <Grid container>\r\n                      <Grid item xs={4}>\r\n                        <Stack direction=\"row\">\r\n                          <ListItemIcon>\r\n                            <GroupsOutlinedIcon />\r\n                          </ListItemIcon>\r\n                          &nbsp;&nbsp;&nbsp;\r\n                          <ListItemText primary={project.name} secondary={project.desc} />\r\n                        </Stack>\r\n                      </Grid>\r\n                      <Grid item xs={5}>\r\n                        <Stack direction=\"row\">\r\n                          <ListItemIcon>\r\n                            <GroupsOutlinedIcon />\r\n                          </ListItemIcon>\r\n                          &nbsp;&nbsp;&nbsp;\r\n                          <ListItemText primary={project.managerId} />\r\n                        </Stack>\r\n                      </Grid>\r\n                      <Grid item xs={3}>\r\n                        <Stack direction=\"row\">\r\n                          <ListItemIcon>\r\n                            <GroupsOutlinedIcon />\r\n                          </ListItemIcon>\r\n                          &nbsp;&nbsp;&nbsp;\r\n                          <ListItemText primary={new Date(project.createdOn).toLocaleString()} />\r\n                        </Stack>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </ListItemButton>\r\n                );\r\n              })}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\nimport {\r\n    align,\r\n    font,\r\n    fontColor,\r\n    fontSize,\r\n    formatBlock,\r\n    hiliteColor,\r\n    horizontalRule,\r\n    lineHeight,\r\n    list,\r\n    paragraphStyle,\r\n    table,\r\n    template,\r\n    textStyle,\r\n    image,\r\n    link,\r\n    fullScreen\r\n} from 'suneditor/src/plugins';\r\n\r\nconst TextEditor = ({ id, value, setValue }) => {\r\n\r\n    return (\r\n        <SunEditor\r\n            id={id}\r\n            autoFocus={true}\r\n            lang=\"en\"\r\n            setOptions={{\r\n                showPathLabel: false,\r\n                minHeight: '50vh',\r\n                maxHeight: '50vh',\r\n                placeholder: 'Enter your text here ...',\r\n                plugins: [\r\n                    align,\r\n                    font,\r\n                    fontColor,\r\n                    fontSize,\r\n                    formatBlock,\r\n                    hiliteColor,\r\n                    horizontalRule,\r\n                    lineHeight,\r\n                    list,\r\n                    paragraphStyle,\r\n                    table,\r\n                    template,\r\n                    textStyle,\r\n                    image,\r\n                    link\r\n                ],\r\n                buttonList: [\r\n                    ['undo', 'redo'],\r\n                    ['font', 'fontSize', 'formatBlock'],\r\n                    ['paragraphStyle'],\r\n                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                    ['fontColor', 'hiliteColor'],\r\n                    ['removeFormat'],\r\n                    '/', // Line break\r\n                    ['outdent', 'indent'],\r\n                    ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                    ['table', 'link', 'image'],\r\n                    ['fullScreen']\r\n                ],\r\n                formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n                font: [\r\n                    'Arial',\r\n                    'Calibri',\r\n                    'Comic Sans',\r\n                    'Courier',\r\n                    'Garamond',\r\n                    'Georgia',\r\n                    'Impact',\r\n                    'Lucida Console',\r\n                    'Palatino Linotype',\r\n                    'Segoe UI',\r\n                    'Tahoma',\r\n                    'Times New Roman',\r\n                    'Trebuchet MS'\r\n                ]\r\n            }}\r\n            setDefaultStyle=\"font-family: Arial; font-size: 16px;\"\r\n            setContents={localStorage.getItem(id) || value[`${id}Ans`]}\r\n            value={value[`${id}Ans`]}\r\n            onChange={(value) => {\r\n                setValue(value);\r\n                localStorage.setItem(id, value);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default TextEditor;\r\n","var map = {\n\t\"./ckb.js\": 82871,\n\t\"./da.js\": 59651,\n\t\"./de.js\": 64639,\n\t\"./en.js\": 75213,\n\t\"./es.js\": 47068,\n\t\"./fr.js\": 78488,\n\t\"./he.js\": 93179,\n\t\"./index.js\": 87488,\n\t\"./it.js\": 63577,\n\t\"./ja.js\": 10916,\n\t\"./ko.js\": 19920,\n\t\"./lv.js\": 39985,\n\t\"./nl.js\": 14076,\n\t\"./pl.js\": 71676,\n\t\"./pt_br.js\": 3204,\n\t\"./ro.js\": 59575,\n\t\"./ru.js\": 70123,\n\t\"./se.js\": 52372,\n\t\"./ua.js\": 63854,\n\t\"./zh_cn.js\": 79602\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97699;"],"names":["htmlFrom","htmlString","cleanHtmlString","DOMPurify","USE_PROFILES","html","parse","elevatedRoles","user","useAuthContext","navigate","useNavigate","date","Date","hour","getHours","greetingIndex","today","concat","getDay","getMonth","getDate","_useState","useState","_useState2","_slicedToArray","dialogTitle","setDialogTitle","services","serviceObject","forEach","service","_useState3","_useState4","data","setData","_useState5","_useState6","allServiceData","setAllServiceData","refreshServiceData","currService","axios","apiBaseURL","company","then","res","prev","_objectSpread","_defineProperty","useEffect","fetchProjects","_React$useState","React","_React$useState2","open","setOpen","_React$useState3","_React$useState4","dialogData","setDialogData","handleServicesDialog","handleClose","_useState7","_useState8","prevState","setPrevState","_useState9","_useState10","projects","setProjects","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","managers","wrap","_context","next","includes","role","email","firestore","abrupt","map","managerId","_toConsumableArray","stop","apply","arguments","_useState11","_useState12","updateService","setUpdateService","closeServiceUpdateDialog","localStorage","removeItem","handleServicesInput","_ref2","_callee2","payload","_context2","subject","_id","sent","toast","t0","_x","_jsxs","_Fragment","children","Dialog","onClose","scroll","fullWidth","maxWidth","_jsx","DialogTitle","id","Stack","direction","justifyContent","Typography","variant","createdOn","toDateString","DialogContent","dividers","sx","height","content","charAt","toUpperCase","slice","List","p","length","item","index","ListItemButton","alignItems","onClick","ListItemText","primaryTypographyProps","overflow","padding","secondaryTypographyProps","primary","ListItemSecondaryAction","spacing","IconButton","e","stopPropagation","item_copy","color","component","EditIcon","_ref3","_callee3","_context3","_x2","DeleteIcon","Divider","DialogActions","Button","fullScreen","m","TextField","type","value","onChange","target","TextEditor","setValue","mr","displayName","Grid","container","colspacing","xs","sm","md","Card","CardContent","cursor","onMouseOver","style","textDecoration","onMouseLeave","adminId","uid","allData","divider","secondary","project","PATH_DASHBOARD","name","ListItemIcon","GroupsOutlinedIcon","desc","toLocaleString","SunEditor","autoFocus","lang","setOptions","showPathLabel","minHeight","maxHeight","placeholder","plugins","align","font","fontColor","fontSize","formatBlock","hiliteColor","horizontalRule","lineHeight","list","paragraphStyle","table","template","textStyle","image","link","buttonList","formats","setDefaultStyle","setContents","getItem","setItem","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}