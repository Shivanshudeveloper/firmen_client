{"version":3,"file":"static/js/9819.1ab81426.chunk.js","mappings":"8KA8JA,UAhIgB,WAYZ,OAgHIA,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAE,SAEV,C","sources":["pages/extra-pages/Library.js"],"sourcesContent":["import React from 'react';\r\n// import { Grid, Typography, Tooltip, Container, IconButton, DialogContent, Stack } from '@mui/material';\r\n// import Card from '@mui/material/Card';\r\n// import CardActions from '@mui/material/CardActions';\r\n// import CardContent from '@mui/material/CardContent';\r\n// import Button from '@mui/material/Button';\r\n// import DeleteIcon from '@mui/icons-material/Delete';\r\n// import AddIcon from '@mui/icons-material/Add';\r\n// import { Editor } from '@tinymce/tinymce-react';\r\n\r\n// import Dialog from '@mui/material/Dialog';\r\n// import ListItemText from '@mui/material/ListItemText';\r\n// import ListItem from '@mui/material/ListItem';\r\n// import List from '@mui/material/List';\r\n// import Divider from '@mui/material/Divider';\r\n// import AppBar from '@mui/material/AppBar';\r\n// import Toolbar from '@mui/material/Toolbar';\r\n// import CloseIcon from '@mui/icons-material/Close';\r\n// import Slide from '@mui/material/Slide';\r\n\r\n// project import\r\n// import MainCard from 'components/MainCard';\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\n\r\n// const Transition = React.forwardRef(function Transition(props, ref) {\r\n//     return <Slide direction=\"left\" ref={ref} {...props} />;\r\n// });\r\n\r\nconst Library = () => {\r\n    // const [open, setOpen] = React.useState(false);\r\n    // const [text, setText] = React.useState('');\r\n    // const [task, settask] = React.useState('');\r\n\r\n    // const handleClickOpen = () => {\r\n    //     setOpen(true);\r\n    // };\r\n    // const handleClose = () => {\r\n    //     setOpen(false);\r\n    // };\r\n\r\n    return (\r\n        // <>\r\n        // <Dialog\r\n        //     fullScreen\r\n        //     open={open}\r\n        //     onClose={handleClose}\r\n        //     TransitionComponent={Transition}\r\n        // >\r\n        //     <DialogContent>\r\n        //         <Editor\r\n        //             apiKey='azhogyuiz16q8om0wns0u816tu8k6517f6oqgs5mfl36hptu'\r\n        //             value={task}\r\n        //             onInit={(evt, editor) => {\r\n        //                 setText(editor.getContent({ format: 'text' }));\r\n        //             }}\r\n        //             onEditorChange={(newValue, editor) => {\r\n        //                 settask(newValue);\r\n        //                 setText(editor.getContent({ format: 'text' }));\r\n        //             }}\r\n        //             init={{\r\n        //                 height: 700,\r\n        //                 menubar: false,\r\n        //                 plugins: [\r\n        //                     'advlist', 'autolink', 'lists', 'link', 'image', 'charmap',\r\n        //                     'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\r\n        //                     'insertdatetime', 'media', 'table', 'preview', 'help', 'wordcount'\r\n        //                 ],\r\n        //                 toolbar: 'undo redo | blocks | ' +\r\n        //                     'bold italic forecolor | alignleft aligncenter ' +\r\n        //                     'alignright alignjustify | bullist numlist outdent indent | ' +\r\n        //                     'removeformat | help',\r\n        //                 content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n        //             }}\r\n        //         />\r\n        //         <Stack\r\n        //             direction=\"row\"\r\n        //             spacing={2}\r\n        //             sx={{ mt: 2 }}\r\n        //             justifyContent=\"flex-end\"\r\n        //         >\r\n        //             <Button \r\n        //                 onClick={handleClose}\r\n        //                 variant=\"outlined\"\r\n        //             >\r\n        //                 Close\r\n        //             </Button>\r\n\r\n        //             <Button \r\n        //                 onClick={handleClose}\r\n        //                 variant=\"contained\"\r\n        //             >\r\n        //                 Publish\r\n        //             </Button>\r\n        //         </Stack>\r\n        //         <br />\r\n        //         <br />\r\n        //     </DialogContent>\r\n            \r\n        // </Dialog>\r\n\r\n\r\n        // <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n        //     <Grid item xs={12}>\r\n        //         <Typography sx={{ float: 'left' }} variant=\"h3\">Library</Typography>\r\n        //         <Button\r\n        //             variant=\"contained\"\r\n        //             startIcon={<AddIcon />}\r\n        //             onClick={handleClickOpen}\r\n        //             sx={{ float: 'right' }}\r\n        //         >\r\n        //             Write a new article\r\n        //         </Button>\r\n        //     </Grid>\r\n        //     <Grid item xs={12}>\r\n        //         <Container maxWidth=\"sm\" >\r\n        //             {\r\n        //                 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n        //                     return (\r\n        //                         <Card variant=\"outlined\" sx={{ mb: 2 }} >\r\n        //                             <CardContent>\r\n        //                                 <Typography sx={{ float: 'right', color: 'gray' }} variant=\"subtitle2\" >\r\n        //                                     Dec, 22 2022\r\n        //                                 </Typography>\r\n        //                                 <a\r\n        //                                     style={{ textDecoration: 'none' }}\r\n        //                                     href=\"/dashboard/viewarticle\"\r\n        //                                 >\r\n        //                                     <Typography sx={{ float: 'left' }}  variant=\"h4\" >\r\n        //                                         Test Topic {item}\r\n        //                                     </Typography>\r\n        //                                 </a>\r\n        //                                 <br />\r\n        //                                 <br />\r\n        //                                 <Typography variant=\"p\" >\r\n        //                                     Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum...\r\n        //                                 </Typography>\r\n        //                             </CardContent>\r\n        //                             <CardActions sx={{ float: 'right' }} >\r\n        //                                 <Tooltip title=\"Delete Department\" >\r\n        //                                     <IconButton color=\"error\" aria-label=\"upload picture\" component=\"label\">\r\n        //                                         <DeleteIcon />\r\n        //                                     </IconButton>\r\n        //                                 </Tooltip>\r\n        //                             </CardActions>\r\n        //                         </Card>\r\n        //                     )\r\n        //                 })\r\n        //             }\r\n        //         </Container>\r\n        //     </Grid>\r\n        // </Grid>\r\n        // </>\r\n        <>Hello</>\r\n    )\r\n};\r\n\r\nexport default Library;\r\n"],"names":["_jsx","_Fragment","children"],"sourceRoot":""}