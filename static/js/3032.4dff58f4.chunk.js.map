{"version":3,"file":"static/js/3032.4dff58f4.chunk.js","mappings":"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","sources":["pages/extra-pages/EmployeeTaskForm.js","pages/extra-pages/ITAdmin.js","pages/extra-pages/TextEditor.js","../node_modules/suneditor/src/lang|D:/work/projects/company_management-saas/client3/node_modules/suneditor/src/lang|sync|/^/.*/.js$"],"sourcesContent":["import React from 'react';\r\nimport { FormControl, Grid, MenuItem, Select, TextField, Typography } from '@mui/material';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n\r\nconst EmployeeTaskForm = ({ empTask, employeeList, handleEmpTask }) => {\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Select Employee</Typography>\r\n                <br />\r\n                <FormControl fullWidth>\r\n                    <Select fullWidth id=\"demo-simple-select\" value={empTask.employee} onChange={handleEmpTask('employee')}>\r\n                        {employeeList ? <MenuItem value=\"None\">None</MenuItem> : <MenuItem value=\"None\">No employee found</MenuItem>}\r\n                        {employeeList &&\r\n                            employeeList.map((emp, index) => (\r\n                                <MenuItem key={emp.email} value={emp.email}>\r\n                                    {emp.email}\r\n                                </MenuItem>\r\n                            ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Task Name</Typography>\r\n                <TextField variant=\"outlined\" fullWidth type=\"text\" value={empTask.task} onChange={handleEmpTask('task')} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Source Name</Typography>\r\n                <TextField variant=\"outlined\" fullWidth type=\"text\" value={empTask.source} onChange={handleEmpTask('source')} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Source URL (If applicable *)</Typography>\r\n                <TextField variant=\"outlined\" fullWidth type=\"text\" value={empTask.url} onChange={handleEmpTask('url')} />\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n                <Typography variant=\"p\">Tag Name</Typography>\r\n                <TextField variant=\"outlined\" fullWidth type=\"text\" value={empTask.tag} onChange={handleEmpTask('tag')} />\r\n            </Grid> */}\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"p\">Due Date</Typography>\r\n                <br />\r\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DatePicker\r\n                        disablePast\r\n                        openTo=\"year\"\r\n                        views={['year', 'month', 'day']}\r\n                        value={empTask.due}\r\n                        onChange={handleEmpTask('due')}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                    />\r\n                </LocalizationProvider>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default EmployeeTaskForm;\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\n// material-ui\r\nimport {\r\n  Avatar,\r\n  CardContent,\r\n  CardActions,\r\n  Card,\r\n  Stack,\r\n  Typography,\r\n  Container,\r\n  Chip,\r\n  Grid,\r\n  Button,\r\n  Paper,\r\n  TextField,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemSecondaryAction,\r\n  Tooltip,\r\n} from '@mui/material';\r\n\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport {\r\n  StockOutlined,\r\n  FireOutlined,\r\n  HighlightOutlined,\r\n  LaptopOutlined,\r\n  QuestionCircleOutlined,\r\n  ContactsOutlined,\r\n  ContainerOutlined,\r\n  LockOutlined,\r\n} from '@ant-design/icons';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nimport {\r\n  AppWidget,\r\n  AppWelcome,\r\n  AppFeatured,\r\n  AppNewInvoice,\r\n  AppTopAuthors,\r\n  AppTopRelated,\r\n  AppAreaInstalled,\r\n  AppWidgetSummary,\r\n  AppCurrentDownload,\r\n  AppTopInstalledCountries,\r\n} from '../../sections/@dashboard/general/app';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Tab,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  InputBase,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  OutlinedInput,\r\n  Link,\r\n  DialogContentText,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from '@mui/material';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LoadingButton, TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport { apiBaseURL } from 'src/config-global';\r\nimport { useContext } from 'react';\r\nimport { AuthContext, SettingsContext } from 'src/App';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport TextEditor from './TextEditor';\r\nimport EmployeeTaskForm from './EmployeeTaskForm';\r\nimport { useTheme } from '@mui/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import logo from '../../assets/images/logo/logo.png';\r\nimport { ColorButton, ColorPicker } from 'mui-color';\r\nimport { collection, firestore, storage } from 'src/Firebase';\r\nimport { FileUploadRounded } from '@mui/icons-material';\r\nimport { useAuthContext } from 'src/auth/useAuthContext';\r\n\r\n//multiple select style\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n// avatar style\r\nconst avatarSX = {\r\n  width: 36,\r\n  height: 36,\r\n  fontSize: '1rem',\r\n};\r\n\r\n// action style\r\nconst actionSX = {\r\n  mt: 0.75,\r\n  ml: 1,\r\n  top: 'auto',\r\n  right: 'auto',\r\n  alignSelf: 'flex-start',\r\n  transform: 'none',\r\n};\r\n\r\nconst Progileavatar = {\r\n  verticalAlign: 'middle',\r\n  width: '100px',\r\n  height: '100px',\r\n  borderRadius: '50%',\r\n};\r\n\r\nconst STATS = [\r\n  {\r\n    title: 'Created',\r\n    key: 'created',\r\n  },\r\n  {\r\n    title: 'Opened',\r\n    key: 'open',\r\n  },\r\n  {\r\n    title: 'Pending',\r\n    key: 'pending',\r\n  },\r\n  {\r\n    title: 'Closed',\r\n    key: 'closed',\r\n  },\r\n  // {\r\n  //   title: 'Reopened',\r\n  //   key: 'reopened',\r\n  // },\r\n];\r\n\r\nconst OPTION_OPERATION = [\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n  // {\r\n  //   title: 'Chandler has closed the ticket #828182',\r\n  //   icon: <LockOutlined />,\r\n  // },\r\n];\r\n\r\nfunction randomDate(start, end) {\r\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n}\r\n\r\nconst STAFF_LIST = [\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n  {\r\n    name: 'Person 1',\r\n    assigned: 10,\r\n    closed: 17,\r\n    lastLogin: randomDate(new Date(2020, 0, 1), new Date()).toDateString(),\r\n  },\r\n];\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"left\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ACCEPTED = 'Accepted';\r\nconst REJECTED = 'Rejected';\r\nconst NORES = 'No Response';\r\n\r\n// ==============================|| SAMPLE PAGE ||============================== //\r\n\r\nconst AdminPortal = () => {\r\n  const { user, getDataByRole } = useAuthContext();\r\n  const { globalSettings, setGlobalSettings } = useContext(SettingsContext);\r\n  const [newGlobalSettings, setNewGlobalSettings] = useState({\r\n    name: '',\r\n    tagline: '',\r\n    location: '',\r\n    logo: '',\r\n    nav_bg: '',\r\n    nav_icon: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setNewGlobalSettings(globalSettings);\r\n  }, [globalSettings]);\r\n\r\n  const handleGlobalSettings = (key, value) => {\r\n    setNewGlobalSettings((prev) => ({\r\n      ...prev,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const saveGlobalSettings = () => {\r\n    firestore\r\n      .collection('organisations')\r\n      .doc(user.company)\r\n      .update(newGlobalSettings)\r\n      .then((res) => {\r\n        setGlobalSettings(newGlobalSettings);\r\n        setLoading(false);\r\n        toast.success('Settings Saved');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        toast.success(error.message);\r\n      });\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const theme = useTheme();\r\n\r\n  const [searchTag, setSearchTag] = useState('');\r\n\r\n  const [tabTitle, setTabTitle] = useState('Dashboard');\r\n  const [title, settitle] = useState('');\r\n  const [value, setValue] = React.useState('1');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (e, formTitle) => {\r\n    setOpen(true);\r\n    settitle(formTitle);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [members, setMembers] = useState(null);\r\n  const handleChange = (event, newValue) => {\r\n    if (newValue === '3') {\r\n      const queryRef = firestore.collection(collection).where('company', '==', user.company);\r\n      const temp = [];\r\n      queryRef.get().then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          let data = doc.data();\r\n          if (doc.id !== user.uid) {\r\n            data.uid = doc.id;\r\n            temp.push(data);\r\n          }\r\n        });\r\n        setMembers(temp);\r\n      });\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [status, setstatus] = React.useState('All');\r\n  const handleStatus = (event) => {\r\n    setstatus(event.target.value);\r\n  };\r\n\r\n  const [employee, setemployee] = React.useState('');\r\n  const handleEmployee = (event) => {\r\n    setemployee(event.target.value);\r\n  };\r\n\r\n  const [category, setcategory] = React.useState('');\r\n  const handleCategory = (event) => {\r\n    setcategory(event.target.value);\r\n  };\r\n\r\n  const [lang, setlang] = React.useState('English');\r\n  const handleLang = (event) => {\r\n    setlang(event.target.value);\r\n  };\r\n\r\n  const [department, setDepartment] = React.useState('All Departments');\r\n  const handleDepartment = (event) => {\r\n    setDepartment(event.target.value);\r\n  };\r\n\r\n  const [from, setFrom] = React.useState('');\r\n  const [to, setTo] = React.useState('');\r\n\r\n  const [question, setQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n  const addFAQ = async () => {\r\n    const payload = {\r\n      adminId: user.uid,\r\n      type: category,\r\n      question,\r\n      answer,\r\n    };\r\n    try {\r\n      const res = await axios.post(`${apiBaseURL}/services/faq/${user.company}`, payload);\r\n      setcategory('');\r\n      setQuestion('');\r\n      setAnswer('');\r\n      toast.success(res.data);\r\n    } catch (error) {\r\n      toast.error('Error, try again !');\r\n    }\r\n  };\r\n\r\n  const [inputState, setInputState] = useState({\r\n    policySub: '',\r\n    policyAns: '',\r\n    blogSub: '',\r\n    blogAns: '',\r\n    newsSub: '',\r\n    newsAns: '',\r\n  });\r\n  const handleServicesInput = async (service) => {\r\n    const payload = {\r\n      adminId: user.uid,\r\n      subject: inputState[`${service}Sub`],\r\n      [service]: inputState[`${service}Ans`],\r\n    };\r\n    try {\r\n      const res = await axios.post(`${apiBaseURL}/services/${service}/${user.company}`, payload);\r\n      localStorage.removeItem(service);\r\n      setInputState((prev) => {\r\n        return { ...prev, [`${service}Sub`]: '', [`${service}Ans`]: '' };\r\n      });\r\n      toast.success(res.data);\r\n    } catch (error) {\r\n      toast.error('Error, try again !');\r\n    }\r\n  };\r\n\r\n  const handleRTEInput = (field) => (value) => {\r\n    setInputState((prev) => ({\r\n      ...prev,\r\n      [`${field}Ans`]: value,\r\n    }));\r\n  };\r\n\r\n  const [requestDetail, setRequestDetail] = useState(null);\r\n\r\n  const [onboardingReq, setOnboardingReq] = useState(null);\r\n  const [offboardingReq, setOffboardingReq] = useState(null);\r\n  useEffect(() => {\r\n    axios.get(`${apiBaseURL}/manager/onboarding/${user.company}?status=false`).then((res) => {\r\n      setOnboardingReq(res.data);\r\n    });\r\n\r\n    axios.get(`${apiBaseURL}/manager/offboarding/${user.company}?status=false`).then((res) => {\r\n      setOffboardingReq(res.data);\r\n    });\r\n\r\n    setTicketEmployees(getDataByRole('itemployee'));\r\n  }, []);\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    axios.get(`${apiBaseURL}/manager/emptask/${user.company}`).then((res) => {\r\n      // console.log(res.data);\r\n      setTasks(res.data);\r\n    });\r\n  }, [user]);\r\n\r\n  const [employeeList, setEmployeeList] = useState(null);\r\n\r\n  const [empTask, setEmpTask] = useState({\r\n    employee: 'None',\r\n    task: 'Create your organisation account',\r\n    source: 'DocsUp',\r\n    url: 'https://www.docsup.com',\r\n    tag: 'newaccount',\r\n    due: new Date().toLocaleDateString(),\r\n  });\r\n  const handleEmpTask = (field) => (e) => {\r\n    let value;\r\n    if (field === 'due') value = e;\r\n    else value = e.target.value;\r\n    setEmpTask((prev) => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    const data = getDataByRole('employee');\r\n    setEmployeeList(data);\r\n  }, [user]);\r\n\r\n  const [itcomments, setITComments] = useState('');\r\n\r\n  const handleDialogSubmit = (_id) => async () => {\r\n    if (title === 'New Task') {\r\n      empTask.tag = empTask.tag.split(',').join(',');\r\n      const formData = {\r\n        ...empTask,\r\n        managerId: user.uid,\r\n        manager: user.displayName,\r\n        company: user.company,\r\n      };\r\n      const res = await axios.post(`${apiBaseURL}/manager/emptask`, { formData });\r\n      if (res.data === 'Created') {\r\n        toast.success(`Task Assigned to ${formData.employee}`);\r\n        setTasks((prev) => {\r\n          prev.push(formData);\r\n          return prev;\r\n        });\r\n        axios.get(`${apiBaseURL}/manager/emptask/${user.company}`).then((res) => {\r\n          setTasks(res.data);\r\n        });\r\n      }\r\n    } else if (title === 'Onboarding Request details') {\r\n      const res = await axios.patch(`${apiBaseURL}/manager/onboarding/${_id}`, { itcomments });\r\n      if (res.data === 'Updated') {\r\n        toast.success(`Status updated`);\r\n        const index = onboardingReq.findIndex((req) => req._id === _id);\r\n        onboardingReq.splice(index, 1);\r\n        setITComments('');\r\n      }\r\n    } else if (title === 'Offboarding Request details') {\r\n      const res = await axios.patch(`${apiBaseURL}/manager/offboarding/${_id}`, { itcomments });\r\n      if (res.data === 'Updated') {\r\n        toast.success(`Status updated`);\r\n        const index = offboardingReq.findIndex((req) => req._id === _id);\r\n        offboardingReq.splice(index, 1);\r\n        setITComments('');\r\n      }\r\n    } else if (title === 'Invite new users') {\r\n      console.log(newInvites, selectedRole);\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const [closedOnboardings, setClosedOnboardings] = useState(null);\r\n  const getClosedOnboardingRequests = async () => {\r\n    const res = await axios.get(`${apiBaseURL}/manager/onboarding/${user.company}?status=true`);\r\n    setClosedOnboardings(res.data);\r\n  };\r\n\r\n  const [closedOffboardings, setClosedOffboardings] = useState(null);\r\n  const getClosedOffboardingRequests = async () => {\r\n    const res = await axios.get(`${apiBaseURL}/manager/offboarding/${user.company}?status=true`);\r\n    setClosedOffboardings(res.data);\r\n  };\r\n\r\n  const [selectedTasks, setSelectedTasks] = useState([]);\r\n  const [selectedEmployee, setSelectedEmployee] = useState('None');\r\n  const handleSelectedTasks = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSelectedTasks(value);\r\n  };\r\n\r\n  const assignTask = async () => {\r\n    const data = { selectedEmployee, selectedTasks };\r\n    // console.log(data)\r\n    const res = await axios.patch(`${apiBaseURL}/manager/empTask`, { data });\r\n    if (res.data === selectedTasks.length) {\r\n      axios.get(`${apiBaseURL}/manager/emptask/${user.company}`).then((res) => {\r\n        setTasks(res.data);\r\n      });\r\n      toast.success('Tasks Assigned to ' + selectedEmployee);\r\n      setSelectedEmployee('None');\r\n      setSelectedTasks([]);\r\n    }\r\n  };\r\n\r\n  const ticketDepartmentsList = ['IT'];\r\n  const [ticketDepartment, setTicketDepartment] = useState('IT');\r\n  const [ticketEmployees, setTicketEmployees] = useState(null);\r\n  const handleTicketDepartmentChange = (e) => {\r\n    const dep = e.target.value;\r\n    setTicketEmployees(getDataByRole(`${dep}employee`));\r\n    setTicketDepartment(dep);\r\n  };\r\n\r\n  const [tickets, setTickets] = useState([]);\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    if (user.firestore.role === 'itadmin') {\r\n      axios.get(`${apiBaseURL}/tickets/${user.company}`).then((res) => {\r\n        setTickets(res.data);\r\n      });\r\n    }\r\n  }, [user]);\r\n\r\n  const assignTickets = async () => {\r\n    const data = { selectedEmployee, selectedTasks };\r\n    // console.log(data)\r\n    const res = await axios.patch(`${apiBaseURL}/tickets`, { formData: data });\r\n    if (res.data === selectedTasks.length) {\r\n      toast.success('Tickets Assigned to ' + selectedEmployee);\r\n      setTickets((prev) => {\r\n        selectedTasks.forEach(\r\n          (ticketId) => (tickets.find(({ _id }) => _id === ticketId)['assigned'] = selectedEmployee)\r\n        );\r\n        return prev;\r\n      });\r\n      setSelectedEmployee('None');\r\n      setSelectedTasks([]);\r\n    }\r\n  };\r\n\r\n  const [ticketStats, setTicketStats] = useState();\r\n  useEffect(() => {\r\n    axios.get(`${apiBaseURL}/tickets/stats/${user.company}`).then((res) => {\r\n      res.data.reopened = '#';\r\n      setTicketStats(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleAccordian = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  // organisation's global settings\r\n  const logoRef = useRef();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const updateCompanyLogo = (file) => {\r\n    setLoading(true);\r\n    const fileName = new Date().getTime() + file.name;\r\n    const storageRef = storage.ref();\r\n    const uploadTask = storageRef.child(`/CompanyLogo/${fileName}`).put(file);\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {\r\n        const uploaded = Math.floor((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n        setProgress(uploaded);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        uploadTask.snapshot.ref\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            firestore\r\n              .collection('organisations')\r\n              .doc(user.company)\r\n              .update({ logo: url })\r\n              .then((res) => {\r\n                setGlobalSettings((prev) => {\r\n                  let remaining;\r\n                  if (prev) {\r\n                    remaining = { ...prev };\r\n                  } else {\r\n                    remaining = {};\r\n                  }\r\n                  return {\r\n                    ...remaining,\r\n                    logo: url,\r\n                  };\r\n                });\r\n                setNewGlobalSettings((prev) => ({\r\n                  ...prev,\r\n                  logo: url,\r\n                }));\r\n                setLoading(false);\r\n              })\r\n              .catch((err) => console.log(err));\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  const [newInvites, setNewInvites] = useState('');\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const sendInvites = () => {\r\n    axios\r\n      .post(`${apiBaseURL}/email/send?service=invite`, {\r\n        formData: {\r\n          toList: newInvites.split(',').map((email) => email.trim()),\r\n          role: selectedRole,\r\n          company: user.firestore.company,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        toast.success('Invites sent');\r\n        setNewInvites('');\r\n        setSelectedRole('');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <Container sx={{ mt: 6, mb: 6 }} maxWidth={title == 'Email Templates' ? 'md' : 'sm'}>\r\n          <Card variant=\"outlined\">\r\n            <CardContent>\r\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Typography variant=\"h2\">{title}</Typography>\r\n              </div>\r\n              <br />\r\n              {title === 'View Ticket' ? (\r\n                <>\r\n                  <Paper variant=\"elevation\" elevation={2} sx={{ p: 2 }}>\r\n                    <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n                      <Typography variant=\"h4\">Ticket ID</Typography>\r\n                      <Typography variant=\"h4\">Ticket Title</Typography>\r\n                      <Typography variant=\"h4\">🏁</Typography>\r\n                    </Stack>\r\n                    <hr />\r\n                    <br />\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} container>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Department</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              Department Name\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Tags</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              None\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Owner</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              ABC DEFG\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12} container>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Author</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              Someone\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <Typography variant=\"h5\">Status</Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"#6ad5db\">\r\n                              Accepted\r\n                            </Typography>\r\n                          </center>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                  </Paper>\r\n                  <br />\r\n                  <Paper variant=\"elevation\" elevation={4} sx={{ p: 2 }}>\r\n                    <Typography variant=\"h5\">Respond</Typography>\r\n                    <br />\r\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                      <Button variant=\"contained\" size=\"small\">\r\n                        Select a Custom Response\r\n                      </Button>\r\n                      <FormControlLabel\r\n                        control={<Checkbox sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }} />}\r\n                        label=\"Private\"\r\n                      />\r\n                    </Stack>\r\n                    <br />\r\n                    <Typography variant=\"p\">Response Message</Typography>\r\n                    <TextField variant=\"outlined\" fullWidth type=\"text\" multiline rows={6} />\r\n                    <br />\r\n                    <br />\r\n                    <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n                      <Button variant=\"contained\" color=\"error\">\r\n                        Close Ticket\r\n                      </Button>\r\n                      <Button variant=\"contained\">Send Response</Button>\r\n                    </Stack>\r\n                  </Paper>\r\n                </>\r\n              ) : title === 'Email Templates' ? (\r\n                <>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={4}>\r\n                      <Card variant=\"outlined\">\r\n                        <CardContent>\r\n                          <Typography variant=\"h5\">Saved Templates</Typography>\r\n                          <br />\r\n                          <List\r\n                            component=\"nav\"\r\n                            sx={{\r\n                              px: 0,\r\n                              py: 0,\r\n                              '& .MuiListItemButton-root': {\r\n                                py: 1.5,\r\n                                '& .MuiAvatar-root': avatarSX,\r\n                                '& .MuiListItemSecondaryAction-root': {\r\n                                  ...actionSX,\r\n                                  position: 'relative',\r\n                                },\r\n                              },\r\n                            }}\r\n                          >\r\n                            {OPTION_OPERATION.map((item, index) => {\r\n                              return (\r\n                                <ListItemButton divider>\r\n                                  <ListItemText\r\n                                    primary={\r\n                                      <Typography variant=\"subtitle1\">Template {index}</Typography>\r\n                                    }\r\n                                  />\r\n                                </ListItemButton>\r\n                              );\r\n                            })}\r\n                          </List>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <div style={{ marginLeft: '10%', marginTop: '10%' }}>\r\n                        <div>\r\n                          <Typography variant=\"p\">Language</Typography>\r\n                          <br />\r\n                          <FormControl fullWidth>\r\n                            <Select\r\n                              fullWidth\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              value={lang}\r\n                              // label=\"Status\"\r\n                              onChange={handleLang}\r\n                            >\r\n                              <MenuItem value=\"English\">English</MenuItem>\r\n                              <MenuItem value=\"Hindi\">Hindi</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </div>\r\n                        <br />\r\n                        <Typography variant=\"p\">Subject</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                        <br />\r\n                        <br />\r\n                        <Typography variant=\"p\">Body</Typography>\r\n                        <TextField variant=\"outlined\" fullWidth type=\"text\" multiline rows={6} />\r\n                        <br />\r\n                        <br />\r\n                        <Button variant=\"contained\" sx={{ float: 'right' }}>\r\n                          Save\r\n                        </Button>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              ) : title === 'New Task' ? (\r\n                <>\r\n                  <EmployeeTaskForm\r\n                    empTask={empTask}\r\n                    employeeList={employeeList}\r\n                    handleEmpTask={handleEmpTask}\r\n                  />\r\n                </>\r\n              ) : title === 'Onboarding Request details' ? (\r\n                <>\r\n                  <Typography variant=\"h4\" sx={{ mt: 2, mb: 4 }}>\r\n                    Employee Details\r\n                  </Typography>\r\n                  <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"First Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.firstName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Middle Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.middleName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Last Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.lastName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Country\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.country}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Office Location\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.offLoc}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Department\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.personal.department}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2 }}>\r\n                        Position Details\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Manager\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.manager}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Job Title of New Starter\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.title}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Employment Type\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.empType}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Employment Type\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.start}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Employment Type\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.position.end}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Devices Selected\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.hardware.devices.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Peripherals Selected\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.hardware.peripherals.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Requested Managers\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                        {requestDetail.managers.map((manager) => (\r\n                          <>\r\n                            <Chip\r\n                              key={manager.managerEmail}\r\n                              label={manager.managerEmail}\r\n                              color={\r\n                                manager.response === NORES\r\n                                  ? 'warning'\r\n                                  : manager.response === ACCEPTED\r\n                                  ? 'success'\r\n                                  : 'error'\r\n                              }\r\n                            />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Comments\r\n                      </Typography>\r\n                      <TextField\r\n                        readOnly\r\n                        multiline\r\n                        value={requestDetail.comments}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        IT Admin\r\n                      </Typography>\r\n                      <TextField\r\n                        multiline\r\n                        readOnly={requestDetail.status}\r\n                        rows={5}\r\n                        value={requestDetail.status ? requestDetail.itcomments : itcomments}\r\n                        onChange={(e) => setITComments(e.target.value)}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              ) : title === 'Closed Onboarding Requests' ? (\r\n                <Grid item xs={12}>\r\n                  <TableContainer component={Paper}>\r\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">First Name</TableCell>\r\n                          <TableCell align=\"center\">Last Name</TableCell>\r\n                          <TableCell align=\"center\">Employment Type</TableCell>\r\n                          <TableCell align=\"center\">Manager</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {closedOnboardings &&\r\n                          closedOnboardings.map((item, index) => {\r\n                            return (\r\n                              <TableRow key={index}>\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Link\r\n                                    href=\"#\"\r\n                                    underline=\"hover\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      setRequestDetail(item);\r\n                                      handleClickOpen(e, 'Onboarding Request details');\r\n                                    }}\r\n                                  >\r\n                                    <Typography variant=\"h6\">{item.personal.firstName}</Typography>\r\n                                  </Link>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  {item.personal.lastName}\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    {item.position.empType}\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    {item.position.manager}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n              ) : title === 'Offboarding Request details' ? (\r\n                <>\r\n                  <Typography variant=\"h4\" sx={{ mt: 2, mb: 4 }}>\r\n                    Employee Details\r\n                  </Typography>\r\n                  <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"First Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.firstName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Middle Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.middleName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"Last Name\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.lastName}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        readOnly\r\n                        fullWidth\r\n                        label=\"End Date\"\r\n                        variant=\"outlined\"\r\n                        value={requestDetail.endDate}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Delegations\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.delegation.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Devices Selected\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.hardware.devices.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Peripherals Selected\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                        {requestDetail.hardware.peripherals.map((item) => (\r\n                          <>\r\n                            <Chip key={item} label={item} />\r\n                          </>\r\n                        ))}\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        Comments\r\n                      </Typography>\r\n                      <TextField\r\n                        readOnly\r\n                        multiline\r\n                        value={requestDetail.comments}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Divider />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\r\n                        IT Admin\r\n                      </Typography>\r\n                      <TextField\r\n                        multiline\r\n                        readOnly={requestDetail.status}\r\n                        rows={5}\r\n                        value={requestDetail.status ? requestDetail.itcomments : itcomments}\r\n                        onChange={(e) => setITComments(e.target.value)}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              ) : title === 'Closed Offboarding Requests' ? (\r\n                <Grid item xs={12}>\r\n                  <TableContainer component={Paper}>\r\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell align=\"center\">First Name</TableCell>\r\n                          <TableCell align=\"center\">Last Name</TableCell>\r\n                          <TableCell align=\"center\">Employment Type</TableCell>\r\n                          <TableCell align=\"center\">Manager</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {closedOffboardings &&\r\n                          closedOffboardings.map((item) => {\r\n                            return (\r\n                              <TableRow key={item}>\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Link\r\n                                    href=\"#\"\r\n                                    underline=\"hover\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      setRequestDetail(item);\r\n                                      handleClickOpen(e, 'Offboarding Request details');\r\n                                    }}\r\n                                  >\r\n                                    <Typography variant=\"h6\">{item.firstName}</Typography>\r\n                                  </Link>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  {item.lastName}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    {item.empType}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    {item.manager}\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n              ) : title === 'Assign Task' ? (\r\n                <>\r\n                  <Typography variant=\"p\">Select Employee</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      fullWidth\r\n                      id=\"demo-simple-select\"\r\n                      value={selectedEmployee}\r\n                      onChange={(e) => {\r\n                        setSelectedEmployee(e.target.value);\r\n                      }}\r\n                    >\r\n                      {employeeList ? (\r\n                        <MenuItem value=\"None\">None</MenuItem>\r\n                      ) : (\r\n                        <MenuItem value=\"None\">No employee found</MenuItem>\r\n                      )}\r\n                      {employeeList &&\r\n                        employeeList.map((emp, index) => (\r\n                          <MenuItem key={emp.email} value={emp.email}>\r\n                            {emp.email}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br />\r\n                  <br />\r\n                  <Typography variant=\"p\">Select tasks to assign.</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      id=\"demo-multiple-chip\"\r\n                      multiple\r\n                      value={selectedTasks}\r\n                      onChange={handleSelectedTasks}\r\n                      input={<OutlinedInput id=\"select-multiple-chip\" label=\"Managers\" />}\r\n                      renderValue={(selected) => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          {selected.map((value) => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={tasks.find((task) => task._id === value).task}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {tasks.map(({ _id, task, employee }) => {\r\n                        if (employee !== 'None') return;\r\n                        return (\r\n                          <MenuItem key={_id} value={_id} style={getStyles(task, tasks, theme)}>\r\n                            {task}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </>\r\n              ) : title === 'Assign Tickets' ? (\r\n                <>\r\n                  <Typography variant=\"p\">Select Employee</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      fullWidth\r\n                      id=\"demo-simple-select\"\r\n                      value={selectedEmployee}\r\n                      onChange={(e) => {\r\n                        setSelectedEmployee(e.target.value);\r\n                      }}\r\n                    >\r\n                      {ticketEmployees ? (\r\n                        <MenuItem value=\"None\">None</MenuItem>\r\n                      ) : (\r\n                        <MenuItem value=\"None\">No employee found</MenuItem>\r\n                      )}\r\n                      {ticketEmployees &&\r\n                        ticketEmployees.map((emp, index) => (\r\n                          <MenuItem key={emp.email} value={emp.email}>\r\n                            {emp.email}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br />\r\n                  <br />\r\n                  <Typography variant=\"p\">Select tasks to assign.</Typography>\r\n                  <br />\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      id=\"demo-multiple-chip\"\r\n                      multiple\r\n                      value={selectedTasks}\r\n                      onChange={handleSelectedTasks}\r\n                      input={<OutlinedInput id=\"select-multiple-chip\" label=\"Managers\" />}\r\n                      renderValue={(selected) => (\r\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                          {selected.map((value) => (\r\n                            <Chip\r\n                              key={value}\r\n                              label={tickets.find((ticket) => ticket._id === value).title}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      )}\r\n                      MenuProps={MenuProps}\r\n                    >\r\n                      {tickets.map(({ _id, title, assigned }) => {\r\n                        if (assigned) return;\r\n                        return (\r\n                          <MenuItem key={_id} value={_id} style={getStyles(title, tickets, theme)}>\r\n                            {title}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </>\r\n              ) : title === 'Invite new users' ? (\r\n                <>\r\n                  <DialogContentText variant=\"h5\">Email</DialogContentText>\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    type=\"email\"\r\n                    id=\"project-name\"\r\n                    placeholder=\"user@email.com\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    value={newInvites}\r\n                    onChange={(e) => setNewInvites(e.target.value)}\r\n                  />\r\n                  <DialogContentText>\r\n                    You can invite multiple users by placing a “,” between email addresses.\r\n                  </DialogContentText>\r\n                  <DialogContentText variant=\"h5\">Role</DialogContentText>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      fullWidth\r\n                      id=\"demo-simple-select\"\r\n                      value={selectedRole}\r\n                      placeholder=\"Select a role\"\r\n                      onChange={(e) => {\r\n                        setSelectedRole(e.target.value);\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"itadmin\">IT Admin</MenuItem>\r\n                      <MenuItem value=\"admin\">Admin</MenuItem>\r\n                      {/* <MenuItem value=\"itemployee\">IT Employee</MenuItem> */}\r\n                      <MenuItem value=\"manager\">Manager</MenuItem>\r\n                      <MenuItem value=\"employee\">Employee</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </>\r\n              ) : null}\r\n            </CardContent>\r\n\r\n            <CardActions sx={{ float: 'right' }} style={{ padding: '0px 20px 20px' }}>\r\n              <Button onClick={handleClose}>Close</Button>\r\n              {(title === 'New Task' ||\r\n                title === 'Assign Task' ||\r\n                title === 'Assign Tickets' ||\r\n                title === 'Invite new users' ||\r\n                (!requestDetail?.status &&\r\n                  (title === 'Onboarding Request details' ||\r\n                    title === 'Offboarding Request details'))) && (\r\n                <Button\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    if (title === 'Assign Task') {\r\n                      assignTask();\r\n                      handleClose();\r\n                      return;\r\n                    } else if (title === 'Assign Tickets') {\r\n                      assignTickets();\r\n                      handleClose();\r\n                      return;\r\n                    } else if (title === 'Invite new users') {\r\n                      if (!newInvites || !selectedRole) {\r\n                        toast.error('All fields are required');\r\n                        return;\r\n                      }\r\n                      sendInvites();\r\n                      handleClose();\r\n                      return;\r\n                    }\r\n                    handleDialogSubmit(requestDetail?._id)();\r\n                  }}\r\n                  variant=\"contained\"\r\n                >\r\n                  {title === 'New Task' || title === 'Assign Task' || title === 'Assign Tickets'\r\n                    ? 'Submit'\r\n                    : title === 'Invite new users'\r\n                    ? 'Invite'\r\n                    : 'Accept'}\r\n                </Button>\r\n              )}\r\n            </CardActions>\r\n          </Card>\r\n        </Container>\r\n      </Dialog>\r\n\r\n      <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n        <Grid item xs={12}>\r\n          <Typography sx={{ float: 'left' }} variant=\"h3\">\r\n            Admin\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid sx={{ mt: -6 }} item xs={12}>\r\n          <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            <Grid item xs={12}>\r\n              <CardContent>\r\n                <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n                  <Grid item xs={3}>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        backgroundColor: tabTitle === 'Dashboard' ? '#dce9f2' : 'white',\r\n                      }}\r\n                      onClick={() => {\r\n                        setValue('1');\r\n                        setTabTitle('Dashboard');\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <center>\r\n                          <img\r\n                            alt=\"Windows\"\r\n                            src=\"https://img.icons8.com/material/74/null/dashboard-layout.png\"\r\n                          />\r\n                          <Typography variant=\"h5\">Dashboard</Typography>\r\n                        </center>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        backgroundColor: tabTitle === 'Manager' ? '#dce9f2' : 'white',\r\n                      }}\r\n                      onClick={() => {\r\n                        setValue('1');\r\n                        setTabTitle('Manager');\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <center>\r\n                          <img\r\n                            alt=\"Windows\"\r\n                            src=\"https://img.icons8.com/material-rounded/74/null/conference-call.png\"\r\n                          />\r\n                          <Typography variant=\"h5\">Manager</Typography>\r\n                        </center>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        backgroundColor: tabTitle === 'Services' ? '#dce9f2' : 'white',\r\n                      }}\r\n                      onClick={() => {\r\n                        setValue('1');\r\n                        setTabTitle('Services');\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <center>\r\n                          <img\r\n                            alt=\"Windows\"\r\n                            src=\"https://img.icons8.com/ios-filled/74/null/conference-background-selected.png\"\r\n                          />\r\n                          <Typography variant=\"h5\">Services</Typography>\r\n                        </center>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        cursor: 'pointer',\r\n                        backgroundColor: tabTitle === 'Settings' ? '#dce9f2' : 'white',\r\n                      }}\r\n                      onClick={() => {\r\n                        setValue('1');\r\n                        setTabTitle('Settings');\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <center>\r\n                          <img\r\n                            alt=\"Windows\"\r\n                            src=\"https://img.icons8.com/ios-filled/74/null/gear.png\"\r\n                          />\r\n                          <Typography variant=\"h5\">Settings</Typography>\r\n                        </center>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          {tabTitle == 'Dashboard' ? (\r\n            <>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                  <Typography variant=\"h5\">Statistics</Typography>\r\n                  <br />\r\n                  <Stack direction=\"row\" spacing={1} justifyContent=\"space-between\" fullWidth>\r\n                    {STATS.map((item) => (\r\n                      <Card\r\n                        key={item.key}\r\n                        variant=\"outlined\"\r\n                        style={{ width: '100%', textAlign: 'center', borderRadius: '25px' }}\r\n                      >\r\n                        <CardContent>\r\n                          <Typography variant=\"h4\">{item.title}</Typography>\r\n                          {ticketStats && (\r\n                            <Typography variant=\"h5\">{ticketStats[item.key]}</Typography>\r\n                          )}\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                  </Stack>\r\n                  <br />\r\n                  {/* <Stack direction=\"row\" spacing={2} justifyContent=\"center\" mt={1}>\r\n                    <div>\r\n                      <Typography variant=\"p\">Date</Typography>\r\n                      <br />\r\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                          <DatePicker\r\n                            disableFuture\r\n                            openTo=\"year\"\r\n                            views={['year', 'month', 'day']}\r\n                            value={value}\r\n                            onChange={(newValue) => {\r\n                              setFrom(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                          />\r\n                          &nbsp;\r\n                          <Typography variant=\"p\">To</Typography>\r\n                          &nbsp;\r\n                          <DatePicker\r\n                            disableFuture\r\n                            openTo=\"year\"\r\n                            views={['year', 'month', 'day']}\r\n                            value={value}\r\n                            onChange={(newValue) => {\r\n                              setTo(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                          />\r\n                        </div>\r\n                      </LocalizationProvider>\r\n                    </div>\r\n                    <div>\r\n                      <Typography variant=\"p\">Tags</Typography>\r\n                      <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                    </div>\r\n                    <div>\r\n                      <Typography variant=\"p\">Owner</Typography>\r\n                      <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                    </div>\r\n                    <div style={{ width: '100px' }}>\r\n                      <Typography variant=\"p\">Status</Typography>\r\n                      <br />\r\n                      <FormControl fullWidth>\r\n                        <Select\r\n                          fullWidth\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={status}\r\n                          onChange={handleStatus}\r\n                        >\r\n                          <MenuItem value=\"All\">All</MenuItem>\r\n                          <MenuItem value=\"Open\">Open</MenuItem>\r\n                          <MenuItem value=\"Closed\">Closed</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </div>\r\n                  </Stack> */}\r\n                  {/* <br />\r\n                  <Stack direction=\"row\" justifyContent=\"flex-end\" spacing={2}>\r\n                    <Button variant=\"contained\">Clear</Button>\r\n                    <Button variant=\"contained\">Search</Button>\r\n                  </Stack> */}\r\n\r\n                  <AppCurrentDownload\r\n                    title=\"Tickets\"\r\n                    chart={{\r\n                      colors: [\r\n                        theme.palette.primary.main,\r\n                        theme.palette.info.main,\r\n                        theme.palette.error.main,\r\n                        theme.palette.warning.main,\r\n                      ],\r\n                      series: [\r\n                        { label: 'Created', value: 2 },\r\n                        { label: 'Opened', value: 1 },\r\n                        { label: 'Pending', value: 1 },\r\n                        { label: 'Closed', value: 0 },\r\n                      ],\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <Typography variant=\"h5\">Latest Activity</Typography>\r\n                  <br />\r\n                  <List\r\n                    component=\"nav\"\r\n                    sx={{\r\n                      px: 0,\r\n                      py: 0,\r\n                      '& .MuiListItemButton-root': {\r\n                        py: 1.5,\r\n                        '& .MuiAvatar-root': avatarSX,\r\n                        '& .MuiListItemSecondaryAction-root': { ...actionSX, position: 'relative' },\r\n                      },\r\n                    }}\r\n                  >\r\n                    {OPTION_OPERATION.map((item) => {\r\n                      return (\r\n                        <ListItemButton\r\n                          key={item.title}\r\n                          onClick={() => handleClickOpen(item?.title)}\r\n                          divider\r\n                        >\r\n                          <ListItemAvatar>\r\n                            <Avatar\r\n                              sx={{\r\n                                color: 'secondary.main',\r\n                                bgcolor: 'secondary.lighter',\r\n                              }}\r\n                            >\r\n                              {item?.icon}\r\n                            </Avatar>\r\n                          </ListItemAvatar>\r\n                          <ListItemText\r\n                            primary={<Typography variant=\"subtitle1\">{item?.title}</Typography>}\r\n                          />\r\n                        </ListItemButton>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : tabTitle == 'Tickets' ? (\r\n            <>\r\n              <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                  <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                    <TabList\r\n                      onChange={handleChange}\r\n                      textColor=\"secondary\"\r\n                      indicatorColor=\"secondary\"\r\n                      aria-label=\"lab API tabs example\"\r\n                      // centered\r\n                    >\r\n                      <Tab label=\"My Tickets\" value=\"1\" />\r\n                      <Tab label=\"New Tickets\" value=\"2\" />\r\n                      <Tab label=\"Search Tickets\" value=\"3\" />\r\n                      <Tab label=\"Custom Response\" value=\"4\" />\r\n                      <Tab label=\"Staff Members\" value=\"6\" />\r\n                      <Tab label=\"Departments\" value=\"7\" />\r\n                      <Tab label=\"Email Settings\" value=\"8\" />\r\n                    </TabList>\r\n                  </Box>\r\n                  <TabPanel value=\"1\">\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h5\" sx={{ float: 'left' }}>\r\n                        My Tickets\r\n                      </Typography>\r\n                      <Link\r\n                        href=\"#\"\r\n                        sx={{ float: 'right' }}\r\n                        underline=\"hover\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        Closed Tickets\r\n                      </Link>\r\n                    </Grid>\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Number\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '35%' }} align=\"center\">\r\n                                Title\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Department\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Author\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '15%' }} align=\"center\">\r\n                                Date\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {[1, 2, 3, 4, 5].map((item) => {\r\n                              return (\r\n                                <TableRow\r\n                                  key={item}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell align=\"center\" scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      100101\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    This is the title for ticket\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Selected Department\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      My Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Feb 23, 2023\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                    <br />\r\n                    <Button variant=\"contained\" startIcon={<AddIcon />} sx={{ float: 'right' }}>\r\n                      Create new ticket\r\n                    </Button>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"2\">\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"h5\" sx={{ float: 'left' }}>\r\n                        New Tickets\r\n                      </Typography>\r\n                      <Link\r\n                        href=\"#\"\r\n                        sx={{ float: 'right' }}\r\n                        underline=\"hover\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                        }}\r\n                      >\r\n                        Closed Tickets\r\n                      </Link>\r\n                    </Grid>\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Number\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '35%' }} align=\"center\">\r\n                                Title\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Department\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Author\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '15%' }} align=\"center\">\r\n                                Date\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {[1, 2, 3, 4, 5].map((item) => {\r\n                              return (\r\n                                <TableRow\r\n                                  key={item}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell align=\"center\" scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      <Link\r\n                                        href=\"#\"\r\n                                        underline=\"hover\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          handleClickOpen(e, 'View Ticket');\r\n                                        }}\r\n                                      >\r\n                                        100101\r\n                                      </Link>\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    This is the title for ticket\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Selected Department\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      My Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Feb 23, 2023\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"3\">\r\n                    <center>\r\n                      <Paper\r\n                        component=\"form\"\r\n                        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: '60%' }}\r\n                      >\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          placeholder=\"Search what you want?\"\r\n                          inputProps={{ 'aria-label': 'search google maps' }}\r\n                        />\r\n                        <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </Paper>\r\n                    </center>\r\n                    <Stack direction=\"row\" spacing={2} justifyContent=\"center\" mt={1}>\r\n                      <div>\r\n                        <Typography variant=\"p\">Date</Typography>\r\n                        <br />\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                            <DatePicker\r\n                              disableFuture\r\n                              openTo=\"year\"\r\n                              views={['year', 'month', 'day']}\r\n                              value={value}\r\n                              onChange={(newValue) => {\r\n                                setFrom(newValue);\r\n                              }}\r\n                              renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                            &nbsp;\r\n                            <Typography variant=\"p\">To</Typography>\r\n                            &nbsp;\r\n                            <DatePicker\r\n                              disableFuture\r\n                              openTo=\"year\"\r\n                              views={['year', 'month', 'day']}\r\n                              value={value}\r\n                              onChange={(newValue) => {\r\n                                setTo(newValue);\r\n                              }}\r\n                              renderInput={(params) => <TextField {...params} />}\r\n                            />\r\n                          </div>\r\n                        </LocalizationProvider>\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Tags</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Owner</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <div style={{ width: '100px' }}>\r\n                        <Typography variant=\"p\">Status</Typography>\r\n                        <br />\r\n                        <FormControl fullWidth>\r\n                          {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\r\n                          <Select\r\n                            fullWidth\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={status}\r\n                            // label=\"Status\"\r\n                            onChange={handleStatus}\r\n                          >\r\n                            <MenuItem value=\"All\">All</MenuItem>\r\n                            <MenuItem value=\"Open\">Open</MenuItem>\r\n                            <MenuItem value=\"Closed\">Closed</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Number\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '35%' }} align=\"center\">\r\n                                Title\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Department\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Author\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '15%' }} align=\"center\">\r\n                                Date\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {[1, 2, 3, 4, 5].map((item) => {\r\n                              return (\r\n                                <TableRow\r\n                                  key={item}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell align=\"center\" scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      100010\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    This is the title for ticket\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Selected Department\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      My Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      Feb 23, 2023\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"4\">\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={4}>\r\n                        <Card variant=\"outlined\">\r\n                          <CardContent>\r\n                            <Typography variant=\"h5\">Custom Responses</Typography>\r\n                            <br />\r\n                            <List\r\n                              component=\"nav\"\r\n                              sx={{\r\n                                px: 0,\r\n                                py: 0,\r\n                                '& .MuiListItemButton-root': {\r\n                                  py: 1.5,\r\n                                  '& .MuiAvatar-root': avatarSX,\r\n                                  '& .MuiListItemSecondaryAction-root': {\r\n                                    ...actionSX,\r\n                                    position: 'relative',\r\n                                  },\r\n                                },\r\n                              }}\r\n                            >\r\n                              {OPTION_OPERATION.map((item) => {\r\n                                return (\r\n                                  <ListItemButton divider>\r\n                                    <ListItemText\r\n                                      primary={\r\n                                        <Typography variant=\"subtitle1\">Responses</Typography>\r\n                                      }\r\n                                    />\r\n                                    <ListItemAvatar>\r\n                                      <Avatar\r\n                                        float=\"right\"\r\n                                        sx={{\r\n                                          color: 'secondary.main',\r\n                                          bgcolor: 'secondary.lighter',\r\n                                        }}\r\n                                      >\r\n                                        ICON\r\n                                      </Avatar>\r\n                                    </ListItemAvatar>\r\n                                  </ListItemButton>\r\n                                );\r\n                              })}\r\n                              <br />\r\n                              <center>\r\n                                <Button variant=\"contained\" startIcon={<AddIcon />}>\r\n                                  Add new response\r\n                                </Button>\r\n                              </center>\r\n                            </List>\r\n                          </CardContent>\r\n                        </Card>\r\n                      </Grid>\r\n                      <Grid item xs={8}>\r\n                        <div style={{ marginLeft: '10%', marginTop: '10%' }}>\r\n                          <Stack direction=\"row\" spacing={2} fullWidth>\r\n                            <div style={{ width: '40%' }}>\r\n                              <Typography variant=\"p\">Title</Typography>\r\n                              <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                            </div>\r\n                            <div style={{ width: '40%' }}>\r\n                              <Typography variant=\"p\">Language</Typography>\r\n                              <br />\r\n                              <FormControl fullWidth>\r\n                                {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\r\n                                <Select\r\n                                  fullWidth\r\n                                  labelId=\"demo-simple-select-label\"\r\n                                  id=\"demo-simple-select\"\r\n                                  value={lang}\r\n                                  // label=\"Status\"\r\n                                  onChange={handleLang}\r\n                                >\r\n                                  <MenuItem value=\"English\">English</MenuItem>\r\n                                  <MenuItem value=\"Hindi\">Hindi</MenuItem>\r\n                                </Select>\r\n                              </FormControl>\r\n                            </div>\r\n                          </Stack>\r\n                          <br />\r\n                          <Typography variant=\"p\">Content</Typography>\r\n                          <TextField variant=\"outlined\" fullWidth type=\"text\" multiline rows={6} />\r\n                          <br />\r\n                          <br />\r\n                          <Button variant=\"contained\" sx={{ float: 'right' }}>\r\n                            Save\r\n                          </Button>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"6\">\r\n                    <Typography variant=\"h5\">Staff Members</Typography>\r\n                    <br />\r\n                    <FormControl sx={{ float: 'left' }} style={{ width: '175px' }}>\r\n                      <Select\r\n                        fullWidth\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={ticketDepartment}\r\n                        onChange={handleTicketDepartmentChange}\r\n                      >\r\n                        {/* <MenuItem value=\"All\">All Departments</MenuItem> */}\r\n                        {ticketDepartmentsList.map((dep) => (\r\n                          <MenuItem key={dep} value={dep}>\r\n                            {dep}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    <Stack direction=\"row\" spacing={2} sx={{ float: 'right' }}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<AddIcon />}\r\n                        onClick={(e) => handleClickOpen(e, 'Add Staff')}\r\n                      >\r\n                        Add Staff\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<AddIcon />}\r\n                        onClick={(e) => handleClickOpen(e, 'Assign Tickets')}\r\n                      >\r\n                        Assign Tickets\r\n                      </Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      {ticketEmployees.map((emp) => {\r\n                        return (\r\n                          <>\r\n                            <Card key={emp._id} sx={{ mb: 2, p: 2 }} variant=\"outlined\">\r\n                              <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                                <div style={{ width: '10%' }}>\r\n                                  <img\r\n                                    src={emp.photoURL}\r\n                                    alt=\"Profile Picture\"\r\n                                    style={{\r\n                                      verticalAlign: 'middle',\r\n                                      width: '50px',\r\n                                      height: '50px',\r\n                                      borderRadius: '50%',\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                                <Typography variant=\"h5\" style={{ width: '20%' }}>\r\n                                  {emp.displayName}\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" style={{ width: '25%' }}>\r\n                                  Tickets assigned: {'#'}\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" style={{ width: '25%' }}>\r\n                                  Tickets closed: {'#'}\r\n                                </Typography>\r\n                                <Typography variant=\"h5\" style={{ width: '20%' }}>\r\n                                  {'#'}\r\n                                </Typography>\r\n                              </Stack>\r\n                            </Card>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"7\">\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={4}>\r\n                        <Card variant=\"outlined\">\r\n                          <CardContent>\r\n                            <Typography variant=\"h5\">Departments</Typography>\r\n                            <br />\r\n                            <List\r\n                              component=\"nav\"\r\n                              sx={{\r\n                                px: 0,\r\n                                py: 0,\r\n                                '& .MuiListItemButton-root': {\r\n                                  py: 1.5,\r\n                                  '& .MuiAvatar-root': avatarSX,\r\n                                  '& .MuiListItemSecondaryAction-root': {\r\n                                    ...actionSX,\r\n                                    position: 'relative',\r\n                                  },\r\n                                },\r\n                              }}\r\n                            >\r\n                              {OPTION_OPERATION.map((item, index) => {\r\n                                return (\r\n                                  <ListItemButton divider>\r\n                                    <ListItemAvatar>\r\n                                      <Avatar\r\n                                        sx={{\r\n                                          color: 'secondary.main',\r\n                                          bgcolor: 'secondary.lighter',\r\n                                        }}\r\n                                      >\r\n                                        ICON\r\n                                      </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                      primary={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                          Department {index + 1}\r\n                                        </Typography>\r\n                                      }\r\n                                    />\r\n                                  </ListItemButton>\r\n                                );\r\n                              })}\r\n                            </List>\r\n                          </CardContent>\r\n                        </Card>\r\n                      </Grid>\r\n                      <Grid item xs={8} container>\r\n                        <div style={{ marginLeft: '10%', marginTop: '10%', width: '100%' }}>\r\n                          <Grid item xs={12}>\r\n                            <Stack direction=\"row\" spacing={3}>\r\n                              <div style={{ width: '70%' }}>\r\n                                <Typography variant=\"p\">Name</Typography>\r\n                                <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                              </div>\r\n                              <FormControlLabel\r\n                                control={\r\n                                  <Checkbox sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }} />\r\n                                }\r\n                                label=\"Private\"\r\n                              />\r\n                            </Stack>\r\n                            <br />\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              sx={{ float: 'right', mr: '13%' }}\r\n                              startIcon={<AddIcon />}\r\n                            >\r\n                              Add Department\r\n                            </Button>\r\n                          </Grid>\r\n                          <br />\r\n                          <br />\r\n                          <br />\r\n                          <br />\r\n                          <hr />\r\n                          <br />\r\n                          <br />\r\n                          <Grid item xs={12}>\r\n                            <Stack>\r\n                              <div style={{ width: '70%' }}>\r\n                                <Typography variant=\"p\">Default Department</Typography>\r\n                                <FormControl fullWidth>\r\n                                  <Select\r\n                                    fullWidth\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={department}\r\n                                    onChange={handleDepartment}\r\n                                  >\r\n                                    <MenuItem value=\"Department 1\">Department 1</MenuItem>\r\n                                    <MenuItem value=\"Department 2\">Department 2</MenuItem>\r\n                                    <MenuItem value=\"Department 3\">Department 3</MenuItem>\r\n                                  </Select>\r\n                                </FormControl>\r\n                              </div>\r\n                              <FormControlLabel\r\n                                control={\r\n                                  <Checkbox sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }} />\r\n                                }\r\n                                label=\"Allow users to create ticket only in the default department\"\r\n                                sx={{ mt: '2px' }}\r\n                              />\r\n                            </Stack>\r\n                            <Button variant=\"contained\" sx={{ float: 'right', mr: '13%' }}>\r\n                              Update Default Department\r\n                            </Button>\r\n                          </Grid>\r\n                        </div>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"8\">\r\n                    <Typography variant=\"h5\" sx={{ float: 'left' }}>\r\n                      Email Settings\r\n                    </Typography>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      sx={{ float: 'right' }}\r\n                      startIcon={<AddIcon />}\r\n                      onClick={(e) => {\r\n                        handleClickOpen(e, 'Email Templates');\r\n                      }}\r\n                    >\r\n                      Add Templates\r\n                    </Button>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      spacing={4}\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"flex-end\"\r\n                    >\r\n                      <div style={{ width: '70%' }}>\r\n                        <Typography variant=\"p\">Email server address</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <Button variant=\"contained\">Save</Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      spacing={4}\r\n                      justifyContent=\"space-between\"\r\n                      alignItems=\"flex-end\"\r\n                    >\r\n                      <div style={{ width: '70%' }}>\r\n                        <Typography variant=\"p\">Image header URL</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <Button variant=\"contained\">Save</Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                    <Grid item xs={12} container spacing={2}>\r\n                      <Grid item xs={6}>\r\n                        <Paper variant=\"elevation\" elevation={4} sx={{ p: 2, height: '475px' }}>\r\n                          <Typography variant=\"h5\">SMTP Server</Typography>\r\n                          <Typography variant=\"subtitle2\">Configure your SMTP server</Typography>\r\n                          <br />\r\n                          <Typography variant=\"p\">Server</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">User</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">Password</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n                            <Button variant=\"contained\" color=\"success\">\r\n                              Test\r\n                            </Button>\r\n                            <Button variant=\"contained\">Save</Button>\r\n                          </Stack>\r\n                        </Paper>\r\n                      </Grid>\r\n                      <Grid item xs={6}>\r\n                        <Paper variant=\"elevation\" elevation={4} sx={{ p: 2 }}>\r\n                          <Typography variant=\"h5\">IMAP Server</Typography>\r\n                          <Typography variant=\"subtitle2\">Configure your IMAP server</Typography>\r\n                          <br />\r\n                          <Typography variant=\"p\">Server</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">User</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">Password</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Typography variant=\"p\">IMAP Token</Typography>\r\n                          <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                          <br />\r\n                          <br />\r\n                          <Stack direction=\"row\" justifyContent=\"center\" spacing={2}>\r\n                            <Button variant=\"contained\" color=\"success\">\r\n                              Test\r\n                            </Button>\r\n                            <Button variant=\"contained\">Save</Button>\r\n                          </Stack>\r\n                        </Paper>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                </TabContext>\r\n              </Box>\r\n            </>\r\n          ) : tabTitle == 'Manager' ? (\r\n            <>\r\n              <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                  <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                    <TabList\r\n                      onChange={handleChange}\r\n                      textColor=\"secondary\"\r\n                      indicatorColor=\"secondary\"\r\n                      aria-label=\"lab API tabs example\"\r\n                      // centered\r\n                    >\r\n                      <Tab label=\"Onboarding Requests\" value=\"1\" />\r\n                      <Tab label=\"Offboarding Requests\" value=\"2\" />\r\n                      <Tab label=\"Tasks\" value=\"3\" />\r\n                      {/* <Tab label=\"Assign Tasks\" value=\"4\" /> */}\r\n                      {/* <Tab label=\"HR Onboarding\" value=\"5\" /> */}\r\n                      {/* <Tab label=\"HR Offboarding\" value=\"6\" /> */}\r\n                    </TabList>\r\n                  </Box>\r\n                  <TabPanel value=\"1\">\r\n                    <center>\r\n                      <Paper\r\n                        component=\"form\"\r\n                        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: '60%' }}\r\n                      >\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          placeholder=\"Search ...\"\r\n                          inputProps={{ 'aria-label': 'search google maps' }}\r\n                        />\r\n                        <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </Paper>\r\n                    </center>\r\n                    <br />\r\n                    <Link\r\n                      href=\"#\"\r\n                      sx={{ float: 'right' }}\r\n                      underline=\"hover\"\r\n                      onClick={(e) => {\r\n                        getClosedOnboardingRequests();\r\n                        handleClickOpen(e, 'Closed Onboarding Requests');\r\n                      }}\r\n                    >\r\n                      Closed Requests\r\n                    </Link>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\">First Name</TableCell>\r\n                              <TableCell align=\"center\">Last Name</TableCell>\r\n                              <TableCell align=\"center\">Employment Type</TableCell>\r\n                              <TableCell align=\"center\">Manager</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {onboardingReq &&\r\n                              onboardingReq.map((item, index) => {\r\n                                return (\r\n                                  <TableRow key={index}>\r\n                                    <TableCell align=\"center\" scope=\"row\">\r\n                                      <Link\r\n                                        href=\"#\"\r\n                                        underline=\"hover\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setRequestDetail(item);\r\n                                          handleClickOpen(e, 'Onboarding Request details');\r\n                                        }}\r\n                                      >\r\n                                        <Typography variant=\"h6\">\r\n                                          {item.personal.firstName}\r\n                                        </Typography>\r\n                                      </Link>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" variant=\"h6\">\r\n                                      {item.personal.lastName}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                        {item.position.empType}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                        {item.position.manager}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"2\">\r\n                    <center>\r\n                      <Paper\r\n                        component=\"form\"\r\n                        sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: '60%' }}\r\n                      >\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          placeholder=\"Search ...\"\r\n                          inputProps={{ 'aria-label': 'search google maps' }}\r\n                        />\r\n                        <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </Paper>\r\n                    </center>\r\n                    <br />\r\n                    <Link\r\n                      href=\"#\"\r\n                      sx={{ float: 'right' }}\r\n                      underline=\"hover\"\r\n                      onClick={(e) => {\r\n                        getClosedOffboardingRequests();\r\n                        handleClickOpen(e, 'Closed Offboarding Requests');\r\n                      }}\r\n                    >\r\n                      Closed Requests\r\n                    </Link>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell align=\"center\">First Name</TableCell>\r\n                              <TableCell align=\"center\">Last Name</TableCell>\r\n                              <TableCell align=\"center\">Employment Type</TableCell>\r\n                              <TableCell align=\"center\">Manager</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {offboardingReq &&\r\n                              offboardingReq.map((item) => {\r\n                                return (\r\n                                  <TableRow key={item}>\r\n                                    <TableCell align=\"center\" scope=\"row\">\r\n                                      <Link\r\n                                        href=\"#\"\r\n                                        underline=\"hover\"\r\n                                        onClick={(e) => {\r\n                                          e.preventDefault();\r\n                                          setRequestDetail(item);\r\n                                          handleClickOpen(e, 'Offboarding Request details');\r\n                                        }}\r\n                                      >\r\n                                        <Typography variant=\"h6\">{item.firstName}</Typography>\r\n                                      </Link>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\" variant=\"h6\">\r\n                                      {item.lastName}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                        {item.empType}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                        {item.manager}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"3\">\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"h5\">Tasks</Typography>\r\n                      <Paper\r\n                        component=\"form\"\r\n                        sx={{\r\n                          p: '2px 4px',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          width: '50%',\r\n                          borderRadius: '50px',\r\n                        }}\r\n                      >\r\n                        <InputBase\r\n                          sx={{ ml: 1, flex: 1 }}\r\n                          placeholder=\"Search for tags\"\r\n                          value={searchTag}\r\n                          onChange={(e) => setSearchTag(e.target.value)}\r\n                        />\r\n                        {/* <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                                                    <SearchIcon />\r\n                                                </IconButton> */}\r\n                      </Paper>\r\n                      <Stack direction=\"row\" spacing={2}>\r\n                        <Button\r\n                          disabled={!employeeList}\r\n                          variant=\"contained\"\r\n                          startIcon={<AddIcon />}\r\n                          onClick={(e) => {\r\n                            handleClickOpen(e, 'Assign Task');\r\n                          }}\r\n                        >\r\n                          Assign Task\r\n                        </Button>\r\n                        <Button\r\n                          disabled={!employeeList}\r\n                          variant=\"contained\"\r\n                          startIcon={<AddIcon />}\r\n                          onClick={(e) => {\r\n                            handleClickOpen(e, 'New Task');\r\n                          }}\r\n                        >\r\n                          Add Task\r\n                        </Button>\r\n                      </Stack>\r\n                    </div>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '25%' }} align=\"center\">\r\n                                Task\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Assigned By\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '15%' }} align=\"center\">\r\n                                Assigned To\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Due Date\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Source\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                                Tags\r\n                              </TableCell>\r\n                              <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                                Status\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {tasks.map((item) => {\r\n                              if (searchTag && !new RegExp(searchTag).test(item.tag)) return;\r\n                              return (\r\n                                <TableRow\r\n                                  key={item._id}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell align=\"center\" scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      {item.task}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    {item.manager}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\" variant=\"h6\">\r\n                                    {item.employee === 'None' ? '-' : item.employee}\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      {new Date(item.due).toLocaleDateString()}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      <a href={`${item.url}`} target=\"blank\">\r\n                                        {item.source}\r\n                                      </a>\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      {item.tag}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    {item.employee !== 'None' ? (\r\n                                      <Chip\r\n                                        label={item.status ? 'Completed' : 'In Progress'}\r\n                                        color={item.status ? 'success' : 'warning'}\r\n                                      />\r\n                                    ) : (\r\n                                      <Chip label=\"Not Assigned\" color={'error'} />\r\n                                    )}\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"4\">\r\n                    <Stack\r\n                      direction=\"row\"\r\n                      spacing={2}\r\n                      justifyContent=\"center\"\r\n                      alignItems=\"flex-end\"\r\n                      mt={1}\r\n                    >\r\n                      <div style={{ width: '20%' }}>\r\n                        <Typography variant=\"p\">Choose Employee</Typography>\r\n                        <br />\r\n                        <FormControl fullWidth>\r\n                          {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\r\n                          <Select\r\n                            fullWidth\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={employee}\r\n                            // label=\"Status\"\r\n                            onChange={handleEmployee}\r\n                          >\r\n                            <MenuItem value=\"Employee 1\">Employee 1</MenuItem>\r\n                            <MenuItem value=\"Employee 2\">Employee 2</MenuItem>\r\n                            <MenuItem value=\"Employee 3\">Employee 3</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Due Date</Typography>\r\n                        <br />\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                          <DatePicker\r\n                            disableFuture\r\n                            openTo=\"year\"\r\n                            views={['year', 'month', 'day']}\r\n                            value={value}\r\n                            onChange={(newValue) => {\r\n                              setFrom(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} />}\r\n                          />\r\n                        </LocalizationProvider>\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Tags</Typography>\r\n                        <TextField type=\"text\" variant=\"outlined\" fullWidth />\r\n                      </div>\r\n                      <Button variant=\"contained\">Search</Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <br />\r\n                    <TableContainer component={Paper}>\r\n                      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              Select\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Task Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '25%' }} align=\"center\">\r\n                              Source Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '25%' }} align=\"center\">\r\n                              Source URL\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Tag\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {[1, 2, 3, 4, 5, 6, 7].map((item) => {\r\n                            return (\r\n                              <TableRow\r\n                                key={item}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                              >\r\n                                <TableCell align=\"center\">\r\n                                  <Checkbox color=\"success\" />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    Open Account\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  Salesforce\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    something.com\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    Sales Team\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"5\">\r\n                    <TableContainer component={Paper}>\r\n                      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              First Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              Last Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Location\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Job Title\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Hire Date\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Contract End Date\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {[1, 2, 3, 4, 5, 6, 7].map((item) => {\r\n                            return (\r\n                              <TableRow\r\n                                key={item}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                              >\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    FName\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    LName\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    India\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    Manager\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    10/10/23\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    10/10/23\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"6\">\r\n                    <TableContainer component={Paper}>\r\n                      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              First Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '10%' }} align=\"center\">\r\n                              Last Name\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Location\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Job Title\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Hire Date\r\n                            </TableCell>\r\n                            <TableCell sx={{ width: '20%' }} align=\"center\">\r\n                              Contract End Date\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {[1, 2, 3, 4, 5, 6, 7].map((item) => {\r\n                            return (\r\n                              <TableRow\r\n                                key={item}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                              >\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    FName\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" scope=\"row\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    LName\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    India\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\" variant=\"h6\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    Manager\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    10/10/23\r\n                                  </Typography>\r\n                                </TableCell>\r\n\r\n                                <TableCell align=\"center\">\r\n                                  <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                    10/10/23\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </TabPanel>\r\n                </TabContext>\r\n              </Box>\r\n            </>\r\n          ) : tabTitle == 'Services' ? (\r\n            <>\r\n              <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                  <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                    <TabList\r\n                      onChange={handleChange}\r\n                      textColor=\"secondary\"\r\n                      indicatorColor=\"secondary\"\r\n                      aria-label=\"lab API tabs example\"\r\n                      // centered\r\n                    >\r\n                      <Tab label=\"FAQs\" value=\"1\" />\r\n                      <Tab label=\"Policies\" value=\"2\" />\r\n                      <Tab label=\"Blog\" value=\"3\" />\r\n                      <Tab label=\"News\" value=\"4\" />\r\n                    </TabList>\r\n                  </Box>\r\n                  <TabPanel value=\"1\">\r\n                    <Stack spacing={2} sx={{ width: '70%' }} m={'auto'}>\r\n                      <Link\r\n                        href=\"#\"\r\n                        underline=\"hover\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          navigate('/dashboard/faq', { state: { editable: true } });\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"body1\" sx={{ float: 'right' }}>\r\n                          Edit FAQs\r\n                        </Typography>\r\n                      </Link>\r\n                      <div>\r\n                        <Typography variant=\"p\">Choose Category</Typography>\r\n                        <br />\r\n                        <FormControl fullWidth>\r\n                          {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\r\n                          <Select\r\n                            fullWidth\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={category}\r\n                            // label=\"Status\"\r\n                            onChange={handleCategory}\r\n                          >\r\n                            <MenuItem value=\"Hardware\">Hardware</MenuItem>\r\n                            <MenuItem value=\"Software\">Software</MenuItem>\r\n                            <MenuItem value=\"Security\">Security</MenuItem>\r\n                            <MenuItem value=\"Troubleshooting\">Troubleshooting</MenuItem>\r\n                            <MenuItem value=\"Others\">Others</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Question</Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          value={question}\r\n                          onChange={(e) => setQuestion(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Answer</Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          multiline\r\n                          rows={6}\r\n                          value={answer}\r\n                          onChange={(e) => setAnswer(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <Button startIcon={<AddIcon />} variant=\"contained\" onClick={addFAQ}>\r\n                        Add FAQ\r\n                      </Button>\r\n                    </Stack>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"2\">\r\n                    <Stack spacing={2} sx={{ width: '70%' }} m={'auto'}>\r\n                      <div>\r\n                        <Typography variant=\"p\">Subject</Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          value={inputState.policySub}\r\n                          onChange={(e) => {\r\n                            setInputState((prev) => {\r\n                              return { ...prev, policySub: e.target.value };\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Policy</Typography>\r\n                        <TextEditor\r\n                          id=\"policy\"\r\n                          value={inputState}\r\n                          setValue={handleRTEInput('policy')}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        startIcon={<AddIcon />}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          handleServicesInput('policy');\r\n                        }}\r\n                      >\r\n                        Add Policy\r\n                      </Button>\r\n                    </Stack>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"3\">\r\n                    <Stack spacing={2} sx={{ width: '70%' }} m={'auto'}>\r\n                      <div>\r\n                        <Typography variant=\"p\">Subject</Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          value={inputState.blogSub}\r\n                          onChange={(e) => {\r\n                            setInputState((prev) => {\r\n                              return { ...prev, blogSub: e.target.value };\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">Blog</Typography>\r\n                        <TextEditor\r\n                          id=\"blog\"\r\n                          value={inputState}\r\n                          setValue={handleRTEInput('blog')}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        startIcon={<AddIcon />}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          handleServicesInput('blog');\r\n                        }}\r\n                      >\r\n                        Add Blog\r\n                      </Button>\r\n                    </Stack>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"4\">\r\n                    <Stack spacing={2} sx={{ width: '70%' }} m={'auto'}>\r\n                      <div>\r\n                        <Typography variant=\"p\">Subject</Typography>\r\n                        <TextField\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          value={inputState.newsSub}\r\n                          onChange={(e) => {\r\n                            setInputState((prev) => {\r\n                              return { ...prev, newsSub: e.target.value };\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <Typography variant=\"p\">News</Typography>\r\n                        <TextEditor\r\n                          id=\"news\"\r\n                          value={inputState}\r\n                          setValue={handleRTEInput('news')}\r\n                        />\r\n                      </div>\r\n                      <Button\r\n                        startIcon={<AddIcon />}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          handleServicesInput('news');\r\n                        }}\r\n                      >\r\n                        Add News\r\n                      </Button>\r\n                    </Stack>\r\n                  </TabPanel>\r\n                </TabContext>\r\n              </Box>\r\n            </>\r\n          ) : tabTitle == 'Settings' ? (\r\n            <>\r\n              <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={value}>\r\n                  <Box sx={{ borderBottom: 2, borderColor: 'divider' }}>\r\n                    <TabList\r\n                      onChange={handleChange}\r\n                      textColor=\"secondary\"\r\n                      indicatorColor=\"secondary\"\r\n                      aria-label=\"lab API tabs example\"\r\n                      // centered\r\n                    >\r\n                      <Tab label=\"General\" value=\"1\" />\r\n                      <Tab label=\"Integrations\" value=\"2\" />\r\n                      <Tab label=\"Members\" value=\"3\" />\r\n                      {user?.firestore.role === 'admin' ? <Tab label=\"Billing\" value=\"4\" /> : null}\r\n                    </TabList>\r\n                  </Box>\r\n                  <TabPanel value=\"1\">\r\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                      <Typography variant=\"h5\">\r\n                        Your Organisations Global Settings can be configured here.\r\n                      </Typography>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                          saveGlobalSettings();\r\n                        }}\r\n                      >\r\n                        Save\r\n                      </Button>\r\n                    </Stack>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        Your Organisation Logo{' '}\r\n                        <span style={{ color: 'red' }}>(recommended ratio: 1:4)*</span>\r\n                      </Typography>\r\n                      <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                        <img\r\n                          src={newGlobalSettings?.logo}\r\n                          alt=\"Company Logo\"\r\n                          width=\"300px\"\r\n                          height=\"75px\"\r\n                        />\r\n                        <div>\r\n                          <LoadingButton\r\n                            size=\"small\"\r\n                            loading={loading}\r\n                            loadingPosition=\"start\"\r\n                            startIcon={<FileUploadRounded />}\r\n                            variant=\"contained\"\r\n                            onClick={(e) => logoRef.current.click()}\r\n                          >\r\n                            {loading ? `${progress}%` : 'Change'}\r\n                            <input\r\n                              ref={logoRef}\r\n                              hidden\r\n                              accept=\"image/*\"\r\n                              type=\"file\"\r\n                              onChange={(e) => {\r\n                                updateCompanyLogo(e.target.files[0]);\r\n                              }}\r\n                            />\r\n                          </LoadingButton>\r\n                        </div>\r\n                      </Stack>\r\n                      <Divider sx={{ my: 2 }} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"p\">Organisation Tagline</Typography>\r\n                      <TextField\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        value={newGlobalSettings?.tagline}\r\n                        onChange={(e) => handleGlobalSettings('tagline', e.target.value)}\r\n                      />\r\n                      <Divider sx={{ my: 2 }} />\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                      <Stack direction=\"row\" spacing={2} fullWidth>\r\n                        <div style={{ width: '30%' }}>\r\n                          <Typography variant=\"p\">Navigation Background</Typography>\r\n                          <br />\r\n                          <ColorPicker\r\n                            value={newGlobalSettings?.nav_bg}\r\n                            onChange={(newColor) => {\r\n                              handleGlobalSettings('nav_bg', `#${newColor.hex}`);\r\n                            }}\r\n                          />\r\n                          <Typography variant=\"caption\">\r\n                            This is the background color of navigation bar\r\n                          </Typography>\r\n                        </div>\r\n                        <div style={{ width: '30%' }}>\r\n                          <Typography variant=\"p\">Navigation Icon Color</Typography>\r\n                          <br />\r\n                          <ColorPicker\r\n                            value={newGlobalSettings?.nav_icon}\r\n                            onChange={(newColor) => {\r\n                              handleGlobalSettings('nav_icon', `#${newColor.hex}`);\r\n                            }}\r\n                          />\r\n                          <Typography variant=\"caption\">\r\n                            This is the icon color of navigation bar\r\n                          </Typography>\r\n                        </div>\r\n                      </Stack>\r\n                      <Divider sx={{ my: 2 }} />\r\n                    </Grid> */}\r\n                    <Grid item xs={12}>\r\n                      <Stack direction=\"row\" spacing={2} fullWidth>\r\n                        <div style={{ width: '50%' }}>\r\n                          <Typography variant=\"p\">Organisation Name</Typography>\r\n                          <TextField\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={newGlobalSettings?.name}\r\n                            onChange={(e) => handleGlobalSettings('name', e.target.value)}\r\n                          />\r\n                        </div>\r\n                        <div style={{ width: '50%' }}>\r\n                          <Typography variant=\"p\">Organisation Location</Typography>\r\n                          <TextField\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            value={newGlobalSettings?.location}\r\n                            onChange={(e) => handleGlobalSettings('location', e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </Stack>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"2\">\r\n                    {/* <center>\r\n                          <Paper\r\n                              component=\"form\"\r\n                              sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: '60%' }}\r\n                          >\r\n                              <InputBase\r\n                                  sx={{ ml: 1, flex: 1 }}\r\n                                  placeholder=\"Search ...\"\r\n                                  inputProps={{ 'aria-label': 'search google maps' }}\r\n                              />\r\n                              <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                                  <SearchIcon />\r\n                              </IconButton>\r\n                          </Paper>\r\n                      </center>\r\n                      <br /> */}\r\n                    <Typography variant=\"h5\">Manage your Integrations.</Typography>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      {[1].map((item, index) => {\r\n                        return (\r\n                          <Accordion\r\n                            key={item}\r\n                            expanded={expanded === item}\r\n                            onChange={handleAccordian(item)}\r\n                          >\r\n                            <AccordionSummary>\r\n                              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                <img\r\n                                  src=\"https://img.icons8.com/color/36/null/slack-new.png\"\r\n                                  alt=\"icon\"\r\n                                />\r\n                                <Typography variant=\"subtitle1\">Slack</Typography>\r\n                              </Stack>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                              <Typography>\r\n                                Slack offers the functionality to authorize users to submit their\r\n                                tickets via a designated Slack channel.\r\n                              </Typography>\r\n                              <Stack\r\n                                direction=\"row\"\r\n                                justifyContent=\"flex-end\"\r\n                                spacing={2}\r\n                                sx={{ mt: 1 }}\r\n                              >\r\n                                <Button size=\"small\" variant=\"contained\" color=\"success\">\r\n                                  Connect/Enable\r\n                                </Button>\r\n                                <Button size=\"small\" variant=\"contained\" color=\"error\">\r\n                                  Disable Extension\r\n                                </Button>\r\n                              </Stack>\r\n                            </AccordionDetails>\r\n                          </Accordion>\r\n                        );\r\n                      })}\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"3\">\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"h5\">Manage your members</Typography>\r\n                      <Stack direction=\"row\" spacing={2}>\r\n                        <Button\r\n                          // disabled={!employeeList}\r\n                          variant=\"contained\"\r\n                          startIcon={<AddIcon />}\r\n                          onClick={(e) => {\r\n                            handleClickOpen(e, 'Invite new users');\r\n                          }}\r\n                        >\r\n                          Invite\r\n                        </Button>\r\n                      </Stack>\r\n                    </div>\r\n                    <br />\r\n                    <Grid item xs={12}>\r\n                      <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell sx={{ width: '20%' }}>Name</TableCell>\r\n                              <TableCell sx={{ width: '20%' }}>Role</TableCell>\r\n                              <TableCell sx={{ width: '60%' }}>Email</TableCell>\r\n                              <TableCell sx={{ width: '20%' }}>Manage</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                            {members?.map((item) => {\r\n                              return (\r\n                                <TableRow\r\n                                  key={item.uid}\r\n                                  sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                  <TableCell scope=\"row\">\r\n                                    <Typography sx={{ pt: 1 }} variant=\"h6\">\r\n                                      {item.displayName}\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell variant=\"h6\">{item.role}</TableCell>\r\n                                  <TableCell variant=\"h6\">{item.email}</TableCell>\r\n                                  <TableCell variant=\"h6\">\r\n                                    <Chip\r\n                                      color=\"error\"\r\n                                      label=\"Deactivate\"\r\n                                      clickable\r\n                                      onClick={(e) => {\r\n                                        console.log(`${item.displayName}'s account deactivated`);\r\n                                      }}\r\n                                    />\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              );\r\n                            })}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    </Grid>\r\n                  </TabPanel>\r\n                  <TabPanel value=\"4\"></TabPanel>\r\n                </TabContext>\r\n              </Box>\r\n            </>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPortal;\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\nimport {\r\n    align,\r\n    font,\r\n    fontColor,\r\n    fontSize,\r\n    formatBlock,\r\n    hiliteColor,\r\n    horizontalRule,\r\n    lineHeight,\r\n    list,\r\n    paragraphStyle,\r\n    table,\r\n    template,\r\n    textStyle,\r\n    image,\r\n    link,\r\n    fullScreen\r\n} from 'suneditor/src/plugins';\r\n\r\nconst TextEditor = ({ id, value, setValue }) => {\r\n\r\n    return (\r\n        <SunEditor\r\n            id={id}\r\n            autoFocus={true}\r\n            lang=\"en\"\r\n            setOptions={{\r\n                showPathLabel: false,\r\n                minHeight: '50vh',\r\n                maxHeight: '50vh',\r\n                placeholder: 'Enter your text here ...',\r\n                plugins: [\r\n                    align,\r\n                    font,\r\n                    fontColor,\r\n                    fontSize,\r\n                    formatBlock,\r\n                    hiliteColor,\r\n                    horizontalRule,\r\n                    lineHeight,\r\n                    list,\r\n                    paragraphStyle,\r\n                    table,\r\n                    template,\r\n                    textStyle,\r\n                    image,\r\n                    link\r\n                ],\r\n                buttonList: [\r\n                    ['undo', 'redo'],\r\n                    ['font', 'fontSize', 'formatBlock'],\r\n                    ['paragraphStyle'],\r\n                    ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'],\r\n                    ['fontColor', 'hiliteColor'],\r\n                    ['removeFormat'],\r\n                    '/', // Line break\r\n                    ['outdent', 'indent'],\r\n                    ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                    ['table', 'link', 'image'],\r\n                    ['fullScreen']\r\n                ],\r\n                formats: ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n                font: [\r\n                    'Arial',\r\n                    'Calibri',\r\n                    'Comic Sans',\r\n                    'Courier',\r\n                    'Garamond',\r\n                    'Georgia',\r\n                    'Impact',\r\n                    'Lucida Console',\r\n                    'Palatino Linotype',\r\n                    'Segoe UI',\r\n                    'Tahoma',\r\n                    'Times New Roman',\r\n                    'Trebuchet MS'\r\n                ]\r\n            }}\r\n            setDefaultStyle=\"font-family: Arial; font-size: 16px;\"\r\n            setContents={localStorage.getItem(id) || value[`${id}Ans`]}\r\n            value={value[`${id}Ans`]}\r\n            onChange={(value) => {\r\n                setValue(value);\r\n                localStorage.setItem(id, value);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default TextEditor;\r\n","var map = {\n\t\"./ckb.js\": 82871,\n\t\"./da.js\": 59651,\n\t\"./de.js\": 64639,\n\t\"./en.js\": 75213,\n\t\"./es.js\": 47068,\n\t\"./fr.js\": 78488,\n\t\"./he.js\": 93179,\n\t\"./index.js\": 87488,\n\t\"./it.js\": 63577,\n\t\"./ja.js\": 10916,\n\t\"./ko.js\": 19920,\n\t\"./lv.js\": 39985,\n\t\"./nl.js\": 14076,\n\t\"./pl.js\": 71676,\n\t\"./pt_br.js\": 3204,\n\t\"./ro.js\": 59575,\n\t\"./ru.js\": 70123,\n\t\"./se.js\": 52372,\n\t\"./ua.js\": 63854,\n\t\"./zh_cn.js\": 79602\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 97699;"],"names":["_ref","empTask","employeeList","handleEmpTask","_jsxs","Grid","container","spacing","children","item","xs","_jsx","Typography","variant","FormControl","fullWidth","Select","id","value","employee","onChange","MenuItem","map","emp","index","email","TextField","type","task","source","url","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","disablePast","openTo","views","due","renderInput","params","_objectSpread","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","avatarSX","height","fontSize","actionSX","mt","ml","top","right","alignSelf","transform","STATS","title","key","OPTION_OPERATION","randomDate","start","end","Date","getTime","Math","random","toDateString","Transition","React","props","ref","Slide","direction","_useAuthContext","useAuthContext","user","getDataByRole","_useContext","useContext","SettingsContext","globalSettings","setGlobalSettings","_useState","useState","tagline","location","logo","nav_bg","nav_icon","_useState2","_slicedToArray","newGlobalSettings","setNewGlobalSettings","useEffect","handleGlobalSettings","prev","_defineProperty","navigate","useNavigate","useTheme","_useState3","_useState4","searchTag","setSearchTag","_useState5","_useState6","tabTitle","setTabTitle","_useState7","_useState8","settitle","_React$useState","_React$useState2","setValue","_React$useState3","_React$useState4","open","setOpen","handleClickOpen","e","formTitle","handleClose","_useState9","_useState10","members","setMembers","handleChange","event","newValue","queryRef","firestore","collection","where","company","temp","get","then","snapshot","forEach","doc","data","uid","push","_React$useState5","_React$useState6","status","setstatus","_React$useState7","_React$useState8","setemployee","_React$useState9","_React$useState10","category","setcategory","_React$useState11","_React$useState12","lang","setlang","handleLang","target","_React$useState13","_React$useState14","department","setDepartment","_React$useState15","_React$useState16","setFrom","_React$useState17","_React$useState18","setTo","_useState11","_useState12","question","setQuestion","_useState13","_useState14","answer","setAnswer","addFAQ","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payload","res","wrap","_context","next","adminId","axios","concat","apiBaseURL","sent","toast","t0","stop","apply","arguments","_useState15","policySub","policyAns","blogSub","blogAns","newsSub","newsAns","_useState16","inputState","setInputState","handleServicesInput","_ref2","_callee2","service","_context2","subject","localStorage","removeItem","_objectSpread3","_x","handleRTEInput","field","_useState17","_useState18","requestDetail","setRequestDetail","_useState19","_useState20","onboardingReq","setOnboardingReq","_useState21","_useState22","offboardingReq","setOffboardingReq","setTicketEmployees","_useState23","_useState24","tasks","setTasks","_useState25","_useState26","setEmployeeList","_useState27","tag","toLocaleDateString","_useState28","setEmpTask","_useState29","_useState30","itcomments","setITComments","_useState31","_useState32","closedOnboardings","setClosedOnboardings","getClosedOnboardingRequests","_ref4","_callee4","_context4","_useState33","_useState34","closedOffboardings","setClosedOffboardings","getClosedOffboardingRequests","_ref5","_callee5","_context5","_useState35","_useState36","selectedTasks","setSelectedTasks","_useState37","_useState38","selectedEmployee","setSelectedEmployee","handleSelectedTasks","assignTask","_ref6","_callee6","_context6","length","_useState39","_useState40","ticketDepartment","setTicketDepartment","_useState41","_useState42","ticketEmployees","_useState43","_useState44","tickets","setTickets","role","assignTickets","_ref7","_callee7","_context7","formData","ticketId","find","_ref8","_id","_useState45","_useState46","ticketStats","setTicketStats","reopened","_React$useState19","_React$useState20","expanded","setExpanded","logoRef","useRef","_useState47","_useState48","loading","setLoading","_useState49","_useState50","progress","setProgress","_useState51","_useState52","newInvites","setNewInvites","_useState53","_useState54","selectedRole","setSelectedRole","_Fragment","Dialog","fullScreen","onClose","TransitionComponent","Container","sx","mb","maxWidth","Card","CardContent","display","justifyContent","Paper","elevation","p","Stack","color","Button","size","FormControlLabel","control","Checkbox","label","multiline","rows","List","component","px","py","position","ListItemButton","divider","ListItemText","primary","marginLeft","marginTop","labelId","float","EmployeeTaskForm","rowSpacing","columnSpacing","readOnly","personal","firstName","middleName","lastName","country","offLoc","Divider","manager","empType","Box","flexWrap","gap","hardware","devices","Chip","peripherals","managers","managerEmail","response","comments","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","scope","Link","href","underline","onClick","preventDefault","pt","endDate","delegation","multiple","input","OutlinedInput","renderValue","selected","_ref9","ticket","_ref10","assigned","DialogContentText","autoFocus","margin","placeholder","CardActions","padding","toList","split","trim","_callee3","_index","_context3","join","managerId","displayName","findIndex","req","splice","console","log","cursor","backgroundColor","alt","src","textAlign","borderRadius","AppCurrentDownload","chart","colors","palette","main","info","error","warning","series","ListItemAvatar","Avatar","bgcolor","icon","TabContext","borderBottom","borderColor","TabList","textColor","indicatorColor","Tab","TabPanel","border","startIcon","AddIcon","alignItems","InputBase","flex","inputProps","IconButton","SearchIcon","disableFuture","dep","photoURL","verticalAlign","mr","disabled","RegExp","test","m","state","editable","TextEditor","update","catch","err","message","LoadingButton","loadingPosition","FileUploadRounded","current","click","hidden","accept","file","fileName","uploadTask","storage","child","put","on","uploaded","floor","bytesTransferred","totalBytes","getDownloadURL","remaining","updateCompanyLogo","files","my","Accordion","panel","isExpanded","AccordionSummary","AccordionDetails","clickable","SunEditor","setOptions","showPathLabel","minHeight","plugins","font","fontColor","formatBlock","hiliteColor","horizontalRule","lineHeight","list","paragraphStyle","table","template","textStyle","image","link","buttonList","formats","setDefaultStyle","setContents","getItem","setItem","webpackContext","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}