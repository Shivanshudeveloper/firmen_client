{"version":3,"file":"static/js/6991.8e658f35.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/LinkItem.js","components/custom-breadcrumbs/CustomBreadcrumbs.js","sections/_examples/mui/data-grid/DataGridBasic.js","sections/_examples/mui/data-grid/DataGridCustom.js","pages/components/mui/MUIDataGridPage.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbsLink.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.node,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default function BreadcrumbsLink({ link, activeLast, disabled }) {\r\n  const { name, href, icon } = link;\r\n\r\n  const styles = {\r\n    typography: 'body2',\r\n    alignItems: 'center',\r\n    color: 'text.primary',\r\n    display: 'inline-flex',\r\n    ...(disabled &&\r\n      !activeLast && {\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        color: 'text.disabled',\r\n      }),\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {icon && (\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            mr: 1,\r\n            display: 'inherit',\r\n            '& svg': { width: 20, height: 20 },\r\n          }}\r\n        >\r\n          {icon}\r\n        </Box>\r\n      )}\r\n\r\n      {name}\r\n    </>\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link component={RouterLink} to={href} sx={styles}>\r\n        {renderContent}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <Box sx={styles}> {renderContent} </Box>;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Link, Stack, Typography, Breadcrumbs } from '@mui/material';\r\n//\r\nimport LinkItem from './LinkItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCustomBreadcrumbs.propTypes = {\r\n  sx: PropTypes.object,\r\n  action: PropTypes.node,\r\n  links: PropTypes.array,\r\n  heading: PropTypes.string,\r\n  moreLink: PropTypes.array,\r\n  activeLast: PropTypes.bool,\r\n};\r\n\r\nexport default function CustomBreadcrumbs({\r\n  links,\r\n  action,\r\n  heading,\r\n  moreLink,\r\n  activeLast,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const lastLink = links[links.length - 1].name;\r\n\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {/* HEADING */}\r\n          {heading && (\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {heading}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* BREADCRUMBS */}\r\n          {!!links.length && (\r\n            <Breadcrumbs separator={<Separator />} {...other}>\r\n              {links.map((link) => (\r\n                <LinkItem\r\n                  key={link.name || ''}\r\n                  link={link}\r\n                  activeLast={activeLast}\r\n                  disabled={link.name === lastLink}\r\n                />\r\n              ))}\r\n            </Breadcrumbs>\r\n          )}\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\r\n      </Stack>\r\n\r\n      {/* MORE LINK */}\r\n      {!!moreLink && (\r\n        <Box sx={{ mt: 2 }}>\r\n          {moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction Separator() {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\r\n    />\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { IconButton } from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst columns = [\r\n  {\r\n    field: 'id',\r\n    headerName: 'ID',\r\n    width: 120,\r\n  },\r\n  {\r\n    field: 'firstName',\r\n    headerName: 'First name',\r\n    width: 160,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: 'lastName',\r\n    headerName: 'Last name',\r\n    width: 160,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: 'age',\r\n    headerName: 'Age',\r\n    type: 'number',\r\n    width: 120,\r\n    editable: true,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n  },\r\n  {\r\n    field: 'fullName',\r\n    headerName: 'Full name',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    flex: 1,\r\n    valueGetter: (params) => `${params.row.firstName || ''} ${params.row.lastName || ''}`,\r\n  },\r\n  {\r\n    field: 'action',\r\n    headerName: ' ',\r\n    width: 80,\r\n    align: 'right',\r\n    sortable: false,\r\n    disableColumnMenu: true,\r\n    renderCell: () => (\r\n      <IconButton>\r\n        <Iconify icon=\"eva:more-vertical-fill\" />\r\n      </IconButton>\r\n    ),\r\n  },\r\n];\r\n\r\nDataGridBasic.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default function DataGridBasic({ data }) {\r\n  return <DataGrid columns={columns} rows={data} checkboxSelection disableSelectionOnClick />;\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Stack, Typography, Box, Rating, LinearProgress, IconButton } from '@mui/material';\r\nimport { DataGrid, GridToolbar, getGridNumericOperators } from '@mui/x-data-grid';\r\n// utils\r\nimport { fPercent } from '../../../../utils/formatNumber';\r\n// components\r\nimport Label from '../../../../components/label';\r\nimport Iconify from '../../../../components/iconify';\r\nimport { CustomAvatar } from '../../../../components/custom-avatar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst columns = [\r\n  // OPTIONS\r\n  // https://mui.com/x/api/data-grid/grid-col-def/#main-content\r\n  // - hide: false (default)\r\n  // - editable: false (default)\r\n  // - filterable: true (default)\r\n  // - sortable: true (default)\r\n  // - disableColumnMenu: false (default)\r\n\r\n  // FIELD TYPES\r\n  // --------------------\r\n  // 'string' (default)\r\n  // 'number'\r\n  // 'date'\r\n  // 'dateTime'\r\n  // 'boolean'\r\n  // 'singleSelect'\r\n\r\n  {\r\n    field: 'id',\r\n    hide: true,\r\n  },\r\n  {\r\n    field: 'avatar',\r\n    headerName: 'Avatar',\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    width: 64,\r\n    sortable: false,\r\n    filterable: false,\r\n    disableColumnMenu: true,\r\n    renderCell: (params) => <CustomAvatar name={params.row.name} sx={{ width: 36, height: 36 }} />,\r\n  },\r\n  {\r\n    field: 'name',\r\n    headerName: 'Name',\r\n    flex: 1,\r\n    editable: true,\r\n  },\r\n  {\r\n    field: 'email',\r\n    headerName: 'Email',\r\n    flex: 1,\r\n    editable: true,\r\n    renderCell: (params) => (\r\n      <Typography variant=\"body2\" sx={{ textDecoration: 'underline' }} noWrap>\r\n        {params.row.email}\r\n      </Typography>\r\n    ),\r\n  },\r\n  {\r\n    field: 'lastLogin',\r\n    type: 'dateTime',\r\n    headerName: 'Last login',\r\n    align: 'right',\r\n    headerAlign: 'right',\r\n    width: 200,\r\n  },\r\n  {\r\n    field: 'rating',\r\n    type: 'number',\r\n    headerName: 'Rating',\r\n    width: 160,\r\n    disableColumnMenu: true,\r\n    renderCell: (params) => (\r\n      <Rating size=\"small\" value={params.row.rating} precision={0.5} readOnly />\r\n    ),\r\n  },\r\n  {\r\n    field: 'status',\r\n    type: 'singleSelect',\r\n    headerName: 'Status',\r\n    valueOptions: ['online', 'away', 'busy'],\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    width: 120,\r\n    renderCell: (params) => RenderStatus(params.row.status),\r\n  },\r\n  {\r\n    field: 'isAdmin',\r\n    type: 'boolean',\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    width: 120,\r\n\r\n    renderCell: (params) =>\r\n      params.row.isAdmin ? (\r\n        <Iconify icon=\"eva:checkmark-circle-2-fill\" sx={{ color: 'primary.main' }} />\r\n      ) : (\r\n        '-'\r\n      ),\r\n  },\r\n  {\r\n    field: 'performance',\r\n    type: 'number',\r\n    headerName: 'Performance',\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    width: 160,\r\n    renderCell: (params) => (\r\n      <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 1, width: 1, height: 1 }}>\r\n        <LinearProgress\r\n          value={params.row.performance}\r\n          variant=\"determinate\"\r\n          color={\r\n            (params.row.performance < 30 && 'error') ||\r\n            (params.row.performance > 30 && params.row.performance < 70 && 'warning') ||\r\n            'primary'\r\n          }\r\n          sx={{ width: 1, height: 6 }}\r\n        />\r\n        <Typography variant=\"caption\" sx={{ width: 80 }}>\r\n          {fPercent(params.row.performance)}\r\n        </Typography>\r\n      </Stack>\r\n    ),\r\n  },\r\n  {\r\n    field: 'action',\r\n    headerName: ' ',\r\n    align: 'right',\r\n    width: 80,\r\n    sortable: false,\r\n    filterable: false,\r\n    disableColumnMenu: true,\r\n    renderCell: (params) => (\r\n      <IconButton onClick={() => console.log('ID', params.row.id)}>\r\n        <Iconify icon=\"eva:more-vertical-fill\" />\r\n      </IconButton>\r\n    ),\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nDataGridCustom.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n\r\nexport default function DataGridCustom({ data }) {\r\n  const [selectionModel, setSelectionModel] = useState([]);\r\n\r\n  if (columns.length > 0) {\r\n    const ratingColumn = columns.find((column) => column.field === 'rating');\r\n    const ratingColIndex = columns.findIndex((col) => col.field === 'rating');\r\n\r\n    const ratingFilterOperators = getGridNumericOperators().map((operator) => ({\r\n      ...operator,\r\n      InputComponent: RatingInputValue,\r\n    }));\r\n    columns[ratingColIndex] = {\r\n      ...ratingColumn,\r\n      filterOperators: ratingFilterOperators,\r\n    };\r\n  }\r\n\r\n  const selected = data.filter((row) => selectionModel.includes(row.id));\r\n\r\n  console.log('SELECTED', selected);\r\n\r\n  return (\r\n    <DataGrid\r\n      checkboxSelection\r\n      disableSelectionOnClick\r\n      rows={data}\r\n      columns={columns}\r\n      pagination\r\n      onSelectionModelChange={(newSelectionModel) => {\r\n        setSelectionModel(newSelectionModel);\r\n      }}\r\n      components={{\r\n        Toolbar: GridToolbar,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction RenderStatus(getStatus) {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n  return (\r\n    <Label\r\n      variant={isLight ? 'soft' : 'filled'}\r\n      color={(getStatus === 'busy' && 'error') || (getStatus === 'away' && 'warning') || 'success'}\r\n      sx={{ mx: 'auto' }}\r\n    >\r\n      {getStatus}\r\n    </Label>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRatingInputValue.propTypes = {\r\n  item: PropTypes.object,\r\n  applyValue: PropTypes.func,\r\n};\r\n\r\nfunction RatingInputValue({ item, applyValue }) {\r\n  return (\r\n    <Box sx={{ p: 1, height: 1, alignItems: 'flex-end', display: 'flex' }}>\r\n      <Rating\r\n        size=\"small\"\r\n        precision={0.5}\r\n        placeholder=\"Filter value\"\r\n        value={Number(item.value)}\r\n        onChange={(event, newValue) => {\r\n          applyValue({ ...item, value: newValue });\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { Box, Container, Stack, Card, CardHeader, Typography, Link } from '@mui/material';\r\n// routes\r\nimport { PATH_PAGE } from '../../../routes/paths';\r\n// _mock_\r\nimport _mock, { randomInArray } from '../../../_mock';\r\n// components\r\nimport CustomBreadcrumbs from '../../../components/custom-breadcrumbs';\r\n// sections\r\nimport DataGridBasic from '../../../sections/_examples/mui/data-grid/DataGridBasic';\r\nimport DataGridCustom from '../../../sections/_examples/mui/data-grid/DataGridCustom';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const _dataGrid = [...Array(36)].map((_, index) => ({\r\n  id: _mock.id(index),\r\n  name: _mock.name.fullName(index),\r\n  email: _mock.email(index),\r\n  lastLogin: _mock.time(index),\r\n  performance: _mock.number.percent(index),\r\n  rating: _mock.number.rating(index),\r\n  status: randomInArray(['online', 'away', 'busy']),\r\n  isAdmin: _mock.boolean(index),\r\n  lastName: _mock.name.lastName(index),\r\n  firstName: _mock.name.firstName(index),\r\n  age: _mock.number.age(index),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MUIDataGridPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> MUI Components: DataGrid | Minimal UI</title>\r\n      </Helmet>\r\n\r\n      <Box\r\n        sx={{\r\n          pt: 6,\r\n          pb: 1,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\r\n        }}\r\n      >\r\n        <Container>\r\n          <CustomBreadcrumbs\r\n            heading=\"DataGrid\"\r\n            links={[\r\n              {\r\n                name: 'Components',\r\n                href: PATH_PAGE.components,\r\n              },\r\n              { name: 'DataGrid' },\r\n            ]}\r\n            moreLink={['https://mui.com/x/react-data-grid/']}\r\n            sx={{ mb: 0 }}\r\n          />\r\n\r\n          <Typography variant=\"body2\" sx={{ my: 3 }}>\r\n            This component includes 2 <strong>Free</strong> and <strong>Paid</strong> versions from\r\n            MUI.\r\n            <br />\r\n            Paid version will have more features. Please read more{' '}\r\n            <Link href=\"https://mui.com/x/react-data-grid/\" target=\"_blank\" rel=\"noopener\">\r\n              here\r\n            </Link>\r\n          </Typography>\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container sx={{ my: 10 }}>\r\n        <Stack spacing={5}>\r\n          <Card>\r\n            <CardHeader title=\"Basic\" sx={{ mb: 2 }} />\r\n            <Box sx={{ height: 390 }}>\r\n              <DataGridBasic data={_dataGrid} />\r\n            </Box>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader title=\"Custom\" sx={{ mb: 2 }} />\r\n            <Box sx={{ height: 720 }}>\r\n              <DataGridCustom data={_dataGrid} />\r\n            </Box>\r\n          </Card>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","to","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","mb","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","noWrap","target","rel","borderRadius","bgcolor","columns","field","headerName","editable","type","align","headerAlign","description","flex","valueGetter","params","concat","row","firstName","lastName","sortable","disableColumnMenu","renderCell","IconButton","Iconify","DataGridBasic","data","DataGrid","rows","checkboxSelection","disableSelectionOnClick","hide","filterable","CustomAvatar","textDecoration","email","Rating","size","value","rating","precision","readOnly","valueOptions","getStatus","isLight","useTheme","palette","mode","Label","mx","RenderStatus","status","isAdmin","spacing","px","LinearProgress","performance","fPercent","onClick","console","log","id","DataGridCustom","_useState","useState","_useState2","_slicedToArray","selectionModel","setSelectionModel","ratingColumn","find","column","ratingColIndex","findIndex","col","ratingFilterOperators","getGridNumericOperators","operator","InputComponent","RatingInputValue","filterOperators","selected","filter","includes","pagination","onSelectionModelChange","newSelectionModel","components","Toolbar","GridToolbar","_ref2","item","applyValue","p","placeholder","Number","onChange","event","newValue","_dataGrid","_toConsumableArray","Array","_","index","_mock","lastLogin","randomInArray","age","MUIDataGridPage","Helmet","pt","pb","theme","Container","PATH_PAGE","my","Card","CardHeader","title"],"sourceRoot":""}